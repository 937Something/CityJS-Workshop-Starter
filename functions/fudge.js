!function(t,e){for(var n in e)t[n]=e[n]}(exports,function(t){var e={};function n(r){if(e[r])return e[r].exports;var i=e[r]={i:r,l:!1,exports:{}};return t[r].call(i.exports,i,i.exports,n),i.l=!0,i.exports}return n.m=t,n.c=e,n.d=function(t,e,r){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:r})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var i in t)n.d(r,i,function(e){return t[e]}.bind(null,i));return r},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=304)}([,,,,,,,,,,,,function(t,e){var n=t.exports="undefined"!=typeof window&&window.Math==Math?window:"undefined"!=typeof self&&self.Math==Math?self:Function("return this")();"number"==typeof __g&&(__g=n)},function(t,e,n){"use strict";var r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},i=function(){function t(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}return function(e,n,r){return n&&t(e.prototype,n),r&&t(e,r),e}}();var s=n(200),a=n(94),o=n(73),u=/function ([^(]*)/,h=/((\/\/.*$)|(\/\*[\s\S]*?\*\/))/gm,l=/([^\s,]+)/g,c=function(){var t=new ArrayBuffer(4),e=new Uint32Array(t),n=new Uint8Array(t);if(e[0]=3735928559,239===n[0])return"LE";if(222===n[0])return"BE";throw new Error("unknown endianness")}(),p=null,f=null,d=function(){try{return new Function("let i = 1; const j = 1;")(),!0}catch(t){return!1}}(),g=null,v=function(t){function e(){return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),function(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}(this,(e.__proto__||Object.getPrototypeOf(e)).apply(this,arguments))}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}(e,s),i(e,null,[{key:"systemEndianness",value:function(){return c}},{key:"isFunction",value:function(t){return"function"==typeof t}},{key:"isFunctionString",value:function(t){return null!==t&&"function"===t.toString().slice(0,"function".length).toLowerCase()}},{key:"getFunctionNameFromString",value:function(t){return u.exec(t)[1]}},{key:"getFunctionBodyFromString",value:function(t){return t.substring(t.indexOf("{")+1,t.lastIndexOf("}"))}},{key:"getParamNamesFromString",value:function(t){var e=t.toString().replace(h,""),n=e.slice(e.indexOf("(")+1,e.indexOf(")")).match(l);return null===n&&(n=[]),n}},{key:"clone",value:function(t){if(null===t||"object"!==(void 0===t?"undefined":r(t))||t.hasOwnProperty("isActiveClone"))return t;var n=t.constructor();for(var i in t)Object.prototype.hasOwnProperty.call(t,i)&&(t.isActiveClone=null,n[i]=e.clone(t[i]),delete t.isActiveClone);return n}},{key:"newPromise",value:function(t){var e=Promise||small_promise;if(null===e)throw TypeError("Browser is missing Promise implementation. Consider adding small_promise.js polyfill");return new e(t)}},{key:"functionBinder",value:function(t,e){return t.bind?t.bind(e):function(){var n=1===arguments.length?[arguments[0]]:Array.apply(null,arguments);return t.apply(e,n)}}},{key:"isArray",value:function(t){return!isNaN(t.length)}},{key:"getArgumentType",value:function(t){return e.isArray(t)?"IMG"===t[0].nodeName?"HTMLImageArray":"Array":"number"==typeof t?Number.isInteger(t)?"Integer":"Float":t instanceof o?t.type:t instanceof a?"Input":"IMG"===t.nodeName?"HTMLImage":"Unknown"}},{key:"isFloatReadPixelsSupported",value:function(){if(null!==p)return p;var t=new(n(93))({mode:"webgl-validator"}),e=t.createKernel(function(){return 1},{output:[2],floatTextures:!0,floatOutput:!0,floatOutputForce:!0})();return p=1===e[0],t.destroy(),p}},{key:"isFloatReadPixelsSupportedWebGL2",value:function(){if(null!==f)return f;var t=new(n(93))({mode:"webgl2-validator"}),e=t.createKernel(function(){return 1},{output:[2],floatTextures:!0,floatOutput:!0,floatOutputForce:!0})();return f=1===e[0],t.destroy(),f}},{key:"hasIntegerDivisionAccuracyBug",value:function(){if(null!==g)return g;var t=new(n(93))({mode:"webgl-validator"}),e=t.createKernel(function(t,e){return t[this.thread.x]/e[this.thread.x]},{output:[1]})([6,6030401],[3,3991]);return g=2!==e[0]||1511!==e[1],t.destroy(),g}},{key:"isMixedIdentifiersSupported",value:function(){return d}},{key:"dimToTexSize",value:function(t,e,n){for(var r=e[0],i=e[0],s=e[1],a=1;a<e.length;a++)r*=e[a];if(!t.floatTextures||n&&!t.floatOutput||(i=r=Math.ceil(r/4)),s>1&&i*s===r)return[i,s];for(var o=Math.sqrt(r),u=Math.ceil(o),h=Math.floor(o);u*h>r;)u--,h=Math.ceil(r/u);return[i=h,s=Math.ceil(r/i)]}},{key:"getDimensions",value:function(t,n){var r=void 0;if(e.isArray(t)){for(var i=[],s=t;e.isArray(s);)i.push(s.length),s=s[0];r=i.reverse()}else if(t instanceof o)r=t.output;else{if(!(t instanceof a))throw"Unknown dimensions of "+t;r=t.size}if(n)for(r=e.clone(r);r.length<3;)r.push(1);return new Int32Array(r)}},{key:"pad",value:function(t,e){function n(t){return Array.apply(null,new Array(t)).map(Number.prototype.valueOf,0)}for(var r=t.length+2*e,i=t.map(function(t){return[].concat(n(e),t,n(e))}),s=0;s<e;s++)i=[].concat([n(r)],i,[n(r)]);return i}},{key:"flatten2dArrayTo",value:function(t,e){for(var n=0,r=0;r<t.length;r++)e.set(t[r],n),n+=t[r].length}},{key:"flatten3dArrayTo",value:function(t,e){for(var n=0,r=0;r<t.length;r++)for(var i=0;i<t[r].length;i++)e.set(t[r][i],n),n+=t[r][i].length}},{key:"flattenTo",value:function(t,n){e.isArray(t[0])?e.isArray(t[0][0])?e.flatten3dArrayTo(t,n):e.flatten2dArrayTo(t,n):n.set(t)}},{key:"splitArray",value:function(t,e){for(var n=[],r=0;r<t.length;r+=e)n.push(new t.constructor(t.buffer,4*r+t.byteOffset,e));return n}},{key:"getAstString",value:function(t,e){var n=Array.isArray(t)?t:t.split(/\r?\n/g),r=e.loc.start,i=e.loc.end,s=[];s.push(n[r.line-1].slice(r.column));for(var a=r.line;a<i.line-1;a++)s.push(n[a]);return s.push(n[i.line-1].slice(0,i.column)),s.join("\n")}},{key:"allPropertiesOf",value:function(t){var e=[];do{e.push.apply(e,Object.getOwnPropertyNames(t))}while(t=Object.getPrototypeOf(t));return e}}]),e}();Object.assign(v,s),t.exports=v},,function(t,e,n){t.exports=!n(19)(function(){return 7!=Object.defineProperty({},"a",{get:function(){return 7}}).a})},,,,function(t,e){t.exports=function(t){try{return!!t()}catch(t){return!0}}},function(t,e){t.exports=function(t){return"object"==typeof t?null!==t:"function"==typeof t}},function(t,e){t.exports=require("stream")},,,,,,function(t,e){var n=t.exports={version:"2.6.5"};"number"==typeof __e&&(__e=n)},,,function(t,e,n){var r=n(20);t.exports=function(t){if(!r(t))throw TypeError(t+" is not an object!");return t}},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var r,i=function(){function t(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}return function(e,n,r){return n&&t(e.prototype,n),r&&t(e,r),e}}(),s=n(72),a=(r=s)&&r.__esModule?r:{default:r};var o=function(){function t(e,n){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),void 0!==e&&void 0!==n&&(this.rows=e,this.columns=n,this.weights=(0,a.default)(e*n),this.deltas=(0,a.default)(e*n))}return i(t,[{key:"getWeights",value:function(t,e){var n=this.columns*t+e;if(n<0&&n>=this.weights.length)throw new Error("get accessor is skewed");return this.weights[n]}},{key:"setWeight",value:function(t,e,n){var r=this.columns*t+e;if(r<0&&r>=this.weights.length)throw new Error("set accessor is skewed");this.weights[r]=n}},{key:"setDeltas",value:function(t,e,n){var r=this.columns*t+e;if(r<0&&r>=this.weights.length)throw new Error("set accessor is skewed");this.deltas[r]=n}},{key:"toJSON",value:function(){return{rows:this.rows,columns:this.columns,weights:this.weights.slice(0)}}},{key:"weightsToArray",value:function(){for(var t=[],e=0,n=0,r=0;r<this.weights.length;r++)0===n&&t.push([]),t[e].push(this.weights[r]),++n>=this.columns&&(n=0,e++);return t}},{key:"deltasToArray",value:function(){for(var t=[],e=0,n=0,r=0;r<this.deltas.length;r++)0===n&&t.push([]),t[e].push(this.deltas[r]),++n>=this.columns&&(n=0,e++);return t}}],[{key:"fromJSON",value:function(e){for(var n=new t(e.rows,e.columns),r=0,i=e.rows*e.columns;r<i;r++)n.weights[r]=e.weights[r];return n}},{key:"fromArray",value:function(e,n){var r=e.length,i=e[0].length,s=new t(r,i);n=n||e;for(var a=0;a<r;a++)for(var o=e[a],u=n[a],h=0;h<i;h++)s.setWeight(a,h,o[h]),s.setDeltas(a,h,u[h]);return s}}]),t}();e.default=o},,function(t,e,n){var r=n(36),i=n(55);t.exports=n(15)?function(t,e,n){return r.f(t,e,i(1,n))}:function(t,e,n){return t[e]=n,t}},,,function(t,e,n){var r=n(30),i=n(53),s=n(43),a=Object.defineProperty;e.f=n(15)?Object.defineProperty:function(t,e,n){if(r(t),e=s(e,!0),r(n),i)try{return a(t,e,n)}catch(t){}if("get"in n||"set"in n)throw TypeError("Accessors not supported!");return"value"in n&&(t[e]=n.value),t}},function(t,e,n){var r=n(12),i=n(33),s=n(38),a=n(44)("src"),o=n(68),u=(""+o).split("toString");n(27).inspectSource=function(t){return o.call(t)},(t.exports=function(t,e,n,o){var h="function"==typeof n;h&&(s(n,"name")||i(n,"name",e)),t[e]!==n&&(h&&(s(n,a)||i(n,a,t[e]?""+t[e]:u.join(String(e)))),t===r?t[e]=n:o?t[e]?t[e]=n:i(t,e,n):(delete t[e],i(t,e,n)))})(Function.prototype,"toString",function(){return"function"==typeof this&&this[a]||o.call(this)})},function(t,e){var n={}.hasOwnProperty;t.exports=function(t,e){return n.call(t,e)}},,,,,function(t,e,n){var r=n(20);t.exports=function(t,e){if(!r(t))return t;var n,i;if(e&&"function"==typeof(n=t.toString)&&!r(i=n.call(t)))return i;if("function"==typeof(n=t.valueOf)&&!r(i=n.call(t)))return i;if(!e&&"function"==typeof(n=t.toString)&&!r(i=n.call(t)))return i;throw TypeError("Can't convert object to primitive value")}},function(t,e){var n=0,r=Math.random();t.exports=function(t){return"Symbol(".concat(void 0===t?"":t,")_",(++n+r).toString(36))}},function(t,e,n){var r=n(27),i=n(12),s=i["__core-js_shared__"]||(i["__core-js_shared__"]={});(t.exports=function(t,e){return s[t]||(s[t]=void 0!==e?e:{})})("versions",[]).push({version:r.version,mode:n(69)?"pure":"global",copyright:"© 2019 Denis Pushkarev (zloirock.ru)"})},,,,,,,,function(t,e,n){t.exports=!n(15)&&!n(19)(function(){return 7!=Object.defineProperty(n(54)("div"),"a",{get:function(){return 7}}).a})},function(t,e,n){var r=n(20),i=n(12).document,s=r(i)&&r(i.createElement);t.exports=function(t){return s?i.createElement(t):{}}},function(t,e){t.exports=function(t,e){return{enumerable:!(1&t),configurable:!(2&t),writable:!(4&t),value:e}}},function(t,e,n){var r=n(57);t.exports=function(t,e,n){if(r(t),void 0===e)return t;switch(n){case 1:return function(n){return t.call(e,n)};case 2:return function(n,r){return t.call(e,n,r)};case 3:return function(n,r,i){return t.call(e,n,r,i)}}return function(){return t.apply(e,arguments)}}},function(t,e){t.exports=function(t){if("function"!=typeof t)throw TypeError(t+" is not a function!");return t}},function(t,e){t.exports=function(t){if(null==t)throw TypeError("Can't call method on  "+t);return t}},function(t,e){t.exports=require("fs")},,,,,,,,,function(t,e,n){t.exports=n(45)("native-function-to-string",Function.toString)},function(t,e){t.exports=!1},function(t,e,n){var r=n(12),i=n(27),s=n(33),a=n(37),o=n(56),u=function(t,e,n){var h,l,c,p,f=t&u.F,d=t&u.G,g=t&u.S,v=t&u.P,y=t&u.B,m=d?r:g?r[e]||(r[e]={}):(r[e]||{}).prototype,b=d?i:i[e]||(i[e]={}),x=b.prototype||(b.prototype={});for(h in d&&(n=e),n)c=((l=!f&&m&&void 0!==m[h])?m:n)[h],p=y&&l?o(c,r):v&&"function"==typeof c?o(Function.call,c):c,m&&a(m,h,c,t&u.U),b[h]!=c&&s(b,h,p),v&&x[h]!=c&&(x[h]=c)};r.core=i,u.F=1,u.G=2,u.S=4,u.P=8,u.B=16,u.W=32,u.U=64,u.R=128,t.exports=u},function(t,e){var n=Math.ceil,r=Math.floor;t.exports=function(t){return isNaN(t=+t)?0:(t>0?r:n)(t)}},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default=function(t){return new Float32Array(t)}},function(t,e,n){"use strict";var r=function(){function t(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}return function(e,n,r){return n&&t(e.prototype,n),r&&t(e,r),e}}();t.exports=function(){function t(e,n,r,i,s){var a=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NumberTexture";!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.texture=e,this.size=n,this.dimensions=r,this.output=i,this.webGl=s,this.kernel=null,this.type=a}return r(t,[{key:"toArray",value:function(t){if(!t)throw new Error("You need to pass the GPU object for toArray to work.");return this.kernel?this.kernel(this):(this.kernel=t.createKernel(function(t){return t[this.thread.z][this.thread.y][this.thread.x]}).setOutput(this.output),this.kernel(this))}},{key:"delete",value:function(){return this.webGl.deleteTexture(this.texture)}}]),t}()},function(t,e,n){"use strict";function r(){if(r.returnV)return r.returnV=!1,r.vVal;var t=2*Math.random()-1,e=2*Math.random()-1,n=t*t+e*e;if(0==n||n>1)return r();var i=Math.sqrt(-2*Math.log(n)/n);return r.vVal=e*i,r.returnV=!0,t*i}Object.defineProperty(e,"__esModule",{value:!0}),e.randomF=function(t,e){return Math.random()*(e-t)+t},e.randomI=function(t,e){return Math.floor(Math.random()*(e-t)+t)},e.randomN=function(t,e){return t+r()*e},r.returnV=!1,r.vVal=0},,,,,,,,,,,,,,,,,function(t,e){var n={}.toString;t.exports=function(t){return n.call(t).slice(8,-1)}},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},i=function(){function t(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}return function(e,n,r){return n&&t(e.prototype,n),r&&t(e,r),e}}();var s=function(){function t(){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t)}return i(t,null,[{key:"toTable",value:function(e){var n=e.reduce(function(t,e){return Object.assign(t,e)},{});return t.toHash(n)}},{key:"toTable2D",value:function(t){for(var e={},n=0,r=0;r<t.length;r++)for(var i=t[r],s=0;s<i.length;s++){var a=i[s];for(var o in a)a.hasOwnProperty(o)&&!e.hasOwnProperty(o)&&(e[o]=n++)}return e}},{key:"toInputTable",value:function(t){for(var e={},n=0,r=0;r<t.length;r++)for(var i in t[r].input)e.hasOwnProperty(i)||(e[i]=n++);return e}},{key:"toInputTable2D",value:function(t){for(var e={},n=0,r=0;r<t.length;r++)for(var i=t[r].input,s=0;s<i.length;s++){var a=i[s];for(var o in a)e.hasOwnProperty(o)||(e[o]=n++)}return e}},{key:"toOutputTable",value:function(t){for(var e={},n=0,r=0;r<t.length;r++)for(var i in t[r].output)e.hasOwnProperty(i)||(e[i]=n++);return e}},{key:"toOutputTable2D",value:function(t){for(var e={},n=0,r=0;r<t.length;r++)for(var i=t[r].output,s=0;s<i.length;s++){var a=i[s];for(var o in a)e.hasOwnProperty(o)||(e[o]=n++)}return e}},{key:"toHash",value:function(t){var e={},n=0;for(var r in t)e[r]=n++;return e}},{key:"toArray",value:function(t,e,n){var r=new Float32Array(n);for(var i in t)r[t[i]]=e.hasOwnProperty(i)?e[i]:0;return r}},{key:"toArrayShort",value:function(t,e){var n=[];for(var r in t){if(!e.hasOwnProperty(r))break;n[t[r]]=e[r]}return Float32Array.from(n)}},{key:"toArrays",value:function(t,e,n){for(var r=[],i=0;i<e.length;i++)r.push(this.toArray(t,e[i],n));return r}},{key:"toObject",value:function(t,e){var n={};for(var r in t)n[r]=e[t[r]];return n}},{key:"toObjectPartial",value:function(t,e){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,i={},s=0;for(var a in t)n>0&&s++<n||r>0&&s++>=r||(i[a]=e[t[a]-n]);return i}},{key:"lookupFromArray",value:function(t){for(var e={},n=0,r=t.length;r-- >0;)e[t[r]]=n++;return e}},{key:"dataShape",value:function(t){var e=[];t.input?(e.push("datum"),t=t.input):Array.isArray(t)&&(t[0].input?(e.push("array","datum"),t=t[0].input):(e.push("array"),t=t[0]));for(var n=void 0;t;){for(n in t)break;if(!t.hasOwnProperty(n))break;if(Array.isArray(t)||t.buffer instanceof ArrayBuffer)e.push("array"),t=t[n];else{if("object"!==(void 0===t?"undefined":r(t)))throw new Error("unhandled signature");e.push("object"),t=t[n]}}return e.push(void 0===t?"undefined":r(t)),e}},{key:"addKeys",value:function(t,e){if(!Array.isArray(t)){e=e||{};var n=Object.keys(e).length;for(var r in t)t.hasOwnProperty(r)&&(e.hasOwnProperty(r)||(e[r]=n++));return e}}}]),t}();e.default=s},function(t,e,n){"use strict";var r=n(318),i=n(329),s=n(13),a=n(94),o=n(73),u=n(210),h=n(211),l=n(209),c=n(208),p=n(203),f=n(145),d=n(95),g=n(201),v=n(206),y=n(207),m=n(146),b=n(205);r.alias=i,r.utils=s,r.Texture=o,r.Input=a,r.input=function(t,e){return new a(t,e)},r.CPUFunctionBuilder=u,r.CPUFunctionNode=h,r.CPUKernel=l,r.CPURunner=c,r.WebGLFunctionBuilder=p,r.WebGLFunctionNode=f,r.WebGLKernel=d,r.WebGLRunner=g,r.WebGL2FunctionBuilder=v,r.WebGL2FunctionNode=y,r.WebGL2Kernel=m,r.WebGL2Runner=b,t.exports=r,"undefined"!=typeof window&&(window.GPU=r),"undefined"!=typeof self&&(self.GPU=r)},function(t,e,n){"use strict";t.exports=function t(e,n){if(function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.value=e,Array.isArray(n)){this.size=[];for(var r=0;r<n.length;r++)this.size[r]=n[r];for(;this.size.length<3;)this.size.push(1)}else n.z?this.size=[n.x,n.y,n.z]:n.y?this.size=[n.x,n.y,1]:this.size=[n.x,1,1]}},function(t,e,n){"use strict";var r=function(){function t(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}return function(e,n,r){return n&&t(e.prototype,n),r&&t(e,r),e}}();var i=n(202),s=n(13),a=n(73),o=n(319),u=n(320),h=n(321),l=[],c={};t.exports=function(t){function e(t,n){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e);var r=function(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}(this,(e.__proto__||Object.getPrototypeOf(e)).call(this,t,n));return r.textureCache={},r.threadDim={},r.programUniformLocationCache={},r.framebuffer=null,r.buffer=null,r.program=null,r.outputToTexture=n.outputToTexture,r.endianness=s.systemEndianness(),r.subKernelOutputTextures=null,r.subKernelOutputVariableNames=null,r.argumentsLength=0,r.constantsLength=0,r.compiledFragShaderString=null,r.compiledVertShaderString=null,r.fragShader=null,r.vertShader=null,r.drawBuffersMap=null,r.outputTexture=null,r.maxTexSize=null,r.uniform1fCache={},r.uniform1iCache={},r.uniform2fCache={},r.uniform2fvCache={},r.uniform2ivCache={},r.uniform3fvCache={},r.uniform3ivCache={},r._webGl||(r._webGl=r.initWebGl()),r}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}(e,i),r(e,null,[{key:"fragShaderString",get:function(){return o}},{key:"vertShaderString",get:function(){return u}}]),r(e,[{key:"initWebGl",value:function(){return s.initWebGl(this.getCanvas())}},{key:"validateOptions",value:function(){var t=s.isFloatReadPixelsSupported();if(!0===this.floatTextures&&!s.OES_texture_float)throw new Error("Float textures are not supported on this browser");if(!0===this.floatOutput&&!0!==this.floatOutputForce&&!t)throw new Error("Float texture outputs are not supported on this browser");void 0===this.floatTextures&&s.OES_texture_float&&(this.floatTextures=!0,this.floatOutput=t);var e=s.hasIntegerDivisionAccuracyBug();if(null===this.fixIntegerDivisionAccuracy?this.fixIntegerDivisionAccuracy=e:this.fixIntegerDivisionAccuracy&&!e&&(this.fixIntegerDivisionAccuracy=!1),s.checkOutput(this.output),!this.output||0===this.output.length){if(1!==arguments.length)throw new Error("Auto output only supported for kernels with only one input");var n=s.getArgumentType(arguments[0]);if("Array"===n)this.output=s.getDimensions(n);else{if("NumberTexture"!==n&&"ArrayTexture(4)"!==n)throw new Error("Auto output not supported for input type: "+n);this.output=arguments[0].output}}if(this.texSize=s.dimToTexSize({floatTextures:this.floatTextures,floatOutput:this.floatOutput},this.output,!0),this.graphical){if(2!==this.output.length)throw new Error("Output must have 2 dimensions on graphical mode");this.floatOutput&&(this.floatOutput=!1,console.warn("Cannot use graphical mode and float output at the same time")),this.texSize=s.clone(this.output)}else void 0===this.floatOutput&&s.OES_texture_float&&(this.floatOutput=!0)}},{key:"updateMaxTexSize",value:function(){var t=this.texSize,e=this._canvas;if(null===this.maxTexSize){var n=l.indexOf(e);-1===n&&(n=l.length,l.push(e),c[n]=[t[0],t[1]]),this.maxTexSize=c[n]}this.maxTexSize[0]<t[0]&&(this.maxTexSize[0]=t[0]),this.maxTexSize[1]<t[1]&&(this.maxTexSize[1]=t[1])}},{key:"build",value:function(){this.validateOptions(),this.setupConstants(),this.setupParams(arguments),this.updateMaxTexSize();var t=this.texSize,e=this._webGl,n=this._canvas;e.enable(e.SCISSOR_TEST),e.viewport(0,0,this.maxTexSize[0],this.maxTexSize[1]),n.width=this.maxTexSize[0],n.height=this.maxTexSize[1];for(var r=this.threadDim=s.clone(this.output);r.length<3;)r.push(1);this.functionBuilder&&this._addKernels();var i=this._getVertShaderString(arguments),a=e.createShader(e.VERTEX_SHADER);e.shaderSource(a,i),e.compileShader(a),this.vertShader=a;var o=this._getFragShaderString(arguments),u=e.createShader(e.FRAGMENT_SHADER);if(e.shaderSource(u,o),e.compileShader(u),this.fragShader=u,!e.getShaderParameter(a,e.COMPILE_STATUS))throw console.log(i),console.error("An error occurred compiling the shaders: "+e.getShaderInfoLog(a)),new Error("Error compiling vertex shader");if(!e.getShaderParameter(u,e.COMPILE_STATUS))throw console.log(o),console.error("An error occurred compiling the shaders: "+e.getShaderInfoLog(u)),new Error("Error compiling fragment shader");this.debug&&(console.log("Options:"),console.dir(this),console.log("GLSL Shader Output:"),console.log(o));var h=this.program=e.createProgram();e.attachShader(h,a),e.attachShader(h,u),e.linkProgram(h),this.framebuffer=e.createFramebuffer(),this.framebuffer.width=t[0],this.framebuffer.height=t[1];var l=new Float32Array([-1,-1,1,-1,-1,1,1,1]),c=new Float32Array([0,0,1,0,0,1,1,1]),p=l.byteLength,f=this.buffer;f?e.bindBuffer(e.ARRAY_BUFFER,f):(f=this.buffer=e.createBuffer(),e.bindBuffer(e.ARRAY_BUFFER,f),e.bufferData(e.ARRAY_BUFFER,l.byteLength+c.byteLength,e.STATIC_DRAW)),e.bufferSubData(e.ARRAY_BUFFER,0,l),e.bufferSubData(e.ARRAY_BUFFER,p,c);var d=e.getAttribLocation(this.program,"aPos");e.enableVertexAttribArray(d),e.vertexAttribPointer(d,2,e.FLOAT,e.FALSE,0,0);var g=e.getAttribLocation(this.program,"aTexCoord");for(var v in e.enableVertexAttribArray(g),e.vertexAttribPointer(g,2,e.FLOAT,e.FALSE,0,p),e.bindFramebuffer(e.FRAMEBUFFER,this.framebuffer),this.constants){var y=this.constants[v],m=s.getArgumentType(y);"Float"!==m&&"Integer"!==m&&(e.useProgram(this.program),this._addConstant(this.constants[v],m,v),this.constantsLength++)}this.outputImmutable||(this._setupOutputTexture(),null!==this.subKernelOutputVariableNames&&this.subKernelOutputVariableNames.length>0&&this._setupSubOutputTextures(this.subKernelOutputVariableNames.length))}},{key:"run",value:function(){null===this.program&&this.build.apply(this,arguments);var t=this.paramNames,e=this.paramTypes,n=this.texSize,r=this._webGl;r.useProgram(this.program),r.scissor(0,0,n[0],n[1]),this.hardcodeConstants||(this.setUniform3iv("uOutputDim",this.threadDim),this.setUniform2iv("uTexSize",n)),this.setUniform2f("ratio",n[0]/this.maxTexSize[0],n[1]/this.maxTexSize[1]),this.argumentsLength=0;for(var i=0;i<t.length;i++)this._addArgument(arguments[i],e[i],t[i]);if(this.graphical)return this.outputToTexture?(r.bindRenderbuffer(r.RENDERBUFFER,null),r.bindFramebuffer(r.FRAMEBUFFER,this.framebuffer),this.outputTexture&&!this.outputImmutable||this._setupOutputTexture(),r.drawArrays(r.TRIANGLE_STRIP,0,4),new a(this.outputTexture,n,this.threadDim,this.output,this._webGl,"ArrayTexture(4)")):(r.bindRenderbuffer(r.RENDERBUFFER,null),r.bindFramebuffer(r.FRAMEBUFFER,null),void r.drawArrays(r.TRIANGLE_STRIP,0,4));r.bindFramebuffer(r.FRAMEBUFFER,this.framebuffer),this.outputImmutable&&this._setupOutputTexture();var s=this.outputTexture;if(null!==this.subKernelOutputVariableNames&&(this.outputImmutable&&(this.subKernelOutputTextures=[],this._setupSubOutputTextures(this.subKernelOutputVariableNames.length)),this.drawBuffers.drawBuffersWEBGL(this.drawBuffersMap)),r.drawArrays(r.TRIANGLE_STRIP,0,4),null!==this.subKernelOutputTextures){if(null!==this.subKernels){var o=[];o.result=this.renderOutput(s);for(var u=0;u<this.subKernels.length;u++)o.push(new a(this.subKernelOutputTextures[u],n,this.threadDim,this.output,this._webGl));return o}if(null!==this.subKernelProperties){var h={result:this.renderOutput(s)},l=0;for(var c in this.subKernelProperties)this.subKernelProperties.hasOwnProperty(c)&&(h[c]=new a(this.subKernelOutputTextures[l],n,this.threadDim,this.output,this._webGl),l++);return h}}return this.renderOutput(s)}},{key:"renderOutput",value:function(t){var e=this.texSize,n=this._webGl,r=this.threadDim,i=this.output;if(this.outputToTexture)return new a(t,e,this.threadDim,i,this._webGl);var o=void 0;if(this.floatOutput){var u=e[0],h=Math.ceil(e[1]/4);o=new Float32Array(u*h*4),n.readPixels(0,0,u,h,n.RGBA,n.FLOAT,o)}else{var l=new Uint8Array(e[0]*e[1]*4);n.readPixels(0,0,e[0],e[1],n.RGBA,n.UNSIGNED_BYTE,l),o=new Float32Array(l.buffer)}return o=o.subarray(0,r[0]*r[1]*r[2]),1===i.length?o:2===i.length?s.splitArray(o,i[0]):3===i.length?s.splitArray(o,i[0]*i[1]).map(function(t){return s.splitArray(t,i[0])}):void 0}},{key:"getOutputTexture",value:function(){return this.outputTexture}},{key:"_setupOutputTexture",value:function(){var t=this._webGl,e=this.texSize,n=this.outputTexture=this._webGl.createTexture();t.activeTexture(t.TEXTURE0+this.constantsLength+this.paramNames.length),t.bindTexture(t.TEXTURE_2D,n),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MIN_FILTER,t.NEAREST),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MAG_FILTER,t.NEAREST),this.floatOutput?t.texImage2D(t.TEXTURE_2D,0,t.RGBA,e[0],e[1],0,t.RGBA,t.FLOAT,null):t.texImage2D(t.TEXTURE_2D,0,t.RGBA,e[0],e[1],0,t.RGBA,t.UNSIGNED_BYTE,null),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,n,0)}},{key:"_setupSubOutputTextures",value:function(t){for(var e=this._webGl,n=this.texSize,r=this.drawBuffersMap=[e.COLOR_ATTACHMENT0],i=this.subKernelOutputTextures=[],s=0;s<t;s++){var a=this._webGl.createTexture();i.push(a),r.push(e.COLOR_ATTACHMENT0+s+1),e.activeTexture(e.TEXTURE0+this.constantsLength+this.paramNames.length+s),e.bindTexture(e.TEXTURE_2D,a),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.NEAREST),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,e.NEAREST),this.floatOutput?e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n[0],n[1],0,e.RGBA,e.FLOAT,null):e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n[0],n[1],0,e.RGBA,e.UNSIGNED_BYTE,null),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0+s+1,e.TEXTURE_2D,a,0)}}},{key:"getArgumentTexture",value:function(t){return this.getTextureCache("ARGUMENT_"+t)}},{key:"getTextureCache",value:function(t){return this.textureCache.hasOwnProperty(t)?this.textureCache[t]:this.textureCache[t]=this._webGl.createTexture()}},{key:"detachTextureCache",value:function(t){delete this.textureCache[t]}},{key:"setUniform1f",value:function(t,e){if(this.uniform1fCache.hasOwnProperty(t)&&e===this.uniform1fCache[t])return;this.uniform1fCache[t]=e;var n=this.getUniformLocation(t);this._webGl.uniform1f(n,e)}},{key:"setUniform1i",value:function(t,e){if(this.uniform1iCache.hasOwnProperty(t)&&e===this.uniform1iCache[t])return;this.uniform1iCache[t]=e;var n=this.getUniformLocation(t);this._webGl.uniform1i(n,e)}},{key:"setUniform2f",value:function(t,e,n){if(this.uniform2fCache.hasOwnProperty(t)){var r=this.uniform2fCache[t];if(e===r[0]&&n===r[1])return}this.uniform2fCache[t]=[e,n];var i=this.getUniformLocation(t);this._webGl.uniform2f(i,e,n)}},{key:"setUniform2fv",value:function(t,e){if(this.uniform2fvCache.hasOwnProperty(t)){var n=this.uniform2fvCache[t];if(e[0]===n[0]&&e[1]===n[1])return}this.uniform2fvCache[t]=e;var r=this.getUniformLocation(t);this._webGl.uniform2fv(r,e)}},{key:"setUniform2iv",value:function(t,e){if(this.uniform2ivCache.hasOwnProperty(t)){var n=this.uniform2ivCache[t];if(e[0]===n[0]&&e[1]===n[1])return}this.uniform2ivCache[t]=e;var r=this.getUniformLocation(t);this._webGl.uniform2iv(r,e)}},{key:"setUniform3fv",value:function(t,e){if(this.uniform3fvCache.hasOwnProperty(t)){var n=this.uniform3fvCache[t];if(e[0]===n[0]&&e[1]===n[1]&&e[2]===n[2])return}this.uniform3fvCache[t]=e;var r=this.getUniformLocation(t);this._webGl.uniform3fv(r,e)}},{key:"setUniform3iv",value:function(t,e){if(this.uniform3ivCache.hasOwnProperty(t)){var n=this.uniform3ivCache[t];if(e[0]===n[0]&&e[1]===n[1]&&e[2]===n[2])return}this.uniform3ivCache[t]=e;var r=this.getUniformLocation(t);this._webGl.uniform3iv(r,e)}},{key:"getUniformLocation",value:function(t){return this.programUniformLocationCache.hasOwnProperty(t)?this.programUniformLocationCache[t]:this.programUniformLocationCache[t]=this._webGl.getUniformLocation(this.program,t)}},{key:"_getFragShaderArtifactMap",value:function(t){return{HEADER:this._getHeaderString(),LOOP_MAX:this._getLoopMaxString(),CONSTANTS:this._getConstantsString(),DECODE32_ENDIANNESS:this._getDecode32EndiannessString(),ENCODE32_ENDIANNESS:this._getEncode32EndiannessString(),DIVIDE_WITH_INTEGER_CHECK:this._getDivideWithIntegerCheckString(),GET_WRAPAROUND:this._getGetWraparoundString(),GET_TEXTURE_CHANNEL:this._getGetTextureChannelString(),GET_TEXTURE_INDEX:this._getGetTextureIndexString(),GET_RESULT:this._getGetResultString(),MAIN_PARAMS:this._getMainParamsString(t),MAIN_CONSTANTS:this._getMainConstantsString(),KERNEL:this._getKernelString(),MAIN_RESULT:this._getMainResultString()}}},{key:"_addArgument",value:function(t,e,n){var r=this._webGl,i=this.getArgumentTexture(n);switch(t instanceof a&&(e=t.type),e){case"Array":case"Array(2)":case"Array(3)":case"Array(4)":case"Array2D":case"Array3D":var o=s.getDimensions(t,!0),u=s.dimToTexSize({floatTextures:this.floatTextures,floatOutput:this.floatOutput},o);r.activeTexture(r.TEXTURE0+this.constantsLength+this.argumentsLength),r.bindTexture(r.TEXTURE_2D,i),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_WRAP_S,r.CLAMP_TO_EDGE),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_WRAP_T,r.CLAMP_TO_EDGE),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MIN_FILTER,r.NEAREST),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MAG_FILTER,r.NEAREST);var h=u[0]*u[1],l=this._formatArrayTransfer(t,h),c=l.valuesFlat,p=l.bitRatio,f=void 0;this.floatTextures?r.texImage2D(r.TEXTURE_2D,0,r.RGBA,u[0],u[1],0,r.RGBA,r.FLOAT,c):(f=new Uint8Array(c.buffer),r.texImage2D(r.TEXTURE_2D,0,r.RGBA,u[0]/p,u[1],0,r.RGBA,r.UNSIGNED_BYTE,f)),this.hardcodeConstants||(this.setUniform3iv("user_"+n+"Dim",o),this.setUniform2iv("user_"+n+"Size",u)),this.setUniform1i("user_"+n+"BitRatio",p),this.setUniform1i("user_"+n,this.argumentsLength);break;case"Integer":case"Float":case"Number":this.setUniform1f("user_"+n,t);break;case"Input":var d=t.size,g=s.dimToTexSize({floatTextures:this.floatTextures,floatOutput:this.floatOutput},d);r.activeTexture(r.TEXTURE0+this.constantsLength+this.argumentsLength),r.bindTexture(r.TEXTURE_2D,i),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_WRAP_S,r.CLAMP_TO_EDGE),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_WRAP_T,r.CLAMP_TO_EDGE),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MIN_FILTER,r.NEAREST),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MAG_FILTER,r.NEAREST);var v=g[0]*g[1],y=this._formatArrayTransfer(t.value,v),m=y.valuesFlat,b=y.bitRatio;if(this.floatTextures)r.texImage2D(r.TEXTURE_2D,0,r.RGBA,g[0],g[1],0,r.RGBA,r.FLOAT,inputArray);else{var x=new Uint8Array(m.buffer);r.texImage2D(r.TEXTURE_2D,0,r.RGBA,g[0]/b,g[1],0,r.RGBA,r.UNSIGNED_BYTE,x)}this.hardcodeConstants||(this.setUniform3iv("user_"+n+"Dim",d),this.setUniform2iv("user_"+n+"Size",g)),this.setUniform1i("user_"+n+"BitRatio",b),this.setUniform1i("user_"+n,this.argumentsLength);break;case"HTMLImage":var _=t,T=[_.width,_.height,1],w=[_.width,_.height];r.activeTexture(r.TEXTURE0+this.constantsLength+this.argumentsLength),r.bindTexture(r.TEXTURE_2D,i),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_WRAP_S,r.CLAMP_TO_EDGE),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_WRAP_T,r.CLAMP_TO_EDGE),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MIN_FILTER,r.NEAREST),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MAG_FILTER,r.NEAREST),r.pixelStorei(r.UNPACK_FLIP_Y_WEBGL,!0);var E=r.RGBA,k=r.RGBA,S=r.UNSIGNED_BYTE;r.texImage2D(r.TEXTURE_2D,0,E,k,S,_),this.setUniform3iv("user_"+n+"Dim",T),this.setUniform2iv("user_"+n+"Size",w),this.setUniform1i("user_"+n,this.argumentsLength);break;case"ArrayTexture(4)":case"NumberTexture":var O=t,A=O.dimensions,P=O.size;r.activeTexture(r.TEXTURE0+this.constantsLength+this.argumentsLength),r.bindTexture(r.TEXTURE_2D,O.texture),this.setUniform3iv("user_"+n+"Dim",A),this.setUniform2iv("user_"+n+"Size",P),this.setUniform1i("user_"+n+"BitRatio",1),this.setUniform1i("user_"+n,this.argumentsLength);break;default:throw new Error("Input type not supported (WebGL): "+t)}this.argumentsLength++}},{key:"_addConstant",value:function(t,e,n){var r=this._webGl,i=this.getArgumentTexture(n);switch(t instanceof a&&(e=t.type),e){case"Array":var o=s.getDimensions(t,!0),u=s.dimToTexSize({floatTextures:this.floatTextures,floatOutput:this.floatOutput},o);r.activeTexture(r.TEXTURE0+this.constantsLength),r.bindTexture(r.TEXTURE_2D,i),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_WRAP_S,r.CLAMP_TO_EDGE),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_WRAP_T,r.CLAMP_TO_EDGE),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MIN_FILTER,r.NEAREST),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MAG_FILTER,r.NEAREST);var h=u[0]*u[1],l=this._formatArrayTransfer(t,h),c=l.valuesFlat,p=l.bitRatio,f=void 0;this.floatTextures?r.texImage2D(r.TEXTURE_2D,0,r.RGBA,u[0],u[1],0,r.RGBA,r.FLOAT,c):(f=new Uint8Array(c.buffer),r.texImage2D(r.TEXTURE_2D,0,r.RGBA,u[0]/p,u[1],0,r.RGBA,r.UNSIGNED_BYTE,f)),this.hardcodeConstants||(this.setUniform3iv("constants_"+n+"Dim",o),this.setUniform2iv("constants_"+n+"Size",u)),this.setUniform1i("constants_"+n+"BitRatio",p),this.setUniform1i("constants_"+n,this.constantsLength);break;case"Input":var d=t.size,g=s.dimToTexSize({floatTextures:this.floatTextures,floatOutput:this.floatOutput},d);r.activeTexture(r.TEXTURE0+this.constantsLength),r.bindTexture(r.TEXTURE_2D,i),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_WRAP_S,r.CLAMP_TO_EDGE),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_WRAP_T,r.CLAMP_TO_EDGE),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MIN_FILTER,r.NEAREST),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MAG_FILTER,r.NEAREST);var v=g[0]*g[1],y=this._formatArrayTransfer(t.value,v),m=y.valuesFlat,b=y.bitRatio;if(this.floatTextures)r.texImage2D(r.TEXTURE_2D,0,r.RGBA,g[0],g[1],0,r.RGBA,r.FLOAT,inputArray);else{var x=new Uint8Array(m.buffer);r.texImage2D(r.TEXTURE_2D,0,r.RGBA,g[0]/b,g[1],0,r.RGBA,r.UNSIGNED_BYTE,x)}this.hardcodeConstants||(this.setUniform3iv("constants_"+n+"Dim",d),this.setUniform2iv("constants_"+n+"Size",g)),this.setUniform1i("constants_"+n+"BitRatio",b),this.setUniform1i("constants_"+n,this.constantsLength);break;case"HTMLImage":var _=t,T=[_.width,_.height,1],w=[_.width,_.height];r.activeTexture(r.TEXTURE0+this.constantsLength),r.bindTexture(r.TEXTURE_2D,i),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_WRAP_S,r.CLAMP_TO_EDGE),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_WRAP_T,r.CLAMP_TO_EDGE),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MIN_FILTER,r.NEAREST),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MAG_FILTER,r.NEAREST),r.pixelStorei(r.UNPACK_FLIP_Y_WEBGL,!0);var E=r.RGBA,k=r.RGBA,S=r.UNSIGNED_BYTE;r.texImage2D(r.TEXTURE_2D,0,E,k,S,_),this.setUniform3iv("constants_"+n+"Dim",T),this.setUniform2iv("constants_"+n+"Size",w),this.setUniform1i("constants_"+n,this.constantsLength);break;case"ArrayTexture(4)":case"NumberTexture":var O=t,A=O.dimensions,P=O.size;r.activeTexture(r.TEXTURE0+this.constantsLength),r.bindTexture(r.TEXTURE_2D,O.texture),this.setUniform3iv("constants_"+n+"Dim",A),this.setUniform2iv("constants_"+n+"Size",P),this.setUniform1i("constants_"+n+"BitRatio",1),this.setUniform1i("constants_"+n,this.constantsLength);break;case"Integer":case"Float":default:throw new Error("Input type not supported (WebGL): "+t)}}},{key:"_formatArrayTransfer",value:function(t,e){var n=1,r=t;if(s.isArray(t[0])||this.floatTextures)r=new Float32Array(e),s.flattenTo(t,r);else switch(t.constructor){case Uint8Array:case Int8Array:n=4;break;case Uint16Array:case Int16Array:n=2;case Float32Array:case Int32Array:break;default:r=new Float32Array(e),s.flattenTo(t,r)}return{bitRatio:n,valuesFlat:r}}},{key:"_getHeaderString",value:function(){return null!==this.subKernels||null!==this.subKernelProperties?"#extension GL_EXT_draw_buffers : require\n":""}},{key:"_getLoopMaxString",value:function(){return this.loopMaxIterations?" "+parseInt(this.loopMaxIterations)+".0;\n":" 1000.0;\n"}},{key:"_getConstantsString",value:function(){var t=[],e=this.threadDim,n=this.texSize;return this.hardcodeConstants?t.push("ivec3 uOutputDim = ivec3("+e[0]+","+e[1]+", "+e[2]+")","ivec2 uTexSize = ivec2("+n[0]+", "+n[1]+")"):t.push("uniform ivec3 uOutputDim","uniform ivec2 uTexSize"),this._linesToString(t)}},{key:"_getTextureCoordinate",value:function(){var t=this.subKernelOutputVariableNames;return null===t||t.length<1?"varying vec2 vTexCoord;\n":"out vec2 vTexCoord;\n"}},{key:"_getDecode32EndiannessString",value:function(){return"LE"===this.endianness?"":"  rgba.rgba = rgba.abgr;\n"}},{key:"_getEncode32EndiannessString",value:function(){return"LE"===this.endianness?"":"  rgba.rgba = rgba.abgr;\n"}},{key:"_getDivideWithIntegerCheckString",value:function(){return this.fixIntegerDivisionAccuracy?"\n\t\t\t  float div_with_int_check(float x, float y) {\n\t\t\t  if (floor(x) == x && floor(y) == y && integerMod(x, y) == 0.0) {\n\t\t\t    return float(int(x)/int(y));\n\t\t\t  }\n\t\t\t  return x / y;\n\t\t\t}\n\t\t\t":""}},{key:"_getGetWraparoundString",value:function(){return this.wraparound?"  xyz = mod(xyz, texDim);\n":""}},{key:"_getGetTextureChannelString",value:function(){return this.floatTextures?this._linesToString(["  int channel = integerMod(index, 4)","  index = index / 4"]):""}},{key:"_getGetTextureIndexString",value:function(){return this.floatTextures?"  index = index / 4;\n":""}},{key:"_getGetResultString",value:function(){return this.floatTextures?this._linesToString(["  if (channel == 0) return texel.r","  if (channel == 1) return texel.g","  if (channel == 2) return texel.b","  if (channel == 3) return texel.a"]):"  return decode(texel, x, bitRatio);"}},{key:"_getMainParamsString",value:function(t){for(var e=[],n=this.paramTypes,r=this.paramNames,i=0;i<r.length;i++){var a=t[i],o=r[i],u=n[i];if(this.hardcodeConstants)if("Array"===u||"NumberTexture"===u||"ArrayTexture(4)"===u){var h=s.getDimensions(a,!0),l=s.dimToTexSize({floatTextures:this.floatTextures,floatOutput:this.floatOutput},h);e.push("uniform sampler2D user_"+o,"ivec2 user_"+o+"Size = ivec2("+l[0]+", "+l[1]+")","ivec3 user_"+o+"Dim = ivec3("+h[0]+", "+h[1]+", "+h[2]+")","uniform int user_"+o+"BitRatio")}else"Integer"===u?e.push("float user_"+o+" = "+a+".0"):"Float"===u&&e.push("float user_"+o+" = "+a);else if("Array"===u||"NumberTexture"===u||"ArrayTexture(4)"===u||"Input"===u||"HTMLImage"===u)e.push("uniform sampler2D user_"+o,"uniform ivec2 user_"+o+"Size","uniform ivec3 user_"+o+"Dim"),"HTMLImage"!==u&&e.push("uniform int user_"+o+"BitRatio");else{if("Integer"!==u&&"Float"!==u)throw new Error("Param type "+u+" not supported in WebGL, only WebGL2");e.push("uniform float user_"+o)}}return this._linesToString(e)}},{key:"_getMainConstantsString",value:function(){var t=[];if(this.constants)for(var e in this.constants)if(this.constants.hasOwnProperty(e)){var n=this.constants[e],r=s.getArgumentType(n);switch(r){case"Integer":t.push("const float constants_"+e+" = "+parseInt(n)+".0");break;case"Float":t.push("const float constants_"+e+" = "+parseFloat(n));break;case"Array":case"Input":case"HTMLImage":case"NumberTexture":case"ArrayTexture(4)":t.push("uniform sampler2D constants_"+e,"uniform ivec2 constants_"+e+"Size","uniform ivec3 constants_"+e+"Dim","uniform int constants_"+e+"BitRatio");break;default:throw new Error("Unsupported constant "+e+" type "+r)}}return this._linesToString(t)}},{key:"_getKernelString",value:function(){var t=[],e=this.subKernelOutputVariableNames;if(null!==e){t.push("float kernelResult = 0.0");for(var n=0;n<e.length;n++)t.push("float "+e[n]+" = 0.0")}else t.push("float kernelResult = 0.0");return this._linesToString(t)+this.functionBuilder.getPrototypeString("kernel")}},{key:"_getMainResultString",value:function(){var t=this.subKernelOutputVariableNames,e=[];if(this.floatOutput&&e.push("  index *= 4"),this.graphical)e.push("  threadId = indexTo3D(index, uOutputDim)","  kernel()","  gl_FragColor = actualColor");else if(this.floatOutput)for(var n=["r","g","b","a"],r=0;r<n.length;++r){if(e.push("  threadId = indexTo3D(index, uOutputDim)"),e.push("  kernel()"),t){e.push("  gl_FragData[0]."+n[r]+" = kernelResult");for(var i=0;i<t.length;++i)e.push("  gl_FragData["+(i+1)+"]."+n[r]+" = "+t[i])}else e.push("  gl_FragColor."+n[r]+" = kernelResult");r<n.length-1&&e.push("  index += 1")}else if(null!==t){e.push("  threadId = indexTo3D(index, uOutputDim)"),e.push("  kernel()"),e.push("  gl_FragData[0] = encode32(kernelResult)");for(var s=0;s<t.length;s++)e.push("  gl_FragData["+(s+1)+"] = encode32("+t[s]+")")}else e.push("  threadId = indexTo3D(index, uOutputDim)","  kernel()","  gl_FragColor = encode32(kernelResult)");return this._linesToString(e)}},{key:"_linesToString",value:function(t){return t.length>0?t.join(";\n")+";\n":"\n"}},{key:"_replaceArtifacts",value:function(t,e){return t.replace(/[ ]*__([A-Z]+[0-9]*([_]?[A-Z])*)__;\n/g,function(t,n){if(e.hasOwnProperty(n))return e[n];throw"unhandled artifact "+n})}},{key:"_addKernels",value:function(){var t=this,e=this.functionBuilder,n=this._webGl;if(e.addFunctions(this.functions,{constants:this.constants,output:this.output}),e.addNativeFunctions(this.nativeFunctions),e.addKernel(this.fnString,{prototypeOnly:!1,constants:this.constants,output:this.output,debug:this.debug,loopMaxIterations:this.loopMaxIterations,paramNames:this.paramNames,paramTypes:this.paramTypes,constantTypes:this.constantTypes,fixIntegerDivisionAccuracy:this.fixIntegerDivisionAccuracy}),null!==this.subKernels){if(!(this.drawBuffers=n.getExtension("WEBGL_draw_buffers")))throw new Error("could not instantiate draw buffers extension");this.subKernelOutputVariableNames=[],this.subKernels.forEach(function(e){return t._addSubKernel(e)})}else if(null!==this.subKernelProperties){if(!(this.drawBuffers=n.getExtension("WEBGL_draw_buffers")))throw new Error("could not instantiate draw buffers extension");this.subKernelOutputVariableNames=[],Object.keys(this.subKernelProperties).forEach(function(e){return t._addSubKernel(t.subKernelProperties[e])})}}},{key:"_addSubKernel",value:function(t){this.functionBuilder.addSubKernel(t,{prototypeOnly:!1,constants:this.constants,output:this.output,debug:this.debug,loopMaxIterations:this.loopMaxIterations,fixIntegerDivisionAccuracy:this.fixIntegerDivisionAccuracy}),this.subKernelOutputVariableNames.push(t.name+"Result")}},{key:"_getFragShaderString",value:function(t){return null!==this.compiledFragShaderString?this.compiledFragShaderString:this.compiledFragShaderString=this._replaceArtifacts(this.constructor.fragShaderString,this._getFragShaderArtifactMap(t))}},{key:"_getVertShaderString",value:function(t){return null!==this.compiledVertShaderString?this.compiledVertShaderString:this.compiledVertShaderString=this.constructor.vertShaderString}},{key:"toString",value:function(){return h(this)}},{key:"addFunction",value:function(t){this.functionBuilder.addFunction(null,t)}},{key:"destroy",value:function(t){(function t(e,n,r){null===e&&(e=Function.prototype);var i=Object.getOwnPropertyDescriptor(e,n);if(void 0===i){var s=Object.getPrototypeOf(e);return null===s?void 0:t(s,n,r)}if("value"in i)return i.value;var a=i.get;return void 0!==a?a.call(r):void 0})(e.prototype.__proto__||Object.getPrototypeOf(e.prototype),"destroy",this).call(this),this.outputTexture&&this._webGl.deleteTexture(this.outputTexture),this.buffer&&this._webGl.deleteBuffer(this.buffer),this.framebuffer&&this._webGl.deleteFramebuffer(this.framebuffer),this.vertShader&&this._webGl.deleteShader(this.vertShader),this.fragShader&&this._webGl.deleteShader(this.fragShader),this.program&&this._webGl.deleteProgram(this.program);for(var n=Object.keys(this.textureCache),r=0;r<n.length;r++){var i=n[r];this._webGl.deleteTexture(this.textureCache[i])}if(this.subKernelOutputTextures)for(var s=0;s<this.subKernelOutputTextures.length;s++)this._webGl.deleteTexture(this.subKernelOutputTextures[s]);if(t){var a=l.indexOf(this._canvas);a>=0&&(l[a]=null,c[a]=null)}delete this._webGl}}]),e}()},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var r,i=n(31),s=(r=i)&&r.__esModule?r:{default:r},a=n(74);var o=function(t){function e(t,n,r){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e);var i=function(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}(this,(e.__proto__||Object.getPrototypeOf(e)).call(this,t,n));i.rows=t,i.columns=n,i.std=r;for(var s=0,o=i.weights.length;s<o;s++)i.weights[s]=(0,a.randomF)(-r,r);return i}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}(e,s.default),e}();e.default=o},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var r=function(){function t(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}return function(e,n,r){return n&&t(e.prototype,n),r&&t(e,r),e}}(),i=g(n(31)),s=g(n(96)),a=g(n(212)),o=g(n(215)),u=g(n(216)),h=g(n(148)),l=g(n(214)),c=n(74),p=g(n(72)),f=g(n(217)),d=g(n(140));function g(t){return t&&t.__esModule?t:{default:t}}var v=function(){function t(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t);var n=this.constructor.defaults;Object.assign(this,n,e),this.trainOpts={},this.updateTrainingOptions(Object.assign({},this.constructor.trainDefaults,e)),this.stepCache={},this.runs=0,this.ratioClipped=null,this.model=null,this.inputLookup=null,this.inputLookupLength=null,this.outputLookup=null,this.outputLookupLength=null,e.json&&this.fromJSON(e.json)}return r(t,[{key:"initialize",value:function(){this.model={input:null,hiddenLayers:[],output:null,equations:[],allMatrices:[],equationConnections:[],outputConnector:null},this.dataFormatter&&(this.inputSize=this.inputRange=this.outputSize=this.dataFormatter.characters.length),this.mapModel()}},{key:"createHiddenLayers",value:function(){this.model.hiddenLayers.push(this.getModel(this.hiddenLayers[0],this.inputSize));for(var t=this.hiddenLayers[0],e=1;e<this.hiddenLayers.length;e++){var n=this.hiddenLayers[e];this.model.hiddenLayers.push(this.getModel(n,t)),t=n}}},{key:"getModel",value:function(t,e){return{weight:new s.default(t,e,.08),transition:new s.default(t,t,.08),bias:new i.default(t,1)}}},{key:"getEquation",value:function(t,e,n,r){var i=t.relu.bind(t),s=t.add.bind(t),a=t.multiply.bind(t);return i(s(s(a(r.weight,e),a(r.transition,n)),r.bias))}},{key:"createInputMatrix",value:function(){this.model.input=new s.default(this.inputRange+1,this.inputSize,.08)}},{key:"createOutputMatrix",value:function(){var t=this.model,e=this.outputSize,n=this.hiddenLayers[this.hiddenLayers.length-1];t.outputConnector=new s.default(e+1,n,.08),t.output=new i.default(e+1,1)}},{key:"bindEquation",value:function(){var t=this.model,e=new a.default,n=[],r=t.equationConnections.length>0?t.equationConnections[t.equationConnections.length-1]:this.initialLayerInputs,i=this.getEquation(e,e.inputMatrixToRow(t.input),r[0],t.hiddenLayers[0]);n.push(i);for(var s=1,o=this.hiddenLayers.length;s<o;s++)i=this.getEquation(e,i,r[s],t.hiddenLayers[s]),n.push(i);t.equationConnections.push(n),e.add(e.multiply(t.outputConnector,i),t.output),t.equations.push(e)}},{key:"mapModel",value:function(){var t=this.model,e=t.hiddenLayers,n=t.allMatrices;if(this.initialLayerInputs=this.hiddenLayers.map(function(t){return new i.default(t,1)}),this.createInputMatrix(),!t.input)throw new Error("net.model.input not set");if(n.push(t.input),this.createHiddenLayers(),!t.hiddenLayers.length)throw new Error("net.hiddenLayers not set");for(var r=0,s=e.length;r<s;r++){var a=e[r];for(var o in a)a.hasOwnProperty(o)&&n.push(a[o])}if(this.createOutputMatrix(),!t.outputConnector)throw new Error("net.model.outputConnector not set");if(!t.output)throw new Error("net.model.output not set");n.push(t.outputConnector),n.push(t.output)}},{key:"trainPattern",value:function(t,e){var n=this.trainInput(t);if(this.backpropagate(t),this.adjustWeights(),e)return n}},{key:"trainInput",value:function(t){this.runs++;for(var e=this.model,n=t.length,r=0,i=void 0;e.equations.length<=t.length+1;)this.bindEquation();for(var s=-1,a=t.length;s<a;s++){var o=s+1;i=e.equations[o];var u=-1===s?0:t[s]+1,h=s===n-1?0:t[s+1]+1;r+=i.predictTargetIndex(u,h)}return Math.pow(2,r/(n-1))/100}},{key:"backpropagate",value:function(t){for(var e=t.length,n=this.model.equations;e>0;)n[e].backpropagateIndex(t[e-1]+1),e--;n[0].backpropagateIndex(0)}},{key:"adjustWeights",value:function(){for(var t=this.regc,e=this.clipval,n=this.model,r=this.decayRate,i=this.stepCache,s=this.smoothEps,a=this.trainOpts.learningRate,o=n.allMatrices,u=0,h=0,l=0;l<o.length;l++){var c=o[l],f=c.weights,d=c.deltas;l in i||(i[l]=(0,p.default)(c.rows*c.columns));for(var g=i[l],v=0;v<f.length;v++){var y=d[v],m=f[v];g[v]=g[v]*r+(1-r)*y*y,y>e&&(y=e,u++),y<-e&&(y=-e,u++),h++,f[v]=m+-a*y/Math.sqrt(g[v]+s)-t*m}}this.ratioClipped=u/h}},{key:"run",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],e=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,r=this.maxPredictionLength+t.length+(this.dataFormatter?this.dataFormatter.specialIndexes.length:0);if(!this.isRunnable)return null;for(var s=this.formatDataIn(t),a=this.model,c=[],p=0;;){for(var f=0===p?0:p<s.length?s[p-1]+1:c[p-1];a.equations.length<=p;)this.bindEquation();var d=a.equations[p].runIndex(f),g=new i.default(a.output.rows,a.output.columns);if((0,l.default)(g,d),1!==n&&e)for(var v=0,y=g.weights.length;v<y;v++)g.weights[v]/=n;var m=(0,h.default)(g),b=e?(0,o.default)(m):(0,u.default)(m);if(p++,0===b)break;if(p>=r)break;c.push(b)}return this.formatDataOut(s,c.slice(s.length).map(function(t){return t-1}))}},{key:"verifyIsInitialized",value:function(t){this.model||this.initialize()}},{key:"updateTrainingOptions",value:function(t){var e=this;Object.keys(this.constructor.trainDefaults).forEach(function(n){return e.trainOpts[n]=t.hasOwnProperty(n)?t[n]:e.trainOpts[n]}),this.validateTrainingOptions(this.trainOpts),this.setLogMethod(t.log||this.trainOpts.log),this.activation=t.activation||this.activation}},{key:"validateTrainingOptions",value:function(t){d.default.prototype.validateTrainingOptions.call(this,t)}},{key:"setLogMethod",value:function(t){this.trainOpts.log="function"==typeof t?t:!!t&&console.log}},{key:"prepTraining",value:function(t,e){this.updateTrainingOptions(e),t=this.formatData(t);var n=Date.now()+this.trainOpts.timeout;return this.verifyIsInitialized(t),{data:t,status:{error:1,iterations:0},endTime:n}}},{key:"train",value:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.trainOpts=e=Object.assign({},this.constructor.trainDefaults,e);var n=e.iterations,r=e.errorThresh,i=!0===e.log?console.log:e.log,s=e.logPeriod,a=e.callback,o=e.callbackPeriod,u=1/0,h=void 0;for(this.hasOwnProperty("setupData")&&(t=this.setupData(t)),this.verifyIsInitialized(),h=0;h<n&&u>r;h++){for(var l=0,c=0;c<t.length;c++){l+=this.trainPattern(t[c],!0)}if(u=l/t.length,isNaN(u))throw new Error("network error rate is unexpected NaN, check network configurations and try again");i&&h%s==0&&i("iterations: "+h+", training error: "+u),a&&h%o==0&&a({error:u,iterations:h})}return{error:u,iterations:h}}},{key:"addFormat",value:function(){throw new Error("not yet implemented")}},{key:"toJSON",value:function(){var t=this.constructor.defaults;this.model||this.initialize();var e=this.model,n={};for(var r in t)t.hasOwnProperty(r)&&(n[r]=this[r]);return{type:this.constructor.name,options:n,input:e.input.toJSON(),hiddenLayers:e.hiddenLayers.map(function(t){var e={};for(var n in t)e[n]=t[n].toJSON();return e}),outputConnector:this.model.outputConnector.toJSON(),output:this.model.output.toJSON()}}},{key:"fromJSON",value:function(t){var e=this.constructor.defaults,n=t.options;this.model=null,this.hiddenLayers=null;var r=[],s=i.default.fromJSON(t.input);r.push(s);var a=[];(t.hiddenLayers||t.hiddenSizes).forEach(function(t){var e={};for(var n in t)e[n]=i.default.fromJSON(t[n]),r.push(e[n]);a.push(e)});var o=i.default.fromJSON(t.outputConnector);r.push(o);var u=i.default.fromJSON(t.output);r.push(u),Object.assign(this,e,n),n.hiddenSizes&&(this.hiddenLayers=n.hiddenSizes),n.dataFormatter&&(this.dataFormatter=f.default.fromJSON(n.dataFormatter)),this.model={input:s,hiddenLayers:a,output:u,allMatrices:r,outputConnector:o,equations:[],equationConnections:[]},this.initialLayerInputs=this.hiddenLayers.map(function(t){return new i.default(t,1)}),this.bindEquation()}},{key:"toFunction",value:function(){var t=this.model,e=this.model.equations,n=e[1].states,r=JSON.stringify(this.toJSON());function i(n){for(var r=t.equationConnections[0],i=e[0].states,s=0,a=i.length;s<a;s++)if(i[s].product===n)return s;return r.indexOf(n)}function s(e,r){if(!e||!e.rows||!e.columns)return"null";if(e===t.input)return"json.input";if(e===t.outputConnector)return"json.outputConnector";if(e===t.output)return"json.output";for(var s=0,a=t.hiddenLayers.length;s<a;s++){var o=t.hiddenLayers[s];for(var u in o)if(o.hasOwnProperty(u)&&o[u]===e)return"json.hiddenLayers["+s+"]."+u}return function(t,e){for(var r=0,s=n.length;r<s;r++){var a=n[r];if(r===e){var o=i(t);switch(t){case a.left:if(o>-1)return"typeof prevStates["+o+"] === 'object' ? prevStates["+o+"].product : new Matrix("+t.rows+", "+t.columns+")";case a.right:if(o>-1)return"typeof prevStates["+o+"] === 'object' ? prevStates["+o+"].product : new Matrix("+t.rows+", "+t.columns+")";case a.product:return"new Matrix("+t.rows+", "+t.columns+")";default:throw Error("unknown state")}}if(t===a.product)return"states["+r+"].product";if(t===a.right)return"states["+r+"].right";if(t===a.left)return"states["+r+"].left"}}(e,r)}function a(t){return(t=t.toString().split("{")).shift(),(t=(t=t.join("{")).split("}")).pop(),t.join("}").split("\n").join("\n        ").replace("product.deltas[i] = 0;","").replace("product.deltas[column] = 0;","").replace("left.deltas[leftIndex] = 0;","").replace("right.deltas[rightIndex] = 0;","").replace("product.deltas = left.deltas.slice(0);","")}function l(t){return"src/recurrent/matrix/"+t.replace(/[A-Z]/g,function(t){return"-"+t.toLowerCase()})+".js"}for(var f=[],d={},g=[],v=0,y=n.length;v<y;v++){var m=n[v];f.push("states["+v+"] = {\n      name: '"+m.forwardFn.name+"',\n      left: "+s(m.left,v)+",\n      right: "+s(m.right,v)+",\n      product: "+s(m.product,v)+"\n    }");var b=m.forwardFn.name;d[b]||(d[b]=!0,g.push("        case '"+b+"': //compiled from "+l(b)+"\n          "+a(m.forwardFn.toString())+"\n          break;"))}var x="\n  if (typeof rawInput === 'undefined') rawInput = [];\n  if (typeof isSampleI === 'undefined') isSampleI = false;\n  if (typeof temperature === 'undefined') temperature = 1;\n  "+(this.dataFormatter?this.dataFormatter.toFunctionString():"")+"\n  \n  var input = "+(this.dataFormatter&&"function"==typeof this.formatDataIn?"formatDataIn(rawInput)":"rawInput")+";\n  var json = "+r+";\n  var maxPredictionLength = input.length + "+this.maxPredictionLength+";\n  var _i = 0;\n  var output = [];\n  var states = [];\n  var prevStates;\n  while (true) {\n    var previousIndex = (_i === 0\n        ? 0\n        : _i < input.length\n          ? input[_i - 1] + 1\n          : output[_i - 1])\n          ;\n    var rowPluckIndex = previousIndex;\n    var state;\n    prevStates = states;\n    states = [];\n    "+f.join(";\n    ")+";\n    for (var stateIndex = 0, stateMax = "+f.length+"; stateIndex < stateMax; stateIndex++) {\n      state = states[stateIndex];\n      var product = state.product;\n      var left = state.left;\n      var right = state.right;\n      \n      switch (state.name) {\n"+g.join("\n")+"\n      }\n    }\n    \n    var logProbabilities = state.product;\n    if (temperature !== 1 && isSampleI) {\n      for (var q = 0, nq = logProbabilities.weights.length; q < nq; q++) {\n        logProbabilities.weights[q] /= temperature;\n      }\n    }\n\n    var probs = softmax(logProbabilities);\n    var nextIndex = isSampleI ? sampleI(probs) : maxI(probs);\n    \n    _i++;\n    if (nextIndex === 0) {\n      break;\n    }\n    if (_i >= maxPredictionLength) {\n      break;\n    }\n\n    output.push(nextIndex);\n  }\n  "+(this.dataFormatter&&"function"==typeof this.formatDataOut?"return formatDataOut(input, output.slice(input.length).map(function(value) { return value - 1; }))":"return output.slice(input.length).map(function(value) { return value - 1; })")+";\n  function Matrix(rows, columns) {\n    this.rows = rows;\n    this.columns = columns;\n    this.weights = zeros(rows * columns);\n  }\n  "+(this.dataFormatter&&"function"==typeof this.formatDataIn?"function formatDataIn(input, output) { "+a(this.formatDataIn.toString()).replace(/this[.]dataFormatter[\n\s]+[.]/g,"").replace(/this[.]dataFormatter[.]/g,"").replace(/this[.]dataFormatter/g,"true")+" }":"")+"\n  "+(null!==this.dataFormatter&&"function"==typeof this.formatDataOut?"function formatDataOut(input, output) { "+a(this.formatDataOut.toString()).replace(/this[.]dataFormatter[\n\s]+[.]/g,"").replace(/this[.]dataFormatter[.]/g,"").replace(/this[.]dataFormatter/g,"true")+" }":"")+"\n  "+p.default.toString()+"\n  "+h.default.toString().replace("_2.default","Matrix")+"\n  "+c.randomF.toString()+"\n  "+o.default.toString()+"\n  "+u.default.toString();return new Function("rawInput","isSampleI","temperature",x)}},{key:"isRunnable",get:function(){return 0!==this.model.equations.length||(console.error("No equations bound, did you run train()?"),!1)}}]),t}();e.default=v,v.defaults={inputSize:20,inputRange:20,hiddenLayers:[20,20],outputSize:20,decayRate:.999,smoothEps:1e-8,regc:1e-6,clipval:5,maxPredictionLength:100,setupData:function(t){if(!("string"==typeof t[0]||Array.isArray(t[0])||t[0].hasOwnProperty("input")&&t[0].hasOwnProperty("output")))return t;var e=[],n=[];if("string"==typeof t[0]||Array.isArray(t[0])){if(!this.dataFormatter){for(var r=0;r<t.length;r++)e.push(t[r]);this.dataFormatter=new f.default(e)}for(var i=0,s=t.length;i<s;i++)n.push(this.formatDataIn(t[i]))}else{if(!this.dataFormatter){for(var a=0;a<t.length;a++)e.push(t[a].input),e.push(t[a].output);this.dataFormatter=f.default.fromArrayInputOutput(e),this.dataFormatter.addUnrecognized()}for(var o=0,u=t.length;o<u;o++)n.push(this.formatDataIn(t[o].input,t[o].output))}return n},formatDataIn:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;return this.dataFormatter?this.dataFormatter.indexTable.hasOwnProperty("stop-input")?this.dataFormatter.toIndexesInputOutput(t,e):this.dataFormatter.toIndexes(t):t},formatDataOut:function(t,e){return this.dataFormatter?this.dataFormatter.toCharacters(e).join(""):e},dataFormatter:null},v.trainDefaults={iterations:2e4,errorThresh:.005,log:!1,logPeriod:10,learningRate:.01,callback:null,callbackPeriod:10}},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,function(t,e){t.exports=[[1,-1,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,1],[1,0,1,0,0,0,0,-1,0,0,1,0,1,1,1,1,0,1],[0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,0,1],[0,1,1,0,0,0,0,-1,0,1,0,0,0,0,0,0,0,0],[1,1,-1,0,0,0,0,-1,0,0,0,0,1,0,1,1,0,1],[1,0,0,0,-1,0,0,1,-1,0,0,1,0,0,1,0,0,0],[0,0,0,1,0,0,0,0,0,1,0,0,0,1,1,1,0,0],[0,0,0,-1,1,0,0,0,0,1,1,1,0,0,0,1,1,1],[-1,-1,1,0,0,1,1,0,0,0,0,0,1,1,0,0,1,1],[0,0,0,0,-1,0,0,1,0,1,0,1,1,0,1,1,0,1],[-1,0,1,0,0,0,0,0,0,0,0,0,1,0,0,1,0,1],[-1,0,0,0,1,0,0,1,0,0,1,0,0,0,0,0,0,0],[0,1,1,1,-1,-1,-1,1,-1,1,0,0,0,0,0,0,0,0],[0,1,1,1,-1,-1,0,0,-1,1,0,0,0,0,0,0,0,0],[0,0,0,-1,1,1,-1,-1,1,1,0,0,0,0,0,0,0,0],[0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0],[0,1,0,0,-1,0,-1,1,1,1,0,1,1,0,1,0,0,0],[1,-1,-1,1,0,1,0,1,-1,0,0,0,0,1,0,1,0,0],[1,-1,0,-1,0,1,0,0,0,0,0,1,0,1,0,0,1,1],[0,0,0,-1,0,1,-1,0,1,1,0,1,0,0,0,0,0,0],[1,0,1,0,-1,-1,0,0,1,0,1,0,1,0,0,0,0,0],[0,0,0,-1,0,1,0,0,1,0,0,1,0,0,0,0,0,0],[1,-1,-1,1,1,0,-1,1,0,0,0,0,0,0,1,0,0,1],[0,0,-1,0,-1,1,1,0,0,1,1,0,0,0,0,0,0,0],[-1,-1,1,0,0,0,0,0,1,0,0,0,1,1,1,1,1,0],[0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,0,1],[-1,1,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,0],[0,0,-1,0,0,0,0,0,1,1,1,0,0,0,0,1,0,0],[0,0,1,0,0,0,-1,0,1,1,1,0,1,1,1,0,1,0],[-1,0,1,-1,0,0,1,0,1,0,1,0,0,1,1,0,1,0],[0,0,-1,0,0,0,1,0,1,1,1,0,1,1,1,0,1,0],[1,-1,1,-1,1,0,-1,1,-1,0,0,0,0,0,1,0,0,0],[-1,0,0,0,1,0,0,1,0,0,1,0,0,0,0,0,0,0],[0,1,0,0,-1,0,1,-1,0,1,0,1,1,0,1,0,0,0],[0,1,0,0,0,0,0,0,0,1,0,1,0,1,0,0,1,0],[1,0,1,-1,0,-1,-1,1,0,0,0,0,0,1,0,0,0,0],[0,-1,0,1,1,0,0,0,0,1,0,1,0,0,1,1,1,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0],[-1,-1,1,0,0,1,0,1,-1,0,0,0,1,1,0,1,0,0],[1,0,0,0,0,-1,0,-1,1,0,0,0,0,1,0,0,0,0],[1,-1,1,0,0,-1,0,1,-1,0,0,0,1,1,0,1,0,0],[1,-1,0,1,1,0,-1,0,0,0,0,1,0,0,1,0,1,1],[-1,0,1,0,0,1,0,0,0,0,1,0,1,1,0,1,1,1],[0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0],[1,1,-1,0,0,-1,0,0,0,0,0,0,1,1,0,1,1,1],[-1,0,1,1,1,-1,-1,-1,1,0,1,0,0,0,0,0,0,0],[1,0,-1,0,0,-1,1,1,0,0,0,0,0,0,0,0,0,1],[0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0],[1,0,-1,0,0,1,0,0,0,0,0,0,1,1,0,0,0,0],[0,0,-1,1,-1,1,0,1,-1,1,1,0,0,0,0,1,0,0],[0,0,1,-1,0,0,0,1,0,0,0,0,0,1,0,0,0,0],[-1,-1,1,1,0,1,-1,1,0,0,0,0,0,1,0,0,0,1],[0,1,1,0,0,0,-1,0,0,1,0,0,0,0,0,0,0,0],[0,0,1,0,0,0,0,0,-1,1,0,0,0,0,0,1,1,0],[1,1,-1,0,0,1,0,0,-1,0,0,0,0,0,0,1,0,0],[-1,1,0,0,0,1,0,0,-1,0,0,0,1,1,0,1,1,0],[0,0,1,-1,1,0,0,0,0,1,1,0,0,0,1,1,1,1],[-1,-1,1,1,0,1,-1,0,0,0,0,0,0,1,0,0,1,1],[1,0,-1,-1,1,0,1,-1,0,0,0,0,0,0,0,0,0,1],[1,1,-1,1,-1,1,0,-1,-1,0,0,0,0,0,0,1,0,0],[1,-1,0,1,0,0,0,1,-1,0,0,0,0,0,0,1,0,0],[1,-1,1,-1,1,0,-1,1,-1,0,0,0,0,0,1,0,0,0],[-1,1,0,0,0,1,-1,0,0,0,0,1,1,1,0,0,1,1],[-1,1,0,1,-1,0,1,-1,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0],[0,1,-1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[0,0,0,-1,0,0,0,0,1,0,0,0,0,0,0,1,0,0],[0,0,1,0,0,0,1,0,-1,1,1,0,1,1,1,0,1,0],[0,0,0,-1,0,0,0,0,1,0,0,0,0,0,0,1,0,0],[0,0,0,1,0,0,1,-1,-1,1,1,1,0,1,1,0,0,0],[1,0,1,0,0,-1,0,1,-1,0,1,0,1,1,0,1,0,0],[1,-1,0,0,-1,0,1,0,1,0,0,0,0,0,0,0,1,0],[0,0,0,0,0,0,0,1,0,0,1,0,0,1,0,1,0,1],[-1,-1,0,1,1,0,-1,0,1,0,0,1,0,0,0,0,0,0],[0,1,0,0,0,0,0,-1,1,1,0,1,0,0,0,0,0,0],[0,1,1,-1,0,1,0,-1,-1,1,0,0,0,0,0,1,0,0],[1,-1,0,-1,1,0,0,1,-1,0,0,1,0,0,1,1,0,0],[-1,0,0,0,0,0,-1,1,1,0,1,1,1,1,1,0,0,0],[0,1,-1,-1,0,0,0,1,1,1,0,0,0,1,1,1,0,0],[0,-1,-1,1,0,1,0,1,-1,1,0,0,0,1,0,0,0,0],[0,1,0,0,-1,0,0,0,0,1,0,1,1,0,1,1,0,1],[-1,1,1,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0],[0,1,1,-1,-1,0,1,-1,0,1,0,0,0,0,1,0,0,0],[0,1,1,1,0,-1,-1,-1,1,1,0,0,0,0,0,0,0,0],[-1,-1,0,0,1,0,0,0,1,0,0,1,1,0,0,1,0,0],[0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0],[0,0,0,1,0,0,-1,0,1,0,0,0,0,1,1,0,0,0],[1,1,0,0,-1,0,-1,1,0,0,0,1,0,0,0,0,0,0],[-1,0,-1,1,1,-1,-1,1,1,0,1,0,0,0,0,0,0,0],[0,0,0,1,0,0,0,-1,0,0,0,0,0,1,0,1,0,0],[0,0,-1,1,0,0,1,0,-1,1,0,0,0,0,1,0,0,0],[-1,0,0,1,-1,0,0,0,1,0,1,1,0,0,0,0,0,0],[1,-1,0,-1,-1,1,1,0,1,0,0,0,0,0,0,0,1,0],[0,0,1,0,0,-1,1,0,0,0,0,0,0,1,0,0,0,0],[-1,1,1,-1,0,0,0,0,1,0,0,0,0,0,1,1,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0],[-1,1,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,0],[1,0,-1,1,-1,1,0,1,-1,0,0,0,0,0,0,1,0,0],[0,1,0,1,-1,-1,0,-1,1,1,0,1,0,0,0,1,0,0],[0,0,-1,0,1,-1,0,1,1,1,1,0,1,0,0,1,0,0],[0,0,1,-1,1,0,0,0,-1,0,0,0,0,0,0,1,0,0],[0,-1,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0],[0,0,-1,0,0,1,-1,1,0,1,1,0,1,1,0,0,0,0],[-1,0,1,0,-1,0,1,0,0,0,1,0,1,0,1,0,1,1],[1,0,0,0,-1,1,0,0,0,0,1,1,0,0,0,0,1,1],[0,0,0,0,-1,0,0,0,1,1,1,1,1,0,1,1,1,0],[1,1,-1,0,0,0,-1,1,0,0,0,0,0,1,0,0,0,0],[0,1,1,1,0,-1,0,0,-1,1,0,0,0,1,0,1,1,0],[0,1,0,-1,0,0,0,0,0,1,0,0,0,1,0,0,0,0],[0,-1,0,-1,1,0,1,1,0,1,0,1,0,0,1,0,0,1],[0,0,0,1,0,0,1,0,-1,1,1,1,0,1,1,0,1,0],[0,1,1,0,0,0,0,-1,-1,1,0,0,0,0,0,1,0,0],[0,1,-1,0,0,0,0,-1,1,1,0,0,1,1,1,1,0,0],[0,0,0,0,0,0,0,1,-1,0,0,1,0,1,1,0,0,0],[0,1,1,1,-1,-1,1,-1,-1,1,0,0,0,0,0,0,0,0],[0,0,0,1,-1,-1,0,0,1,1,1,0,0,0,0,1,1,0],[0,1,0,0,0,0,1,0,-1,0,0,1,0,0,0,0,0,0],[0,-1,1,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1],[0,0,0,-1,1,1,1,0,-1,0,0,1,0,0,0,0,0,0],[0,-1,1,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0],[1,0,0,0,-1,0,0,0,0,0,1,1,1,0,1,1,1,1],[0,0,0,0,1,0,0,0,0,1,0,1,0,0,0,1,0,1],[-1,0,-1,-1,1,0,1,1,0,0,1,0,0,0,0,0,0,0],[0,-1,-1,1,1,-1,1,-1,1,1,0,0,0,0,0,0,0,0],[1,0,0,0,-1,-1,0,1,0,0,0,1,1,0,0,1,0,1],[0,-1,1,0,1,0,0,0,0,1,0,0,1,0,1,1,1,1],[0,-1,1,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0],[0,-1,0,0,0,0,0,1,0,1,0,1,1,1,1,1,0,1],[0,0,0,1,1,-1,0,-1,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,1,-1,0,0,0,0,0,0,0,0,0,0,1],[1,-1,1,1,-1,0,0,0,0,0,0,0,0,0,0,0,1,0],[-1,0,-1,0,0,1,-1,1,1,0,1,0,1,1,0,0,0,0],[1,-1,1,1,0,0,-1,1,-1,0,0,0,0,1,1,0,0,0],[0,-1,0,0,0,0,-1,1,1,1,0,1,1,0,1,0,0,0],[1,0,-1,1,-1,0,0,0,1,0,0,0,0,0,0,1,0,0],[0,0,0,0,-1,0,1,0,1,0,0,0,0,0,0,0,1,0],[-1,0,0,0,1,0,0,0,0,0,1,1,1,0,1,1,1,1],[1,0,1,0,0,1,-1,0,-1,0,0,0,0,0,0,0,1,0],[0,1,1,-1,0,1,-1,0,0,1,0,0,0,0,0,0,0,0],[0,0,-1,0,0,0,0,1,1,1,1,0,1,1,1,1,0,0],[0,1,-1,0,0,-1,0,1,0,0,0,0,0,1,0,0,0,1],[1,0,1,-1,1,-1,0,1,-1,0,1,0,0,0,0,1,0,0],[-1,1,-1,0,1,0,0,-1,1,0,0,0,1,0,1,1,0,0],[0,0,0,0,-1,0,0,1,1,0,0,0,0,0,0,1,0,0],[-1,0,1,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0],[-1,0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,0],[1,0,0,0,0,-1,0,1,-1,0,0,1,1,1,0,0,0,0],[-1,1,0,1,-1,-1,1,1,0,0,0,0,0,0,0,0,0,1],[0,-1,0,-1,1,0,1,0,0,0,0,1,0,0,0,0,0,0],[0,-1,-1,0,0,1,0,0,1,1,0,0,1,1,0,1,1,0],[1,1,0,1,-1,1,-1,-1,0,0,0,1,0,0,0,0,0,1],[1,0,1,0,1,-1,-1,0,-1,0,0,0,0,0,0,0,1,0],[1,0,0,0,0,-1,0,0,1,0,0,0,0,1,0,0,0,0],[0,1,0,0,1,0,0,0,-1,0,0,0,0,0,0,0,1,0],[0,0,0,0,0,-1,0,0,1,1,0,0,0,1,0,1,1,0],[0,-1,1,0,1,0,0,-1,0,1,0,0,1,0,1,1,0,1],[-1,1,0,0,0,0,1,1,-1,0,0,0,0,1,0,0,0,0],[0,0,0,1,0,0,0,0,0,1,0,0,0,1,1,1,0,0],[0,-1,0,1,0,1,0,0,0,0,0,0,0,1,0,0,0,0],[-1,1,1,1,0,1,-1,0,-1,0,0,0,0,1,0,0,1,0],[1,-1,0,0,-1,1,0,1,-1,0,0,1,1,0,0,1,0,0],[-1,1,1,1,0,-1,0,1,-1,0,0,0,0,1,0,0,0,0],[1,-1,1,0,-1,-1,1,1,-1,0,0,0,1,0,0,0,0,0],[1,0,0,0,1,-1,0,-1,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,1,0,0,0,-1,0,0,1,0,0,0,1,0,0],[0,0,0,0,1,0,0,0,0,1,0,1,0,0,0,1,0,1],[0,0,-1,0,1,-1,0,1,0,0,1,0,0,0,0,0,0,1],[0,-1,0,0,0,1,0,0,0,0,0,1,0,1,0,0,0,0],[0,0,-1,0,1,0,0,0,0,1,1,0,1,0,1,1,1,1],[0,0,0,-1,1,1,0,0,0,1,0,1,0,0,0,1,0,1],[0,1,1,0,0,-1,0,0,0,1,0,0,1,1,0,1,1,1],[0,1,-1,0,0,1,-1,1,0,0,0,0,0,1,0,0,0,0],[-1,1,0,0,0,0,1,1,-1,0,0,0,0,1,0,0,0,0],[0,0,0,1,0,0,0,-1,1,0,0,0,0,1,0,0,0,0],[1,0,0,-1,1,0,1,-1,-1,0,0,1,0,0,0,0,0,0],[-1,0,-1,1,1,-1,0,0,1,0,1,0,0,0,0,0,0,0],[0,0,0,1,0,-1,0,0,0,1,1,1,0,1,0,1,1,1],[-1,1,0,1,0,1,0,0,-1,0,0,0,0,1,0,0,0,0],[1,0,0,0,0,-1,0,1,-1,0,0,1,1,1,0,0,0,0],[1,0,1,0,0,-1,0,-1,1,0,1,0,1,1,0,1,0,0],[1,0,0,-1,-1,0,1,1,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,-1,0,0,1,0,1,0,1,1,0,1,1,0,1],[0,0,0,-1,1,0,0,1,0,1,1,1,0,0,1,1,0,1],[0,0,1,0,-1,1,-1,1,-1,1,0,0,0,0,0,0,0,0],[0,-1,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0],[0,0,1,0,-1,1,1,0,-1,1,1,0,0,0,0,0,1,0],[1,-1,-1,0,0,-1,0,1,1,0,0,0,1,1,0,1,0,0],[0,1,0,0,-1,0,0,0,0,1,0,1,1,0,1,1,0,1],[0,-1,-1,1,1,-1,0,1,1,1,0,0,0,0,0,0,0,0],[1,1,0,0,1,-1,0,-1,0,0,0,1,1,0,0,1,0,1],[-1,-1,0,-1,1,0,1,1,0,0,0,1,0,0,0,0,0,0],[-1,-1,1,1,0,0,-1,0,1,0,0,0,0,0,1,0,0,0],[0,1,-1,-1,1,0,0,0,1,1,0,0,0,0,1,1,1,0],[0,0,0,-1,1,-1,1,1,-1,0,0,1,0,0,0,0,0,0],[0,1,0,1,0,-1,-1,1,0,0,0,0,0,1,0,0,0,0],[1,0,0,1,0,-1,0,1,-1,0,0,1,0,0,0,0,0,0],[1,1,-1,0,-1,-1,0,1,1,0,0,0,1,0,0,1,0,0],[-1,1,-1,1,-1,-1,1,1,0,0,0,0,0,0,0,0,0,1],[0,0,0,0,0,0,1,-1,0,1,0,1,1,1,0,0,0,0],[0,1,1,-1,0,0,0,-1,1,1,0,0,0,1,1,1,0,0],[0,1,1,-1,-1,0,0,-1,1,0,0,0,0,0,1,0,0,0],[1,0,-1,1,0,0,0,-1,1,0,1,0,0,1,1,1,0,0],[0,-1,-1,1,0,0,1,0,0,1,0,0,0,0,0,0,0,0],[1,1,0,0,-1,-1,0,0,0,0,0,1,1,0,0,0,0,0],[-1,0,1,0,0,0,1,0,0,0,1,0,1,1,1,0,1,1],[-1,1,0,0,0,1,-1,-1,1,0,0,1,1,0,0,0,0,0],[0,0,1,0,0,-1,0,0,0,1,1,0,0,1,0,1,0,0],[1,0,1,0,-1,0,-1,1,0,0,1,0,0,0,0,0,0,0],[1,0,1,0,-1,0,1,0,-1,0,1,0,1,0,1,0,1,0],[-1,0,0,0,0,1,1,-1,0,0,1,0,0,1,0,0,0,0],[0,0,1,0,0,-1,0,0,0,1,1,0,0,1,0,1,0,0],[0,1,0,0,-1,-1,1,0,1,0,0,0,1,0,0,0,0,0],[1,1,-1,0,0,0,1,-1,0,0,0,0,1,0,0,0,0,0],[0,1,0,-1,-1,0,1,0,1,0,0,0,0,0,1,0,0,0],[1,1,-1,-1,0,0,-1,1,1,0,0,0,0,1,0,0,0,0],[0,0,-1,0,1,0,1,-1,1,1,0,0,0,0,0,0,0,0],[0,0,-1,1,0,0,1,-1,1,1,0,0,0,0,0,0,0,0],[0,-1,1,0,0,1,0,0,0,1,0,0,1,1,0,1,1,1],[1,0,1,1,0,-1,-1,0,-1,0,0,0,0,0,0,0,1,0],[0,0,0,0,1,0,1,-1,0,1,1,1,1,0,1,0,0,1],[0,0,0,0,0,0,1,-1,0,1,0,1,1,1,0,0,0,0],[-1,-1,0,0,1,0,1,1,0,0,0,1,0,0,0,0,0,0],[1,0,1,1,-1,1,-1,-1,0,0,1,0,0,0,0,0,0,1],[0,1,-1,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0],[0,-1,0,1,1,-1,1,-1,1,1,0,1,0,0,0,0,0,0],[1,1,0,-1,0,1,-1,1,-1,0,0,1,0,1,0,0,0,0],[-1,0,0,0,0,0,1,1,0,0,1,1,1,1,1,0,0,1],[0,0,1,0,-1,1,-1,1,-1,1,0,0,0,0,0,0,0,0],[1,0,1,0,-1,1,0,0,-1,0,1,0,0,0,0,0,0,0],[0,0,1,-1,1,0,0,-1,0,0,0,0,0,0,0,1,0,0],[0,1,0,0,0,0,0,0,0,1,0,1,0,1,0,0,1,0],[0,0,-1,0,0,0,1,0,0,1,0,0,0,0,0,0,0,1],[0,0,0,0,1,-1,1,-1,0,0,0,1,0,0,0,0,0,0],[1,0,-1,0,-1,0,1,1,0,0,1,0,1,0,1,0,0,1],[0,0,0,0,0,0,1,0,-1,1,0,1,0,0,1,0,0,0],[1,-1,1,1,1,-1,0,-1,0,0,0,0,0,0,0,1,0,1],[-1,1,-1,1,0,1,0,-1,1,0,0,0,0,1,0,0,0,0],[0,0,0,0,0,0,1,-1,1,0,0,0,0,1,0,0,0,0],[0,1,1,-1,1,-1,-1,-1,1,1,0,0,0,0,0,0,0,0],[-1,1,0,-1,0,1,0,-1,1,0,0,0,0,0,0,1,0,0],[0,-1,0,1,-1,-1,1,1,0,1,0,1,0,0,0,0,0,1],[0,0,1,0,-1,0,0,1,0,0,0,0,1,0,1,1,0,1],[1,0,-1,0,1,1,-1,0,0,0,1,0,1,0,0,0,1,1],[1,-1,1,-1,-1,1,1,0,-1,0,0,0,0,0,0,0,1,0],[-1,1,0,0,0,0,0,-1,1,0,0,1,1,1,1,1,0,0],[0,0,0,0,1,0,-1,0,0,1,1,1,1,0,1,0,1,1],[0,0,1,-1,0,0,0,0,0,1,0,0,0,0,0,0,0,0],[0,-1,-1,-1,0,1,1,1,0,1,0,0,0,0,0,0,0,0],[-1,1,0,0,-1,-1,1,0,1,0,0,0,1,0,0,0,0,0],[-1,1,0,1,0,1,-1,-1,0,0,0,0,0,1,0,0,0,1],[1,0,-1,0,0,1,-1,-1,1,0,0,0,0,1,0,0,0,0],[1,0,0,0,1,-1,0,0,0,0,1,1,1,0,0,1,1,1],[-1,1,0,-1,1,0,0,0,1,0,0,0,0,0,0,1,0,0],[-1,0,-1,1,-1,0,1,1,0,0,1,0,0,0,0,0,0,1],[0,1,1,0,0,0,1,-1,-1,1,0,0,1,1,1,0,0,0],[1,1,0,0,0,-1,0,0,-1,0,0,1,0,0,0,0,0,0],[0,1,-1,0,1,0,0,-1,1,1,0,0,0,0,0,0,0,0],[0,0,1,0,1,0,0,-1,0,1,1,0,1,0,1,1,0,1],[0,1,0,-1,1,-1,0,0,0,1,0,1,0,0,0,1,1,1],[-1,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,0,0],[-1,1,1,1,0,-1,1,-1,-1,0,0,0,0,1,0,0,0,0],[1,1,-1,-1,-1,0,0,0,1,0,0,0,0,0,1,1,1,0],[0,-1,1,0,0,1,1,-1,-1,0,0,0,0,1,0,0,0,0],[0,-1,0,1,-1,0,1,0,0,1,0,0,0,0,0,0,1,0],[1,-1,1,-1,-1,0,-1,1,1,0,0,0,0,0,1,0,0,0],[0,0,0,-1,0,0,1,0,0,0,0,1,0,1,0,0,1,1],[1,1,0,0,-1,-1,0,1,0,0,0,1,1,0,0,0,0,0],[0,1,0,0,1,0,-1,-1,0,1,0,0,1,0,0,0,0,1],[0,0,1,0,-1,0,0,0,0,1,1,0,1,0,1,1,1,1],[0,-1,0,0,-1,0,1,0,1,0,0,0,0,0,0,0,1,0],[0,-1,1,1,1,0,-1,0,-1,0,0,0,0,0,0,0,1,0],[1,-1,0,1,0,-1,-1,1,1,0,0,0,0,1,0,0,0,0],[-1,0,0,-1,1,1,1,0,-1,0,0,1,0,0,0,0,0,0],[0,0,1,1,0,0,0,0,-1,0,0,0,0,0,0,1,0,0],[0,1,0,1,0,1,0,-1,-1,0,0,0,0,1,0,1,0,0],[0,-1,0,0,0,0,0,1,1,0,0,0,0,0,0,1,0,0],[0,0,0,0,0,0,0,1,0,0,1,0,0,1,0,1,0,1],[0,-1,0,1,0,0,-1,1,1,0,0,1,0,0,0,0,0,0],[-1,0,0,0,1,0,1,0,0,0,0,1,0,0,0,0,0,0],[-1,1,0,0,-1,1,0,0,0,0,0,1,1,0,0,1,0,1],[0,1,0,-1,-1,1,1,-1,0,1,0,1,0,0,0,0,0,1],[-1,1,1,-1,0,-1,1,1,-1,0,0,0,0,1,0,0,0,0],[0,-1,-1,1,1,0,0,1,0,1,0,0,0,0,1,0,0,0],[-1,1,0,1,1,-1,1,0,-1,0,0,1,0,0,0,0,0,0],[0,0,1,0,0,-1,1,0,0,0,0,0,0,1,0,0,0,0],[1,0,1,0,-1,0,0,0,0,0,1,0,0,0,0,0,0,0],[-1,0,0,0,1,0,0,0,1,0,0,1,0,0,0,1,0,0],[-1,1,0,-1,1,0,1,0,-1,0,0,1,0,0,1,0,1,0],[-1,1,1,1,0,-1,0,-1,1,0,0,0,0,1,0,1,0,0],[0,1,1,1,-1,0,-1,0,-1,1,0,0,0,0,0,0,1,0],[1,-1,1,-1,1,1,0,-1,-1,0,0,0,0,0,0,1,0,0],[1,-1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0],[0,0,0,0,-1,1,0,1,0,0,0,1,0,0,0,1,0,1],[0,0,0,1,1,0,0,-1,-1,0,0,0,0,0,1,1,0,0],[-1,0,-1,1,0,0,1,0,0,0,1,0,0,1,1,0,1,1],[-1,0,-1,0,-1,1,1,1,0,0,1,0,0,0,0,0,0,1],[0,0,-1,1,0,1,0,0,-1,0,0,0,0,1,0,0,0,0],[-1,0,0,0,0,0,0,1,0,0,0,1,0,1,0,1,0,0],[1,1,0,1,-1,1,0,-1,-1,0,0,0,0,0,0,1,0,0],[0,0,-1,0,0,1,-1,1,0,1,1,0,1,1,0,0,0,0],[0,0,0,-1,0,1,1,0,0,0,0,1,0,0,0,0,0,1],[1,0,0,0,1,-1,1,-1,-1,0,0,1,0,0,0,0,0,0],[0,-1,0,-1,1,1,1,1,-1,0,0,1,0,0,0,0,0,0],[0,0,0,0,1,0,-1,0,0,1,1,1,1,0,1,0,1,1],[1,0,-1,0,0,0,1,-1,0,0,0,0,1,0,0,0,0,0],[1,0,0,-1,-1,0,1,-1,1,0,1,1,0,0,1,0,0,0],[0,-1,0,-1,1,1,0,1,0,1,0,0,0,0,0,0,0,0],[0,0,-1,-1,0,1,1,1,0,0,0,0,0,0,0,0,0,1],[-1,-1,1,-1,0,1,0,1,0,0,0,0,0,0,0,1,0,1],[-1,-1,1,0,1,1,-1,1,-1,0,0,0,1,0,0,0,0,0],[0,1,0,1,1,-1,-1,-1,0,0,0,0,0,0,0,0,0,1],[0,1,0,0,0,0,-1,0,0,1,0,0,0,1,0,0,0,1],[1,0,0,1,-1,0,0,0,0,0,0,0,0,0,0,1,0,0],[1,0,0,1,-1,-1,0,1,0,0,0,0,0,0,0,1,0,0],[0,0,0,1,1,0,-1,-1,1,1,1,1,0,0,1,0,0,0],[0,0,0,1,0,0,-1,1,0,0,1,0,0,1,1,0,0,0],[0,1,0,0,-1,0,0,0,1,1,0,1,1,0,1,0,0,0],[1,0,-1,-1,-1,1,1,-1,1,0,1,0,0,0,0,0,0,0],[1,-1,1,0,0,-1,1,-1,1,0,0,0,0,1,0,0,0,0],[-1,-1,0,0,1,0,1,0,0,0,0,1,0,0,0,0,0,0],[1,0,-1,1,0,0,0,0,0,0,1,0,0,1,1,1,1,1],[1,0,-1,0,1,0,0,-1,0,0,0,0,0,0,0,0,0,1],[-1,-1,0,0,1,0,0,1,0,0,0,1,1,0,0,1,0,0],[-1,1,-1,1,0,1,0,0,0,0,0,0,0,1,0,0,0,0],[0,-1,1,0,1,1,-1,0,-1,0,0,0,1,0,0,0,1,0],[0,0,1,0,0,1,1,-1,-1,0,0,0,0,1,0,0,0,0],[0,-1,0,1,-1,1,0,1,0,1,0,1,0,0,0,0,0,0],[-1,0,0,0,-1,1,1,0,0,0,1,1,0,0,0,0,1,1],[-1,1,0,0,0,0,1,0,0,0,0,0,0,1,0,0,1,0],[0,-1,0,0,0,1,1,0,-1,1,0,0,0,1,0,0,0,0],[0,1,0,-1,1,-1,-1,0,1,1,0,0,0,0,0,0,0,0],[-1,0,0,0,0,1,-1,1,1,0,0,1,1,0,0,0,0,0],[-1,1,1,0,0,0,-1,0,0,0,0,0,1,1,1,0,1,1],[-1,0,-1,-1,1,0,0,1,1,0,1,0,0,0,0,1,0,0],[0,0,0,1,0,0,-1,1,0,0,1,0,0,1,1,0,0,0],[-1,0,1,0,-1,1,-1,1,0,0,0,0,1,0,0,0,0,1],[-1,1,0,-1,0,1,0,0,0,0,0,0,0,1,0,1,0,1],[1,1,0,0,1,0,-1,-1,0,0,0,0,0,0,0,0,0,1],[0,-1,0,1,0,0,1,0,0,1,0,0,0,0,0,0,0,0],[1,-1,1,1,0,0,-1,1,-1,0,0,0,0,1,1,0,0,0],[0,-1,0,0,1,-1,1,0,0,0,0,1,0,0,0,0,0,0],[0,-1,0,1,0,0,0,0,1,0,0,0,0,1,0,0,0,0],[-1,0,-1,-1,0,1,0,1,1,0,1,0,0,0,0,1,0,0],[0,0,-1,-1,1,0,0,1,0,0,1,0,0,0,0,0,0,0],[-1,1,0,0,0,0,0,1,-1,0,0,0,0,1,0,0,0,0],[0,1,0,-1,-1,0,0,1,0,1,0,1,0,0,1,1,0,1],[0,1,1,-1,0,0,-1,0,0,1,0,0,0,0,0,0,0,0],[1,0,0,1,-1,-1,-1,1,0,0,0,1,0,0,0,0,0,0],[-1,0,0,0,1,0,1,0,-1,0,0,1,0,0,0,0,0,0],[0,0,0,0,0,-1,1,1,-1,1,1,1,1,1,0,0,0,0],[-1,0,0,0,0,0,0,1,0,0,0,1,0,1,0,1,0,0],[0,0,0,0,1,0,1,0,-1,0,0,1,0,0,0,0,0,0],[0,0,-1,-1,1,0,1,0,0,1,1,0,0,0,0,0,1,1],[-1,1,0,1,0,0,0,0,0,0,0,0,0,1,1,0,1,0],[0,0,0,0,0,-1,0,1,0,0,0,0,0,1,0,0,0,1],[1,0,-1,0,1,1,0,-1,0,0,1,0,1,0,0,1,0,1],[-1,1,1,1,0,-1,-1,1,-1,0,0,0,0,1,0,0,0,0],[0,1,0,-1,-1,1,-1,1,0,1,0,1,0,0,0,0,0,1],[0,1,0,1,0,0,-1,1,-1,0,0,0,0,1,0,0,0,0],[-1,1,0,1,1,-1,0,-1,1,0,0,1,0,0,0,1,0,0],[1,0,-1,-1,1,0,0,0,0,0,0,0,0,0,0,0,0,1],[-1,1,0,0,-1,1,1,0,0,0,0,0,0,0,0,0,0,1],[1,-1,1,-1,0,0,1,1,-1,0,0,0,0,1,0,0,0,0],[-1,0,0,0,0,0,1,0,0,0,1,1,0,0,0,0,0,1],[0,0,-1,0,0,0,1,1,-1,1,1,0,1,1,1,0,0,0],[0,0,1,0,0,1,-1,0,0,0,0,0,0,0,0,0,0,1],[1,1,-1,-1,0,0,0,1,-1,0,0,0,0,1,1,0,0,0],[1,1,0,-1,0,-1,0,-1,1,0,0,0,0,1,0,0,0,0],[0,1,-1,-1,-1,1,1,1,-1,1,0,0,0,0,0,0,0,0],[1,-1,0,1,-1,0,0,0,0,0,0,0,0,0,0,1,1,0],[1,0,0,0,1,1,-1,-1,0,0,0,0,0,0,0,0,0,1],[0,-1,0,1,1,-1,1,-1,0,1,0,1,0,0,0,0,0,1],[1,-1,0,0,0,0,-1,0,1,0,0,0,0,1,0,0,0,0],[0,1,0,0,0,0,1,0,-1,0,0,1,0,0,0,0,0,0],[0,-1,1,0,0,-1,0,0,1,0,0,0,0,1,0,0,0,0],[0,1,0,-1,1,0,0,0,0,1,0,1,0,0,1,1,1,1],[-1,1,1,1,1,0,0,-1,-1,0,0,0,0,0,0,1,0,0],[-1,1,1,-1,1,-1,0,0,1,0,0,0,0,0,0,1,0,0],[0,0,-1,1,0,0,0,-1,1,0,1,0,0,1,0,0,0,0],[0,0,0,0,1,0,0,0,-1,1,1,1,1,0,1,1,1,0],[-1,0,1,0,0,1,0,-1,0,0,0,0,0,0,0,0,0,1],[0,1,1,0,0,0,-1,0,0,1,0,0,0,0,0,0,0,0],[0,1,1,-1,-1,0,1,1,-1,1,0,0,0,0,1,0,0,0],[1,-1,-1,-1,1,0,1,1,0,0,0,0,0,0,0,0,0,1],[0,0,-1,0,1,0,0,0,1,1,0,0,0,0,0,0,0,0],[1,0,0,0,0,0,0,0,-1,0,0,1,0,0,0,1,0,0],[0,-1,1,-1,0,1,0,0,0,0,0,0,0,0,0,0,0,1],[-1,0,0,-1,0,1,0,1,0,0,1,1,0,1,0,1,0,1],[1,0,0,0,0,0,0,1,-1,0,1,1,0,1,0,0,0,0],[0,0,1,1,1,-1,-1,0,-1,0,0,0,0,0,0,0,1,0],[-1,1,0,1,0,-1,0,1,-1,0,0,1,0,1,0,0,0,0],[-1,0,1,1,0,0,-1,1,0,0,0,0,0,1,1,0,0,0],[0,0,0,0,0,-1,0,1,1,1,1,1,1,1,0,1,0,0],[1,0,-1,0,1,0,0,0,-1,0,0,0,0,0,1,1,1,0],[1,0,0,-1,0,0,-1,1,0,0,0,0,0,1,0,0,0,0],[0,1,-1,1,0,-1,1,-1,0,0,0,0,0,0,0,0,0,1],[1,0,-1,0,0,1,0,0,0,0,0,0,1,1,0,0,0,0],[0,1,0,0,1,-1,0,0,-1,0,0,1,0,0,0,0,1,0],[0,0,0,0,0,1,-1,0,0,1,0,0,0,1,0,0,0,1],[0,1,0,0,0,-1,1,-1,0,1,0,1,1,1,0,0,0,0],[0,1,0,-1,0,1,0,0,0,0,0,1,0,0,0,0,0,1],[-1,1,-1,-1,-1,1,1,0,1,0,0,0,0,0,0,0,1,0],[1,0,0,1,-1,0,-1,0,0,0,1,1,0,0,0,0,1,1],[0,-1,0,1,0,0,0,1,0,0,0,0,0,0,0,1,0,1],[1,0,-1,0,0,1,0,0,-1,0,0,0,0,0,0,1,0,0],[0,1,0,0,0,0,1,-1,0,1,0,1,0,0,0,0,0,0],[0,1,-1,1,-1,0,0,0,1,0,0,0,0,0,0,1,0,0],[0,0,0,0,-1,1,0,0,0,1,1,1,0,0,0,1,1,1],[-1,-1,1,1,0,1,0,0,0,0,0,0,0,1,0,1,1,1],[0,0,0,0,1,-1,0,0,0,1,1,1,0,0,0,1,1,1],[1,0,0,-1,-1,1,0,1,0,0,0,1,0,0,0,0,0,1],[0,1,-1,0,1,0,0,-1,1,1,0,0,0,0,0,0,0,0],[1,0,0,0,1,-1,1,-1,-1,0,0,1,0,0,0,0,0,0],[0,1,0,-1,0,1,-1,0,1,1,0,1,0,0,0,0,0,0],[0,1,0,0,0,-1,0,0,0,0,0,1,0,1,0,0,0,0],[-1,0,1,0,0,-1,-1,1,1,0,0,0,1,0,0,0,0,0],[1,0,0,0,0,1,1,-1,-1,0,1,1,1,1,0,0,0,0],[-1,1,-1,0,1,1,0,-1,1,0,0,0,1,0,0,0,0,0],[0,0,0,0,1,1,0,0,-1,0,0,0,1,0,0,0,0,0],[0,0,0,0,0,-1,1,1,0,0,0,0,0,0,0,0,0,1],[-1,-1,1,1,-1,-1,1,0,1,0,0,0,0,0,0,0,1,0],[0,0,0,1,0,0,0,-1,0,0,0,0,0,1,0,1,0,0],[0,-1,1,1,0,1,-1,0,0,1,0,0,0,1,0,0,1,1],[0,-1,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0],[1,-1,1,0,0,1,-1,0,0,0,0,0,0,0,0,0,0,1],[-1,1,1,1,-1,0,-1,-1,1,0,0,0,0,0,1,0,0,0],[0,0,-1,0,0,0,1,0,0,1,0,0,0,0,0,0,0,1],[0,0,-1,0,-1,1,1,0,1,0,0,0,0,0,0,0,1,0],[1,-1,-1,1,1,0,-1,0,0,0,0,0,0,0,1,0,1,1],[-1,0,0,1,0,1,0,0,0,0,0,0,0,1,0,0,0,0],[0,0,0,1,-1,1,0,0,0,1,1,1,0,0,0,1,1,1],[0,1,0,-1,1,-1,1,-1,1,1,0,1,0,0,0,0,0,0],[1,-1,1,0,-1,-1,0,1,1,0,0,0,1,0,0,0,0,0],[1,0,0,0,0,-1,0,-1,1,0,0,0,0,1,0,0,0,0],[-1,0,1,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0],[1,0,0,-1,-1,0,1,0,0,0,1,0,0,0,1,0,1,0],[0,0,0,-1,0,0,1,0,0,0,0,1,0,1,0,0,1,1],[0,1,1,-1,1,1,0,-1,-1,0,0,0,0,0,0,1,0,0],[0,1,0,1,-1,0,0,0,0,1,0,1,0,0,0,1,0,0],[0,0,1,-1,0,0,1,0,0,0,0,0,0,1,0,0,0,0],[1,0,1,-1,-1,1,0,1,-1,0,1,0,0,0,0,0,0,0],[-1,1,0,0,-1,1,0,0,1,0,0,1,0,0,0,0,0,0],[0,0,-1,0,0,1,1,0,0,1,0,0,1,1,0,0,0,0],[-1,1,0,0,1,-1,1,-1,0,0,0,1,0,0,0,0,0,0],[-1,1,0,0,1,1,-1,0,0,0,0,0,1,0,0,0,0,0],[-1,0,0,1,0,0,0,0,1,0,0,1,0,1,1,0,0,0],[1,0,-1,0,0,0,0,0,1,0,1,0,1,1,1,1,1,0],[1,-1,-1,0,0,1,1,-1,1,0,0,0,0,1,0,0,0,0],[-1,1,-1,-1,0,1,1,0,1,0,0,0,0,0,0,0,1,0],[-1,0,-1,0,0,1,0,1,0,0,1,0,1,1,0,1,0,1],[-1,-1,0,1,-1,1,-1,1,1,0,0,1,0,0,0,0,0,0],[1,1,0,0,-1,1,-1,0,0,0,0,1,0,0,0,0,0,0],[1,1,0,-1,-1,0,0,1,-1,0,0,1,0,0,1,0,0,0],[0,-1,1,1,1,-1,0,1,-1,0,0,0,0,0,0,1,0,0],[1,1,-1,-1,-1,0,1,-1,1,0,0,0,0,0,1,0,0,0],[0,0,0,-1,0,0,1,0,1,1,1,1,0,1,1,0,1,0],[0,1,1,0,-1,1,-1,-1,0,0,0,0,0,0,0,0,0,1],[0,1,0,-1,1,1,-1,0,0,1,0,0,0,0,0,0,1,0],[0,1,1,0,-1,1,-1,0,-1,1,0,0,0,0,0,0,1,0],[0,0,1,0,0,0,1,-1,0,0,0,0,0,1,0,0,0,0],[0,-1,1,1,0,1,-1,1,-1,0,0,0,0,1,0,0,0,0],[-1,1,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0],[-1,0,-1,1,1,-1,1,0,0,0,1,0,0,0,0,0,1,1],[1,1,-1,0,-1,-1,0,0,1,0,0,0,1,0,0,1,1,0],[0,1,0,-1,0,1,1,-1,-1,1,0,1,0,1,0,0,0,0],[-1,1,-1,-1,-1,1,0,1,1,0,0,0,0,0,0,1,0,0],[0,1,1,0,-1,-1,0,1,-1,1,0,0,1,0,0,0,0,0],[-1,1,-1,0,1,1,1,0,-1,0,0,0,1,0,0,0,1,0],[0,0,0,0,0,1,-1,0,0,1,0,0,0,1,0,0,0,1],[0,1,0,-1,-1,0,-1,1,1,1,0,1,0,0,1,0,0,0],[1,1,-1,0,-1,0,1,0,-1,0,0,0,0,0,1,0,0,0],[-1,0,0,1,-1,1,1,-1,1,0,1,0,0,0,0,0,0,0],[0,1,0,0,-1,0,-1,1,1,1,0,1,1,0,1,0,0,0],[1,-1,1,0,1,0,-1,0,0,0,0,0,0,0,0,0,0,1],[0,1,-1,1,0,0,1,0,-1,1,0,0,0,0,1,0,0,0],[1,-1,0,0,-1,1,1,0,-1,0,0,0,0,0,0,0,1,0],[0,0,0,-1,0,0,1,0,1,1,1,1,0,1,1,0,1,0],[1,1,0,-1,1,1,0,-1,-1,0,0,0,0,0,0,1,0,0],[1,0,0,-1,1,-1,0,1,0,0,1,1,0,0,0,1,0,1],[0,0,-1,1,0,-1,0,0,1,1,0,0,0,0,0,1,0,0],[0,-1,0,1,1,0,-1,1,0,0,0,0,0,0,1,0,0,0],[-1,0,1,0,1,0,0,-1,0,0,0,0,0,0,0,1,0,0],[0,1,0,-1,0,1,0,0,-1,1,0,0,0,0,0,1,0,0],[-1,0,0,0,1,-1,1,0,0,0,0,1,0,0,0,0,0,0],[0,-1,-1,1,1,-1,0,0,1,1,0,0,0,0,0,0,0,0],[0,0,-1,0,0,1,0,1,0,1,0,0,0,0,0,0,0,0],[1,-1,-1,0,-1,1,1,1,-1,0,0,0,1,0,0,0,0,0],[0,-1,0,0,1,0,0,1,0,1,0,1,0,0,0,1,0,1],[0,0,1,1,0,-1,0,0,0,1,0,0,0,0,0,1,0,0],[0,0,0,0,-1,0,1,1,0,0,0,0,0,0,0,0,0,1],[-1,0,0,0,-1,0,1,0,1,0,0,0,0,0,0,0,1,0],[0,0,0,-1,1,1,0,0,0,1,0,1,0,0,0,1,0,1],[1,-1,0,0,0,0,-1,0,1,0,0,0,0,1,0,0,0,0],[-1,1,-1,1,0,0,1,1,-1,0,0,0,0,1,1,0,0,0],[0,-1,0,0,1,0,0,1,0,1,0,1,0,0,0,1,0,1],[1,0,0,0,-1,0,1,-1,1,0,1,0,1,0,0,0,0,0],[-1,0,0,-1,1,1,0,0,0,0,1,1,0,0,0,1,0,0],[0,0,-1,0,1,0,1,1,-1,0,1,0,0,0,1,0,0,0],[0,-1,0,-1,0,0,0,1,1,0,0,0,0,0,0,1,0,0],[1,-1,0,0,0,0,1,-1,0,0,0,0,0,1,0,0,0,0],[1,0,1,0,1,-1,-1,1,-1,0,1,0,0,0,0,0,0,0],[0,0,1,0,-1,0,0,1,-1,1,0,0,1,0,1,0,0,0],[0,1,1,0,1,0,-1,-1,0,1,0,0,0,0,0,0,0,1],[1,0,0,1,0,0,-1,0,-1,0,1,1,0,1,1,0,1,0],[0,-1,-1,0,0,1,0,1,0,1,0,0,0,1,0,1,0,0],[0,0,1,0,0,0,0,1,-1,0,1,0,0,1,0,0,0,0],[1,-1,-1,1,1,-1,-1,1,0,0,0,0,0,0,0,0,0,1],[0,0,-1,-1,0,1,0,1,0,1,0,0,0,0,0,1,0,0],[0,1,0,0,-1,1,0,0,0,1,0,1,0,0,0,0,0,1],[0,-1,1,-1,0,0,1,0,0,0,0,0,0,1,0,0,0,0],[0,0,1,0,-1,0,0,0,1,0,0,0,0,0,1,0,0,0],[1,1,0,0,-1,0,0,1,-1,0,0,1,0,0,0,0,0,0],[1,-1,-1,-1,0,0,1,0,1,0,0,0,0,1,1,0,1,0],[0,1,0,-1,0,-1,1,-1,1,0,0,0,0,1,0,0,0,0],[-1,0,1,0,1,-1,-1,1,1,0,0,0,1,0,0,0,0,0],[-1,1,1,0,1,1,-1,-1,0,0,0,0,1,0,0,0,0,1],[0,0,0,1,-1,0,0,0,0,1,1,1,0,0,0,1,1,1],[-1,1,0,-1,-1,1,1,-1,1,0,0,1,0,0,0,0,0,0],[1,1,0,-1,0,1,0,0,-1,0,0,1,0,0,0,0,0,0],[1,0,0,1,0,0,0,-1,0,0,0,0,0,0,0,1,0,0],[0,0,-1,1,0,-1,1,0,1,1,1,0,0,1,0,0,1,0],[-1,1,-1,1,1,0,-1,-1,1,0,0,0,0,0,1,0,0,0],[1,0,0,-1,1,-1,0,1,0,0,1,1,0,0,0,1,0,1],[0,1,1,-1,0,0,0,0,0,1,0,0,0,0,0,0,0,0],[-1,1,1,-1,0,-1,1,0,1,0,0,0,0,1,0,0,0,0],[1,0,0,-1,0,0,1,-1,0,0,0,0,0,1,0,0,0,0],[0,1,1,0,0,-1,0,-1,1,1,0,0,0,0,0,0,0,0],[1,1,0,0,-1,0,1,-1,-1,0,0,1,1,0,1,0,0,0],[-1,0,0,1,0,0,1,0,0,0,1,1,0,0,0,0,0,0],[1,0,0,0,0,0,0,-1,1,0,0,0,0,1,0,0,0,0],[0,0,0,0,0,1,1,0,-1,0,0,0,1,1,0,0,0,0],[0,0,0,1,-1,1,-1,0,0,1,1,1,0,0,0,0,1,1],[0,-1,-1,1,-1,0,0,1,1,1,0,0,0,0,0,1,0,0],[-1,1,0,-1,1,0,0,-1,1,0,0,0,0,0,0,1,0,0],[0,0,0,1,-1,1,1,0,-1,1,0,0,0,0,0,0,0,0],[0,-1,-1,0,0,1,1,1,-1,1,0,0,0,0,0,0,0,0],[1,0,0,1,0,-1,-1,-1,1,0,0,0,0,1,0,0,0,0],[1,1,0,0,0,0,-1,0,0,0,0,1,1,1,1,0,1,1],[0,0,1,0,0,1,0,0,-1,0,0,0,0,0,0,1,1,0],[0,0,1,1,1,-1,-1,-1,1,1,0,0,0,0,0,0,0,0],[1,0,-1,0,0,0,1,-1,0,0,0,0,1,0,0,0,0,0],[0,0,1,0,-1,0,-1,1,0,1,0,0,1,0,0,0,0,0],[0,-1,-1,0,0,1,1,1,-1,1,0,0,0,0,0,0,0,0],[0,0,-1,-1,0,1,0,1,0,1,0,0,0,0,0,1,0,0],[0,0,0,0,-1,1,1,1,-1,1,0,0,0,0,0,0,0,0],[0,0,-1,1,0,1,1,-1,-1,1,1,0,0,1,0,0,0,0],[-1,0,1,1,-1,-1,1,0,0,0,1,0,0,0,0,0,1,1],[1,0,0,0,0,0,0,1,-1,0,1,1,0,1,0,0,0,0],[1,0,1,-1,1,0,0,0,-1,0,1,0,0,0,1,1,1,0],[0,1,1,1,-1,-1,1,-1,-1,1,0,0,0,0,0,0,0,0],[-1,0,1,0,-1,1,0,1,0,0,0,0,0,0,0,0,0,1],[-1,1,-1,-1,0,1,0,0,1,0,0,0,0,0,0,1,0,0],[-1,1,-1,0,0,1,1,-1,0,0,0,0,1,1,0,0,0,1],[0,0,0,1,1,-1,-1,0,0,0,0,0,0,0,0,0,0,1],[-1,1,1,-1,1,0,0,0,-1,0,0,0,0,0,0,1,0,0],[0,1,0,0,0,0,0,1,-1,0,0,0,0,1,0,0,0,0],[1,0,-1,-1,1,1,1,-1,-1,0,1,0,0,0,0,0,0,0],[-1,0,0,1,0,0,0,0,0,0,1,1,0,1,0,0,0,0],[0,-1,1,0,-1,1,1,0,0,0,0,0,0,0,0,0,1,1],[0,0,1,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,1],[-1,1,0,0,0,1,0,0,-1,0,0,0,1,1,0,1,1,0],[1,0,1,0,0,-1,-1,1,-1,0,1,0,0,0,0,0,0,0],[0,0,1,0,1,0,0,0,-1,0,0,0,0,0,0,1,0,0],[0,1,0,0,0,-1,0,-1,1,1,0,1,1,1,0,0,0,0],[-1,1,-1,0,1,1,-1,-1,1,0,0,0,1,0,0,0,0,0],[1,1,0,-1,0,-1,0,0,0,0,0,1,0,1,0,0,0,0],[1,-1,-1,0,1,1,-1,1,-1,0,0,0,1,0,0,0,0,0],[0,-1,1,1,1,-1,-1,1,-1,1,0,0,0,0,0,0,0,0],[0,0,0,1,-1,0,1,0,0,1,0,0,0,0,0,0,0,0],[0,-1,0,1,0,0,0,0,1,0,0,0,0,1,0,0,0,0],[-1,1,0,1,0,-1,1,1,-1,0,0,1,0,1,0,0,0,0],[0,1,-1,1,0,0,0,-1,1,1,0,0,0,1,0,0,0,0],[1,-1,1,1,0,0,0,-1,0,0,0,0,0,1,0,1,0,0],[0,0,0,-1,0,1,1,1,-1,0,1,1,0,1,0,0,0,0],[1,-1,1,1,-1,1,-1,0,0,0,0,0,0,0,0,0,1,0],[0,1,0,0,0,0,-1,1,-1,0,0,0,0,1,0,0,0,0],[1,1,0,1,0,-1,0,0,-1,0,0,1,0,0,0,0,0,0],[1,1,0,0,0,-1,-1,-1,1,0,0,1,1,1,0,0,0,0],[1,1,0,-1,1,-1,1,-1,0,0,0,1,0,0,0,0,0,1],[1,-1,1,0,1,1,0,-1,-1,0,0,0,0,0,0,1,0,0],[-1,0,1,0,0,1,-1,1,-1,0,1,0,1,1,0,0,0,0],[1,1,0,0,1,0,-1,-1,0,0,0,0,0,0,0,0,0,1],[0,0,-1,0,0,0,0,1,1,1,1,0,1,1,1,1,0,0],[0,0,1,-1,0,1,0,0,0,0,0,0,0,0,0,0,0,1],[0,1,0,-1,0,0,0,0,1,0,0,0,0,1,0,0,0,0],[0,1,-1,-1,0,0,0,0,1,0,0,0,0,1,0,1,0,0],[0,0,-1,1,0,-1,1,0,0,1,0,0,0,0,0,0,0,1],[-1,1,0,0,-1,1,1,-1,0,0,0,0,0,0,0,0,0,1],[1,-1,0,0,0,0,1,-1,1,0,0,0,0,1,0,0,0,0],[0,0,1,-1,-1,0,-1,1,1,1,0,0,0,0,1,0,0,0],[0,0,1,0,0,0,-1,1,0,1,1,0,0,1,0,0,0,0],[0,0,0,0,0,-1,0,1,1,1,1,1,1,1,0,1,0,0],[-1,1,1,1,-1,-1,1,0,0,0,0,0,0,0,0,0,0,1],[0,1,0,0,1,-1,0,0,-1,0,0,1,0,0,0,0,1,0],[1,1,-1,-1,1,-1,1,-1,0,0,0,0,0,0,0,0,0,1],[-1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0],[1,0,0,-1,0,0,1,0,0,0,0,0,0,1,0,0,0,0],[-1,0,1,0,0,0,0,0,1,0,1,0,1,1,1,1,1,0],[0,1,0,1,0,0,0,0,-1,0,0,1,0,0,0,1,0,0],[0,1,0,0,-1,1,1,0,-1,1,0,0,0,0,0,0,0,0],[-1,0,1,1,0,0,0,0,-1,0,0,0,0,1,0,1,1,0],[-1,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,0,0],[-1,1,-1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,1],[-1,-1,1,1,0,0,1,0,-1,0,0,0,0,1,0,0,0,0],[0,1,1,0,-1,-1,0,-1,1,0,0,0,1,0,0,0,0,0],[0,1,1,0,0,0,0,0,-1,1,0,0,1,1,1,1,1,0],[-1,0,1,1,1,-1,0,-1,0,0,0,0,0,0,0,1,0,0],[-1,-1,0,1,1,0,0,0,0,0,0,1,0,0,0,0,0,0],[-1,0,0,0,0,0,1,1,-1,0,1,1,0,1,1,0,0,0],[-1,-1,1,1,0,1,-1,1,-1,0,0,0,0,1,0,0,0,0],[-1,0,1,0,1,0,0,-1,1,0,1,0,1,0,1,1,0,0],[1,-1,1,0,1,-1,0,1,-1,0,0,0,0,0,0,1,0,0],[-1,0,-1,1,-1,0,0,1,1,0,1,0,0,0,0,1,0,0],[1,0,0,0,-1,0,0,1,0,0,0,0,1,0,1,1,0,1],[1,0,-1,-1,0,0,0,1,1,0,1,0,0,1,1,1,0,0],[0,0,0,0,1,-1,0,1,0,1,1,1,1,0,0,1,0,1],[1,0,0,0,0,0,0,0,-1,0,0,1,0,0,0,1,0,0],[1,0,1,-1,1,-1,-1,1,0,0,1,0,0,0,0,0,0,1],[0,1,0,-1,0,0,1,0,0,0,0,0,0,1,0,0,0,0],[0,0,0,0,-1,1,0,1,0,0,0,1,0,0,0,1,0,1],[0,0,-1,1,1,-1,0,0,0,1,1,0,0,0,0,0,0,1],[1,0,-1,0,-1,0,1,0,0,0,0,0,1,0,0,0,0,0],[1,-1,0,-1,-1,0,1,0,1,0,0,0,0,0,1,0,1,0],[-1,0,0,1,-1,0,0,0,1,0,1,1,0,0,0,0,0,0],[0,0,0,-1,0,0,1,1,0,1,1,1,0,1,1,0,0,1],[0,0,1,0,0,0,-1,-1,1,1,1,0,1,1,1,0,0,0],[-1,1,1,-1,1,0,0,0,-1,0,0,0,0,0,0,1,0,0],[0,-1,0,-1,1,-1,1,0,1,1,0,1,0,0,0,0,1,0],[-1,1,0,1,0,0,0,0,0,0,0,0,0,1,1,0,1,0],[1,-1,0,0,1,0,1,0,-1,0,0,1,1,0,1,0,1,0],[1,-1,1,-1,0,0,0,1,0,0,0,0,0,1,0,0,0,1],[0,0,0,-1,1,-1,-1,1,1,1,0,0,0,0,0,0,0,0],[1,-1,-1,1,1,-1,-1,1,0,0,0,0,0,0,0,0,0,1],[0,-1,1,1,0,0,1,-1,0,0,0,0,0,1,0,0,0,0],[0,0,0,1,0,0,-1,0,1,0,0,0,0,1,1,0,0,0],[0,0,-1,1,1,0,-1,1,-1,0,0,0,0,0,1,0,0,0],[-1,0,1,-1,1,0,0,0,0,0,0,0,0,0,0,1,0,0],[1,1,-1,1,0,1,-1,-1,0,0,0,0,0,1,0,0,0,1],[1,1,0,-1,0,1,-1,0,-1,0,0,1,0,0,0,0,1,0],[1,0,1,1,-1,1,0,-1,-1,0,1,0,0,0,0,1,0,0],[0,-1,-1,-1,0,1,1,0,1,1,0,0,0,0,0,0,1,0],[-1,1,1,1,0,0,-1,1,-1,0,0,0,0,1,0,0,0,0],[1,-1,-1,-1,0,1,-1,1,1,0,0,0,0,1,0,0,0,0],[0,-1,0,1,1,-1,1,0,0,1,0,1,0,0,0,0,1,1],[0,0,1,0,1,-1,0,0,0,1,1,0,1,0,0,1,1,1],[1,-1,1,0,0,0,-1,0,1,0,0,0,1,1,1,0,1,0],[0,-1,-1,-1,1,1,0,1,0,1,0,0,0,0,0,0,0,0],[-1,1,0,0,0,1,1,-1,0,0,0,1,0,1,0,0,0,0],[1,0,0,-1,-1,1,0,0,1,0,0,1,0,0,0,0,0,0],[0,-1,0,-1,0,1,1,0,1,1,0,1,0,1,0,0,1,0],[1,-1,-1,1,0,0,0,0,0,0,0,0,0,1,1,1,1,1],[0,1,0,0,0,1,0,-1,0,1,0,1,0,0,0,0,0,0],[1,-1,1,0,1,0,0,-1,0,0,0,0,1,0,1,1,0,1],[1,1,0,-1,1,1,0,-1,-1,0,0,0,0,0,0,1,0,0],[0,0,0,0,0,1,0,-1,1,1,1,1,1,1,0,1,0,0],[-1,1,1,0,-1,1,-1,1,0,0,0,0,1,0,0,0,0,1],[-1,0,1,0,0,-1,1,0,0,0,0,0,0,1,0,0,0,0],[0,1,-1,1,0,1,0,0,-1,0,0,0,0,1,0,0,0,0],[1,0,0,0,1,-1,0,0,-1,0,0,1,0,0,0,1,1,0],[0,1,0,1,-1,1,1,-1,-1,1,0,0,0,0,0,0,0,0],[0,-1,-1,1,1,-1,1,1,0,1,0,0,0,0,0,0,0,1],[1,0,1,0,0,1,-1,-1,0,0,0,0,0,0,0,0,0,1],[1,-1,0,0,-1,0,0,0,1,0,0,1,1,0,1,1,1,0],[1,-1,1,-1,0,1,-1,1,-1,0,0,0,0,1,0,0,0,0],[-1,0,0,0,0,1,0,0,1,0,0,1,0,0,0,0,0,0],[-1,-1,0,0,0,1,1,0,0,0,0,1,0,1,0,0,1,1],[-1,1,-1,0,0,1,1,-1,1,0,0,0,1,1,0,0,0,0],[0,0,0,0,0,0,0,1,-1,0,0,1,0,1,1,0,0,0],[-1,1,0,-1,1,0,0,0,0,0,0,0,0,0,0,1,0,0],[0,0,0,-1,1,-1,0,1,1,1,1,1,0,0,0,1,0,0],[0,0,1,-1,0,0,0,0,0,1,0,0,0,0,0,0,0,0],[0,-1,0,-1,0,1,0,1,0,1,0,0,0,0,0,0,0,0],[-1,0,1,0,0,1,-1,1,0,0,0,0,1,0,0,0,0,1],[1,-1,0,1,0,1,-1,1,-1,0,0,0,0,1,0,0,0,0],[-1,0,0,0,1,0,1,0,0,0,0,1,0,0,0,0,0,0],[0,0,0,0,1,-1,0,1,0,1,1,1,1,0,0,1,0,1],[0,0,1,1,-1,-1,1,0,-1,1,0,0,0,0,0,0,0,0],[0,0,0,1,0,-1,0,0,0,1,1,1,0,1,0,1,1,1],[1,0,0,1,0,-1,0,0,0,0,0,0,0,0,0,1,0,0],[1,1,-1,1,-1,0,0,0,-1,0,0,0,0,0,1,1,0,0],[-1,1,-1,0,1,-1,1,0,0,0,0,0,0,0,0,0,0,1],[0,1,0,0,-1,-1,1,1,0,0,0,0,1,0,0,0,0,1],[0,-1,0,0,1,1,0,0,0,1,0,1,1,0,0,1,1,1],[1,0,0,-1,0,0,0,1,0,0,0,0,0,1,0,0,0,0],[1,1,-1,-1,0,-1,1,1,0,0,0,0,0,1,0,0,0,1],[0,0,1,0,0,1,0,-1,0,0,0,0,0,0,0,0,0,1],[-1,-1,1,-1,1,1,0,1,-1,0,0,0,0,0,0,1,0,0],[0,0,0,-1,0,0,0,1,1,0,0,0,0,0,0,1,0,0],[0,1,0,-1,-1,0,0,0,1,1,0,1,0,0,1,1,0,0],[1,1,0,-1,-1,1,-1,1,-1,0,0,1,0,0,0,0,0,0],[1,-1,1,-1,1,-1,0,1,0,0,0,0,0,0,0,1,0,1],[1,-1,-1,-1,0,1,1,1,-1,0,0,0,0,1,0,0,0,0],[0,0,-1,0,0,1,0,1,0,1,0,0,0,0,0,0,0,0],[1,0,0,0,0,0,-1,1,0,0,1,0,0,1,0,0,0,0],[-1,0,0,0,0,0,1,0,1,0,1,1,1,1,1,0,1,0],[1,1,0,0,-1,0,-1,0,0,0,0,1,0,0,0,0,0,0],[0,0,-1,1,-1,0,1,1,0,1,1,0,0,0,1,0,0,1],[1,-1,-1,0,0,0,1,0,1,0,0,0,1,1,1,0,1,0],[-1,-1,0,1,1,0,0,0,1,0,0,1,0,0,0,0,0,0],[0,-1,0,0,0,0,0,1,1,0,0,0,0,0,0,1,0,0],[-1,-1,0,1,1,-1,-1,1,1,0,0,1,0,0,0,0,0,0],[1,0,-1,0,1,0,0,1,-1,0,0,0,0,0,1,0,0,0],[-1,1,-1,0,-1,1,1,-1,1,0,0,0,1,0,0,0,0,0],[-1,1,-1,0,0,0,1,-1,1,0,0,0,1,1,1,0,0,0],[1,0,0,1,0,0,0,-1,-1,0,0,0,0,0,0,1,0,0],[-1,1,1,1,1,0,-1,0,-1,0,0,0,0,0,0,0,1,0],[1,-1,0,0,0,-1,0,1,0,0,0,0,1,1,0,1,0,1],[-1,1,1,1,0,1,-1,-1,0,0,0,0,0,0,0,0,0,1],[1,-1,-1,1,1,0,-1,1,-1,0,0,0,0,0,1,0,0,0],[0,1,0,-1,0,0,0,0,1,0,0,0,0,1,0,0,0,0],[1,0,-1,-1,0,0,1,0,0,0,0,0,0,0,1,0,0,0],[-1,0,0,0,-1,0,0,1,1,0,0,0,0,0,0,1,0,0],[0,-1,-1,1,1,0,0,0,1,1,0,0,0,0,0,0,0,0],[0,1,0,1,0,-1,0,0,0,1,0,0,0,0,0,1,0,0],[1,1,0,0,0,-1,-1,1,-1,0,0,1,0,0,0,0,0,0],[-1,0,0,0,1,-1,0,1,1,0,1,1,1,0,0,1,0,0],[0,-1,1,1,-1,-1,1,0,0,1,0,0,0,0,0,0,1,0],[1,-1,-1,0,-1,1,0,1,1,0,0,0,0,0,0,1,0,0],[1,-1,0,0,1,0,1,-1,-1,0,0,1,1,0,1,0,0,0],[-1,0,0,1,0,0,1,-1,1,0,1,0,0,0,0,0,0,0],[0,1,0,-1,1,-1,0,-1,1,1,0,0,0,0,0,0,0,0],[1,0,0,0,0,0,1,0,-1,0,1,1,1,1,1,0,1,0],[1,-1,-1,-1,-1,1,1,0,1,0,0,0,0,0,0,0,1,0],[0,0,0,0,1,0,0,1,-1,0,1,0,0,0,0,0,0,0],[0,-1,1,0,0,0,-1,0,1,0,0,0,0,0,1,0,0,0],[1,-1,-1,-1,1,1,1,-1,0,0,0,0,0,0,0,0,0,1],[-1,-1,0,1,1,-1,1,1,-1,0,0,1,0,0,0,0,0,0],[1,-1,1,1,0,0,-1,0,0,0,0,0,0,0,0,0,1,0],[1,1,0,0,0,0,0,-1,0,0,0,1,0,0,0,0,0,0],[1,0,1,1,-1,-1,-1,-1,1,0,1,0,0,0,0,0,0,0],[0,1,1,0,-1,1,0,0,-1,1,0,0,0,0,0,0,0,0],[1,0,-1,-1,1,1,0,1,-1,0,1,0,0,0,0,0,0,0],[0,0,1,0,0,-1,0,1,-1,0,0,0,0,1,0,0,0,0],[1,1,0,0,-1,-1,1,1,-1,0,0,1,1,0,0,0,0,0],[0,1,0,-1,1,0,-1,0,0,1,0,0,0,0,0,0,1,0],[1,0,0,-1,1,1,0,-1,0,0,0,0,0,0,0,0,0,1],[-1,0,1,-1,-1,0,1,0,1,0,0,0,0,0,1,0,0,0],[1,-1,1,0,0,1,0,0,-1,0,0,0,0,0,0,0,1,0],[0,-1,1,0,-1,1,0,1,0,0,0,0,0,0,0,0,0,1],[0,0,-1,1,0,1,1,0,-1,1,1,0,0,1,0,0,1,0],[0,0,-1,1,0,0,0,0,1,1,0,0,0,0,0,0,0,0],[1,-1,0,0,1,-1,0,0,0,0,0,0,0,0,0,0,0,1],[-1,1,1,-1,-1,0,1,0,1,0,0,0,0,0,1,0,0,0],[0,0,0,1,-1,0,0,1,0,1,0,0,0,0,0,1,0,1],[0,-1,-1,1,1,-1,-1,1,1,1,0,0,0,0,0,0,0,0],[0,-1,1,1,0,-1,-1,1,1,1,0,0,0,1,0,0,0,0],[0,0,0,0,1,-1,-1,0,1,1,0,0,0,0,0,0,0,0],[-1,1,0,-1,0,0,1,0,0,0,0,0,0,1,0,0,0,0],[1,0,-1,-1,1,0,0,1,-1,0,0,0,0,0,1,0,0,0],[-1,-1,1,0,0,0,1,1,0,0,0,0,1,1,1,0,0,1],[-1,0,1,-1,0,0,1,1,0,0,1,0,0,1,1,0,0,1],[-1,1,0,0,1,1,-1,-1,1,0,0,0,1,0,0,0,0,0],[1,1,0,0,0,0,-1,0,0,0,0,1,1,1,1,0,1,1],[1,0,0,0,0,0,1,-1,0,0,1,1,1,1,1,0,0,1],[-1,0,0,-1,0,1,1,0,0,0,0,1,0,0,0,0,0,1],[0,-1,1,0,0,1,0,0,0,1,0,0,1,1,0,1,1,1],[1,-1,1,0,0,1,-1,1,-1,0,0,0,1,1,0,0,0,0],[0,0,-1,0,0,1,-1,0,1,1,1,0,1,1,0,0,0,0],[0,0,0,0,0,1,-1,1,0,1,0,0,0,0,0,0,0,0],[-1,0,1,1,-1,1,1,-1,0,0,1,0,0,0,0,0,0,1],[0,-1,0,1,0,0,0,1,0,0,0,0,0,0,0,1,0,1],[0,1,0,-1,1,0,0,0,0,1,0,1,0,0,1,1,1,1],[1,-1,0,0,0,0,1,-1,0,0,0,0,0,1,0,0,0,0],[1,-1,1,-1,0,1,1,-1,-1,0,0,0,0,1,0,0,0,0],[0,0,0,0,1,0,0,-1,1,1,1,1,1,0,1,1,0,0],[0,0,0,0,1,0,1,0,-1,0,0,1,0,0,0,0,0,0],[-1,0,1,-1,0,-1,0,1,1,0,0,0,0,1,0,1,0,0],[1,0,-1,1,0,0,-1,1,0,0,0,0,0,1,1,0,0,1],[-1,0,1,1,0,0,0,-1,1,0,0,0,0,0,1,0,0,0],[0,0,-1,0,0,1,1,0,-1,1,0,0,0,0,0,0,0,0],[0,0,1,1,-1,-1,0,0,0,1,1,0,0,0,0,1,1,0],[-1,0,1,-1,0,1,0,0,0,0,0,0,0,0,0,1,0,1],[0,0,1,-1,1,1,-1,-1,0,1,0,0,0,0,0,0,0,1],[1,0,0,1,-1,1,-1,-1,1,0,1,1,0,0,0,0,0,0],[1,1,-1,1,0,-1,0,-1,1,0,0,0,0,1,0,1,0,0],[1,0,0,-1,0,0,1,0,0,0,0,0,0,1,0,0,0,0],[0,-1,1,1,0,1,-1,0,-1,0,0,0,0,1,0,0,1,0],[0,0,1,1,-1,0,0,0,0,1,1,0,0,0,0,1,1,0],[0,1,-1,0,1,1,-1,0,0,1,0,0,1,0,0,0,1,1],[0,0,1,0,-1,-1,0,1,0,1,0,0,1,0,0,0,0,1],[1,0,1,0,0,0,-1,-1,1,0,1,0,1,1,1,0,0,0],[1,1,0,-1,0,-1,1,0,-1,0,0,1,0,1,0,0,0,0],[0,-1,1,1,0,1,-1,0,0,1,0,0,0,1,0,0,1,1],[1,0,-1,-1,1,0,0,1,-1,0,0,0,0,0,1,0,0,0],[0,1,0,1,0,0,-1,0,-1,1,0,1,0,1,1,0,1,0],[1,-1,0,0,-1,-1,0,1,1,0,0,0,1,0,0,1,0,0],[0,0,1,0,1,-1,0,-1,1,1,1,0,1,0,0,1,0,0],[1,-1,1,0,1,-1,0,0,0,0,0,0,1,0,0,1,1,1],[0,0,0,1,0,-1,0,0,1,1,0,0,0,0,0,1,0,0],[1,1,-1,1,1,-1,-1,-1,0,0,0,0,0,0,0,0,0,1],[0,0,-1,0,0,0,1,-1,1,0,1,0,0,0,0,0,0,0],[0,1,0,-1,0,0,0,0,0,1,0,0,0,1,0,0,0,0],[0,0,0,-1,0,1,0,-1,1,0,0,1,0,0,0,0,0,0],[0,1,0,0,-1,0,1,0,-1,1,0,1,1,0,1,0,0,0],[0,0,1,0,0,-1,1,0,-1,0,0,0,0,1,0,0,0,0],[0,0,-1,-1,1,1,1,-1,1,1,0,0,0,0,0,0,0,0],[0,-1,1,1,0,0,1,0,-1,1,0,0,0,1,1,0,1,0],[0,-1,-1,0,1,0,0,1,0,1,0,0,0,0,1,0,0,1],[1,1,0,-1,0,0,0,0,0,0,0,1,0,1,1,1,1,1],[-1,1,0,0,-1,0,1,0,0,0,0,0,1,0,1,0,0,1],[-1,1,-1,1,0,1,-1,0,0,0,0,0,0,1,0,0,0,0],[-1,0,0,0,0,1,-1,1,1,0,0,1,1,0,0,0,0,0],[0,0,1,1,0,0,-1,0,0,0,0,0,0,1,1,0,0,1],[1,-1,-1,0,1,0,1,0,0,0,0,0,1,0,1,0,1,1],[0,0,0,0,-1,-1,0,1,1,0,0,0,1,0,0,1,0,0],[1,0,1,-1,1,-1,0,1,-1,0,1,0,0,0,0,1,0,0],[1,0,0,-1,-1,1,0,1,0,0,0,1,0,0,0,0,0,1],[1,1,-1,1,0,1,0,-1,-1,0,0,0,0,0,0,1,0,0],[-1,-1,0,1,-1,1,0,0,1,0,0,1,0,0,0,0,1,0],[1,1,0,1,-1,0,0,0,-1,0,0,1,0,0,1,1,1,0],[-1,0,0,0,0,0,1,0,0,0,1,1,0,0,0,0,0,1],[0,0,1,0,-1,1,0,0,0,0,0,0,0,0,0,0,0,1],[1,-1,1,0,-1,-1,1,1,0,0,0,0,1,0,0,0,0,0],[-1,0,0,-1,0,1,0,1,0,0,1,1,0,1,0,1,0,1],[0,0,-1,-1,1,1,1,-1,1,1,0,0,0,0,0,0,0,0],[1,0,1,-1,0,-1,-1,1,1,0,0,0,0,1,0,0,0,0],[0,1,0,-1,-1,0,0,1,1,0,0,0,0,0,1,1,0,0],[0,0,0,-1,1,0,0,0,1,1,1,1,0,0,1,1,1,0],[-1,0,0,1,0,1,0,0,-1,0,0,0,0,1,0,0,0,0],[-1,0,0,-1,0,1,1,0,1,0,1,1,0,1,0,0,1,0],[-1,0,1,0,0,0,0,-1,1,0,0,0,0,0,1,0,0,0],[0,0,0,-1,-1,1,0,0,1,0,0,1,0,0,0,0,0,0],[-1,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0],[0,1,0,0,0,0,0,1,-1,0,0,0,0,1,0,0,0,0],[0,0,-1,-1,1,0,1,-1,1,1,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,-1,1,1,1,0,0,1,0,0,0,0,0],[0,1,0,0,-1,0,-1,0,1,1,0,1,1,0,1,0,0,0],[1,-1,1,-1,0,-1,0,0,1,0,0,0,0,1,0,0,0,0],[0,0,0,0,-1,-1,1,0,1,0,0,0,1,0,0,0,1,0],[1,0,0,0,0,-1,0,0,1,0,0,0,0,1,0,0,0,0],[-1,-1,1,1,1,0,-1,1,-1,0,0,0,0,0,1,0,0,0],[1,0,-1,0,-1,1,1,-1,1,0,1,0,0,0,0,0,0,0],[-1,1,0,1,-1,-1,0,0,1,0,0,1,0,0,0,1,1,0],[0,0,0,0,-1,1,1,1,-1,1,0,0,0,0,0,0,0,0],[0,0,1,0,-1,1,-1,0,0,0,0,0,0,0,0,0,0,1],[0,0,0,0,-1,0,0,1,1,0,0,0,0,0,0,1,0,0],[0,0,-1,-1,1,1,0,0,1,1,0,0,0,0,0,0,0,0],[1,0,0,1,1,0,0,-1,-1,0,0,0,0,0,0,1,0,0],[0,0,0,1,0,-1,0,1,-1,1,0,1,0,1,0,0,0,0],[0,-1,1,1,0,0,0,-1,1,0,0,0,0,1,0,0,0,0],[0,0,0,0,0,1,0,-1,1,1,1,1,1,1,0,1,0,0],[1,0,-1,0,0,0,1,0,0,0,1,0,1,1,1,0,1,1],[0,1,1,0,-1,0,0,1,-1,1,0,0,0,0,0,0,0,0],[0,1,-1,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0],[0,0,-1,-1,1,-1,1,0,1,1,1,0,0,0,0,0,1,0],[-1,1,1,-1,-1,0,1,-1,1,0,0,0,0,0,1,0,0,0],[1,0,-1,-1,-1,1,0,0,1,0,1,0,0,0,0,1,1,0],[-1,1,0,1,1,0,0,-1,0,0,0,0,0,0,1,0,0,0],[0,-1,1,-1,1,0,0,0,1,1,0,0,0,0,1,1,1,0],[-1,0,1,0,0,-1,1,0,1,0,1,0,1,1,0,0,1,0],[1,1,0,-1,-1,1,-1,1,0,0,0,1,0,0,0,0,0,0],[0,-1,1,-1,1,-1,0,1,1,1,0,0,0,0,0,1,0,0],[1,-1,1,-1,1,-1,-1,1,0,0,0,0,0,0,0,0,0,1],[1,1,-1,-1,0,1,-1,1,-1,0,0,0,0,1,0,0,0,0],[0,0,0,-1,1,0,0,-1,1,1,0,0,0,0,0,0,0,0],[0,-1,-1,0,1,0,1,0,0,1,0,0,0,0,1,0,0,1],[1,0,0,0,0,0,-1,-1,1,0,0,0,0,1,0,0,0,0],[0,1,-1,1,-1,-1,1,-1,1,1,0,0,0,0,0,0,0,0],[0,1,-1,-1,1,1,1,-1,-1,1,0,0,0,0,0,0,0,0],[1,-1,-1,0,1,1,0,0,0,0,0,0,1,0,0,1,1,1],[1,0,-1,1,0,1,0,0,-1,0,1,0,0,1,0,1,1,0],[-1,1,0,-1,-1,0,1,0,1,0,0,0,0,0,1,0,0,0],[-1,0,0,0,1,0,-1,0,1,0,1,1,1,0,0,0,0,0],[1,-1,0,-1,1,0,1,0,0,0,0,1,0,0,1,0,1,1],[-1,0,0,0,-1,0,1,0,1,0,0,0,0,0,0,0,1,0],[0,0,-1,0,0,0,0,1,0,1,0,0,0,1,0,0,0,1],[1,-1,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0],[1,-1,1,0,0,-1,1,1,-1,0,0,0,1,1,0,0,0,0],[0,-1,-1,0,0,1,1,1,0,1,0,0,0,0,0,0,0,0],[0,0,0,-1,0,1,0,0,1,0,0,1,0,0,0,0,0,0],[-1,0,0,1,0,1,0,-1,0,0,0,0,0,1,0,0,0,0],[-1,1,-1,-1,0,1,0,1,1,0,0,0,0,0,0,1,0,0],[1,-1,1,0,0,1,0,-1,0,0,0,0,0,1,0,0,0,1],[-1,0,1,0,0,-1,1,0,0,0,0,0,0,1,0,0,0,0],[1,0,1,0,-1,1,-1,0,-1,0,0,0,0,0,0,0,1,0],[0,1,-1,0,1,-1,0,-1,1,1,0,0,0,0,0,0,0,0],[0,0,0,1,0,1,0,-1,0,0,0,0,0,1,0,0,0,0],[-1,0,1,1,0,0,0,0,-1,0,0,0,0,1,0,1,1,0],[0,0,0,0,0,1,-1,1,0,1,0,0,0,0,0,0,0,0],[-1,0,1,1,1,-1,-1,0,0,0,1,0,0,0,0,0,1,1],[-1,0,0,1,1,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,-1,0,1,0,-1,0,0,1,1,0,0,0,1,0,1,1,0],[0,-1,1,0,0,-1,1,-1,1,0,0,0,0,1,0,0,0,0],[0,0,-1,1,1,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,1,0,-1,0,0,-1,1,0,1,0,0,0,1,0,0,0,0],[-1,1,-1,1,1,0,1,-1,0,0,0,0,0,0,1,0,0,0],[-1,-1,1,1,-1,1,0,0,0,0,0,0,0,0,0,0,1,1],[1,0,0,-1,-1,0,0,1,0,0,0,1,0,0,1,1,0,0],[-1,0,1,1,1,-1,-1,1,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,1,-1,-1,1,1,1,1,1,1,0,0,0,0],[1,-1,1,-1,0,-1,1,1,-1,0,0,0,0,1,0,0,0,0],[-1,0,0,0,-1,1,1,0,1,0,1,1,1,0,0,0,1,0],[0,0,1,0,-1,0,0,1,0,0,0,0,1,0,1,1,0,1],[-1,1,0,-1,0,1,0,1,0,0,0,0,0,1,0,1,0,0],[0,0,-1,0,1,0,0,1,0,0,1,0,0,0,0,0,0,0],[0,1,0,1,-1,1,-1,-1,0,1,0,1,0,0,0,0,0,1],[0,1,1,1,-1,1,-1,-1,0,0,0,0,0,0,0,0,0,1],[0,1,1,1,-1,-1,-1,1,-1,1,0,0,0,0,0,0,0,0],[1,-1,-1,0,0,0,1,0,1,0,0,0,1,1,1,0,1,0],[1,0,0,0,0,-1,1,0,0,0,1,1,1,1,0,0,1,1],[-1,1,0,1,-1,0,1,0,0,0,0,0,0,0,0,0,0,1],[-1,-1,1,1,1,-1,0,0,1,0,0,0,0,0,0,1,0,0],[-1,-1,1,0,0,0,-1,1,1,0,0,0,1,0,0,0,0,0],[1,-1,0,0,1,1,-1,0,0,0,0,1,1,0,0,0,1,1],[1,0,-1,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1],[1,-1,-1,-1,0,1,0,1,0,0,0,0,0,1,0,1,0,1],[0,1,0,-1,0,0,1,0,0,0,0,0,0,1,0,0,0,0],[0,0,1,0,1,-1,0,0,-1,0,0,0,0,0,0,1,0,0],[-1,0,0,0,1,1,-1,0,1,0,0,0,1,0,0,0,0,0],[0,-1,-1,1,0,0,0,0,1,1,0,0,0,1,0,1,1,0],[-1,-1,0,0,1,1,1,-1,0,0,0,1,0,0,0,0,0,0],[-1,1,0,0,1,-1,0,0,0,0,0,0,0,0,0,0,1,0],[-1,1,-1,-1,1,1,1,0,-1,0,0,0,0,0,0,0,1,0],[1,-1,0,0,-1,0,0,1,0,0,0,0,1,0,1,1,0,1],[1,0,1,0,-1,0,-1,1,-1,0,1,0,0,0,0,0,0,0],[0,0,-1,1,1,-1,1,0,0,1,0,0,0,0,0,0,0,1],[1,-1,1,-1,1,0,0,0,-1,0,0,0,0,0,0,1,0,0],[-1,-1,1,1,0,-1,1,1,0,0,0,0,0,1,0,0,0,1],[1,0,-1,0,-1,1,1,0,0,0,0,0,1,0,0,0,0,0],[0,-1,1,0,0,0,0,-1,1,0,0,0,0,1,0,0,0,0],[0,0,0,1,0,-1,0,1,0,1,0,0,0,0,0,1,0,0],[1,0,1,0,1,0,0,-1,-1,0,0,0,0,0,0,1,0,0],[0,-1,0,1,-1,0,1,1,0,1,0,1,0,0,1,0,0,1],[1,-1,0,1,0,0,0,0,0,0,0,1,0,1,1,1,1,1],[0,1,-1,1,-1,-1,0,1,0,1,0,0,0,0,0,1,0,1],[0,1,0,-1,0,-1,1,1,0,0,0,0,0,1,0,0,0,0],[-1,1,-1,0,0,0,-1,1,1,0,0,0,1,1,0,0,0,0],[1,-1,1,1,-1,0,-1,1,-1,0,0,0,0,0,1,0,0,0],[0,1,-1,-1,0,-1,1,1,0,0,0,0,0,1,0,0,0,1],[0,-1,0,0,0,-1,0,1,1,0,0,0,0,0,0,1,0,0],[-1,0,0,0,0,1,1,0,-1,0,1,1,0,1,0,0,0,0],[-1,0,1,-1,0,1,0,1,0,0,0,0,0,0,0,1,0,1],[0,0,-1,1,0,0,0,1,0,1,0,0,0,0,0,0,0,1],[0,0,1,0,0,0,0,-1,1,1,1,0,1,1,1,1,0,0],[-1,0,1,1,0,0,0,-1,1,0,0,0,0,0,1,0,0,0],[0,-1,0,-1,1,1,0,0,0,1,0,0,0,0,0,0,0,0],[1,1,0,0,0,-1,0,-1,0,0,0,1,0,0,0,0,0,0],[1,1,-1,0,0,0,-1,0,1,0,0,0,0,1,0,0,0,0],[0,0,0,-1,1,0,-1,1,1,1,0,0,0,0,0,0,0,0],[1,0,0,0,-1,0,0,0,1,0,1,0,1,0,1,0,1,0],[0,0,1,0,-1,1,0,-1,0,0,1,0,0,0,0,0,0,1],[0,-1,0,1,1,0,0,-1,1,1,0,1,0,0,1,1,0,0],[1,1,0,0,0,0,-1,1,-1,0,0,1,1,1,1,0,0,0],[0,0,0,1,1,-1,0,0,0,1,0,1,0,0,0,1,0,1],[0,1,0,0,0,0,-1,-1,1,1,0,1,0,0,0,0,0,0],[0,0,0,0,0,0,1,0,-1,1,0,1,0,0,1,0,0,0],[1,0,1,-1,0,1,-1,1,-1,0,1,0,0,0,0,0,0,0],[1,0,0,-1,0,0,1,1,-1,0,0,0,0,0,1,0,0,0],[1,0,-1,0,1,0,0,-1,0,0,0,0,0,0,0,0,0,1],[0,1,-1,0,0,-1,0,0,1,0,0,0,0,1,0,0,0,0],[-1,1,1,-1,-1,0,0,0,1,0,0,0,0,0,1,1,0,0],[0,-1,0,1,1,0,-1,0,1,1,0,1,0,0,1,0,1,0],[-1,1,0,-1,0,0,1,1,0,0,0,1,0,1,1,0,0,1],[0,0,1,1,0,0,0,0,-1,0,0,0,0,0,0,1,0,0],[0,0,1,1,-1,-1,1,-1,0,1,1,0,0,0,0,0,0,0],[0,-1,1,1,0,0,0,1,-1,0,0,0,0,1,0,1,0,0],[1,-1,-1,-1,0,1,1,1,-1,0,0,0,0,1,0,0,0,0],[0,0,-1,1,-1,1,1,-1,0,1,1,0,0,0,0,0,0,0],[-1,0,1,1,1,-1,-1,-1,1,0,1,0,0,0,0,0,0,0],[-1,1,1,-1,-1,1,0,0,0,0,0,0,0,0,0,1,0,1],[1,-1,1,-1,0,0,0,0,1,0,0,0,0,1,1,1,1,0],[1,-1,0,0,1,0,-1,1,0,0,0,0,0,0,0,0,0,1],[1,0,0,1,0,0,0,0,-1,0,0,0,0,0,0,1,0,0],[0,1,-1,1,-1,1,0,0,-1,1,0,0,0,0,0,1,1,0],[-1,1,1,1,1,0,-1,0,-1,0,0,0,0,0,0,0,1,0],[-1,-1,1,0,0,0,1,1,-1,0,0,0,0,1,0,0,0,0],[0,1,-1,0,0,-1,1,0,0,0,0,0,1,1,0,0,0,1],[1,0,1,0,0,-1,1,0,-1,0,1,0,1,1,0,0,1,0],[1,0,-1,-1,0,1,1,0,-1,0,1,0,0,1,0,0,1,0],[0,0,-1,0,1,0,1,-1,0,1,0,0,1,0,1,0,0,1],[1,0,0,-1,1,0,0,1,-1,0,1,0,0,0,0,0,0,0],[1,-1,0,-1,0,0,0,0,1,0,0,0,0,1,0,0,0,0],[1,-1,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0],[0,-1,-1,0,1,1,1,1,-1,1,0,0,0,0,0,0,0,0],[-1,0,1,0,-1,1,-1,1,0,0,0,0,1,0,0,0,0,1],[0,-1,1,-1,1,-1,-1,1,1,1,0,0,0,0,0,0,0,0],[0,1,-1,0,1,1,1,-1,-1,0,0,0,1,0,0,0,0,0],[0,0,0,1,-1,-1,0,1,0,0,0,1,0,0,0,0,0,1],[1,0,-1,0,1,1,-1,0,-1,0,0,0,0,0,0,0,1,0],[0,-1,0,0,1,0,0,-1,1,1,0,1,1,0,1,1,0,0],[0,-1,-1,0,1,1,0,-1,1,1,0,0,0,0,0,0,0,0],[0,-1,1,0,0,0,0,0,1,1,0,0,1,1,1,1,1,0],[-1,0,0,1,1,-1,-1,1,1,0,1,0,0,0,0,0,0,0],[-1,0,1,0,0,0,1,0,-1,0,0,0,0,1,0,0,0,0],[-1,-1,0,-1,0,1,0,1,1,0,0,1,0,0,0,1,0,0],[0,0,1,0,0,0,1,-1,0,0,0,0,0,1,0,0,0,0],[1,0,0,-1,1,1,-1,0,-1,0,0,0,0,0,0,0,1,0],[1,0,0,-1,0,-1,0,1,0,0,0,1,0,1,0,0,0,1],[0,1,1,1,-1,0,-1,0,0,1,0,0,0,0,0,0,0,0],[1,-1,1,-1,-1,1,0,1,-1,0,0,0,0,0,0,1,0,0],[1,0,0,-1,0,1,-1,-1,1,0,1,1,0,1,0,0,0,0],[-1,0,1,1,-1,-1,0,1,0,0,0,0,0,0,0,0,0,1],[-1,1,0,1,-1,0,1,-1,1,0,0,1,0,0,1,0,0,0],[0,-1,-1,0,1,1,0,1,-1,1,0,0,0,0,0,0,0,0],[0,0,0,1,0,0,1,-1,0,1,1,1,0,1,1,0,0,1],[0,1,-1,-1,-1,1,0,1,1,0,0,0,0,0,0,1,0,0],[0,-1,-1,0,1,0,0,1,0,1,0,0,0,0,1,0,0,1],[0,-1,-1,0,1,0,0,0,1,1,0,0,0,0,0,0,0,0],[1,0,0,0,-1,0,1,0,0,0,0,0,1,0,0,0,0,0],[0,1,-1,-1,0,0,1,1,-1,0,0,0,0,1,1,0,0,0],[0,1,0,0,-1,0,0,0,1,1,0,1,1,0,1,0,0,0],[0,0,-1,0,0,1,0,0,1,1,1,0,0,0,0,0,0,0],[-1,0,0,0,0,1,-1,0,1,0,0,1,1,0,0,0,0,0],[0,0,-1,0,0,0,1,0,1,1,1,0,1,1,1,0,1,0],[-1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,1,0,0],[1,1,-1,0,-1,1,1,0,-1,0,0,0,1,0,0,0,0,0],[0,0,-1,-1,1,1,-1,0,1,1,0,0,0,0,0,0,0,0],[0,0,0,-1,0,0,1,1,0,1,1,1,0,1,1,0,0,1],[0,-1,1,0,-1,0,1,0,0,1,0,0,1,0,1,0,1,1],[0,1,0,-1,1,0,0,0,-1,0,0,0,0,0,0,0,1,0],[0,1,-1,-1,0,1,-1,1,0,1,0,0,0,1,0,0,0,0],[1,1,-1,0,-1,0,1,-1,1,0,0,0,1,0,0,0,0,0],[0,0,-1,1,0,1,-1,0,0,0,0,0,0,1,0,0,0,0],[0,-1,1,1,0,0,0,-1,0,0,0,0,0,1,0,1,0,1],[-1,1,-1,0,1,1,0,-1,0,0,0,0,1,0,0,0,0,0],[-1,1,-1,1,1,0,1,0,-1,0,0,0,0,0,1,0,0,0],[0,-1,1,1,0,0,-1,1,0,0,0,0,0,1,1,0,0,1],[-1,0,0,0,-1,1,0,1,0,0,1,1,1,0,0,1,0,1],[0,0,1,0,0,0,1,0,-1,1,1,0,1,1,1,0,1,0],[0,0,0,1,0,1,0,-1,0,0,0,0,0,1,0,0,0,0],[1,-1,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,1],[1,0,1,-1,1,-1,-1,0,0,0,1,0,0,0,0,0,1,1],[1,-1,1,-1,0,-1,1,-1,1,0,0,0,0,1,0,0,0,0],[-1,0,0,1,1,-1,1,1,-1,0,0,1,0,0,0,0,0,0],[0,1,0,1,1,-1,0,0,-1,0,0,1,0,0,0,0,1,0],[0,1,-1,1,0,-1,0,0,1,1,0,0,0,1,0,1,1,0],[0,0,-1,-1,1,1,-1,1,1,1,0,0,0,0,0,0,0,0],[1,1,0,1,-1,-1,-1,-1,1,0,0,1,0,0,0,0,0,0],[-1,-1,1,-1,1,0,0,1,1,0,0,0,0,0,0,1,0,0],[0,0,-1,1,1,0,-1,0,1,1,1,0,0,0,1,0,1,0],[-1,1,0,0,1,0,1,-1,0,0,0,1,0,0,0,0,0,0],[1,0,1,0,0,0,-1,0,-1,0,0,0,0,0,0,0,1,0],[0,1,-1,0,0,0,1,0,0,0,0,0,0,1,0,0,1,1],[-1,1,1,0,-1,0,1,-1,0,0,0,0,1,0,1,0,0,1],[-1,1,1,0,1,0,-1,0,0,0,0,0,1,0,0,0,1,0],[-1,1,0,-1,0,1,1,0,0,0,0,1,0,1,0,0,1,1],[1,0,1,-1,1,0,0,0,-1,0,1,0,0,0,1,1,1,0],[1,1,0,0,0,0,0,-1,0,0,0,1,0,0,0,0,0,0],[-1,1,-1,1,0,0,1,-1,1,0,0,0,0,1,1,0,0,0],[0,1,0,0,1,-1,0,0,0,1,0,1,1,0,0,1,1,1],[1,0,0,0,0,0,-1,0,1,0,1,1,1,1,1,0,1,0],[1,1,0,0,0,0,0,0,-1,0,0,1,0,0,0,0,0,0],[0,-1,0,0,0,-1,1,1,0,0,0,0,0,0,0,0,0,1],[0,1,1,-1,0,-1,0,0,0,1,0,0,0,1,0,0,0,0],[0,1,0,1,-1,0,0,-1,0,0,0,0,0,0,0,1,0,1],[0,-1,1,0,1,1,-1,1,-1,0,0,0,1,0,0,0,0,0],[0,-1,0,1,1,-1,0,1,-1,0,0,1,0,0,0,0,0,0],[1,-1,1,0,0,1,0,0,-1,0,0,0,0,0,0,0,1,0],[1,0,0,-1,0,0,-1,0,1,0,0,0,0,1,0,0,0,0],[0,-1,1,1,0,-1,1,0,-1,1,0,0,0,1,0,0,1,0],[0,0,-1,0,1,1,0,0,0,0,0,0,1,0,0,0,0,0],[-1,0,0,1,0,1,1,-1,-1,0,0,0,0,1,0,0,0,0],[1,-1,1,0,0,-1,0,0,0,0,0,0,0,1,0,0,0,0],[-1,0,0,0,1,1,-1,0,0,0,0,0,1,0,0,0,0,0],[1,-1,1,0,0,0,-1,0,0,0,0,0,0,0,0,0,1,0],[1,1,0,0,0,0,0,0,-1,0,0,1,0,0,0,0,0,0],[1,0,0,1,-1,-1,0,0,1,0,0,0,0,0,0,1,0,0],[0,0,1,-1,0,0,0,0,1,1,1,0,0,1,1,1,1,0],[0,1,-1,0,1,0,1,0,-1,0,0,0,0,0,1,0,0,0],[0,1,1,0,0,-1,1,-1,0,1,0,0,1,1,0,0,0,1],[1,0,1,-1,0,0,0,0,-1,0,1,0,0,0,0,0,0,0],[-1,1,0,-1,1,-1,0,0,1,0,0,0,0,0,0,1,0,0],[0,-1,0,0,1,1,0,-1,1,1,0,1,1,0,0,1,0,0],[0,0,-1,1,-1,1,0,0,0,1,1,0,0,0,0,1,1,1],[1,1,0,0,0,0,-1,-1,0,0,0,1,0,0,0,0,0,1],[-1,-1,1,0,1,-1,0,1,1,0,0,0,0,0,0,1,0,0],[0,0,1,0,0,1,0,0,-1,0,0,0,0,0,0,1,1,0],[0,-1,0,0,1,-1,-1,1,1,1,0,0,0,0,0,0,0,0],[1,-1,1,-1,1,1,-1,0,0,0,0,0,0,0,0,0,0,1],[1,0,-1,1,0,0,-1,0,0,0,0,0,0,1,1,0,1,1],[0,0,0,0,0,-1,0,1,0,0,0,0,0,1,0,0,0,1],[-1,-1,0,1,0,0,0,0,1,0,0,1,0,1,0,0,1,0],[0,0,1,1,-1,0,0,0,0,1,1,0,0,0,0,1,1,0],[-1,0,1,-1,1,1,0,0,0,0,0,0,0,0,0,1,0,0],[-1,-1,0,1,0,1,-1,1,1,0,0,1,0,0,0,0,0,0],[-1,1,-1,-1,1,1,0,0,1,0,0,0,0,0,0,1,0,0],[0,-1,0,1,0,1,-1,1,0,0,0,0,0,1,0,0,0,0],[-1,1,0,1,1,-1,1,-1,-1,0,0,1,0,0,0,0,0,0],[0,0,0,0,0,0,1,-1,1,0,0,0,0,1,0,0,0,0],[0,1,-1,1,0,0,0,-1,0,0,0,0,0,0,0,1,0,1],[1,0,1,0,-1,0,0,1,-1,0,1,0,0,0,0,0,0,0],[-1,0,1,-1,1,1,0,0,-1,0,0,0,0,0,0,1,0,0],[1,-1,-1,1,0,-1,-1,1,1,0,0,0,0,1,0,0,0,0],[1,0,1,-1,1,-1,0,0,-1,0,1,0,0,0,0,1,1,0],[1,0,-1,-1,0,1,0,-1,1,0,0,0,0,1,0,0,0,0],[1,1,0,-1,0,-1,0,0,0,0,0,1,0,1,0,0,0,0],[0,0,1,1,0,0,0,-1,-1,1,1,0,0,1,0,1,0,0],[1,-1,0,0,1,0,-1,1,-1,0,0,1,1,0,1,0,0,0],[0,1,0,0,-1,0,1,1,-1,1,0,1,1,0,1,0,0,0],[0,1,0,-1,-1,1,0,-1,1,0,0,1,0,0,0,0,0,0],[-1,0,-1,0,0,0,1,1,0,0,1,0,0,0,0,0,0,1],[1,1,0,0,-1,-1,1,-1,1,0,0,0,1,0,0,0,0,0],[0,0,0,0,1,0,-1,1,0,0,1,0,0,0,0,0,0,0],[0,-1,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,1],[1,-1,1,0,-1,0,0,0,1,0,0,0,0,0,1,0,1,0],[0,1,-1,-1,0,1,0,1,0,0,0,0,0,1,0,0,0,0],[0,0,0,0,0,-1,0,0,1,1,0,0,0,1,0,1,1,0],[-1,1,1,1,-1,-1,-1,0,1,0,0,0,0,0,0,0,1,0],[1,1,0,-1,-1,1,0,-1,1,0,0,1,0,0,0,0,0,0],[1,1,-1,0,1,-1,0,0,0,0,0,0,0,0,0,0,0,1],[-1,-1,1,0,1,-1,0,0,1,0,0,0,0,0,0,1,0,0],[0,1,0,1,0,-1,0,-1,1,1,0,0,0,0,0,0,0,0],[-1,1,1,0,0,0,-1,1,0,0,0,0,1,1,0,0,0,0],[-1,1,1,-1,0,-1,0,1,1,0,0,0,0,1,0,1,0,0],[1,-1,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0],[1,0,0,1,0,0,-1,-1,0,0,1,1,0,1,1,0,0,1],[1,0,0,1,0,-1,-1,1,-1,0,0,1,0,0,0,0,0,0],[0,1,0,-1,-1,1,1,1,-1,1,0,0,0,0,0,0,0,0],[1,1,0,-1,-1,1,-1,1,-1,0,0,1,0,0,0,0,0,0],[0,0,0,0,-1,1,0,0,1,0,0,1,0,0,0,0,0,0],[0,0,0,1,0,1,-1,-1,0,0,0,0,0,1,0,0,0,1],[-1,-1,0,0,1,1,1,0,0,0,0,1,0,0,0,0,0,0],[1,0,0,1,-1,1,-1,0,-1,0,1,1,0,0,0,0,1,0],[1,-1,1,0,0,0,0,-1,0,0,0,0,0,1,0,1,0,1],[1,0,-1,1,0,-1,-1,1,1,0,0,0,0,1,0,0,0,0],[0,1,0,0,-1,0,1,0,0,1,0,1,1,0,1,0,0,0],[1,-1,0,1,0,0,-1,1,0,0,0,0,0,1,1,0,0,1],[-1,0,0,1,1,0,0,0,-1,0,0,0,0,0,1,0,0,0],[0,0,0,-1,0,1,1,0,-1,1,1,1,0,1,0,0,1,0],[0,1,-1,0,1,1,0,0,-1,1,0,0,1,0,0,1,1,0],[1,1,0,0,-1,-1,0,-1,1,0,0,1,1,0,0,0,0,0],[-1,1,0,1,0,1,1,-1,-1,0,0,0,0,1,0,0,0,0],[-1,0,1,1,0,0,0,-1,0,0,0,0,0,1,0,0,0,1],[0,-1,1,0,-1,0,0,1,1,1,0,0,1,0,1,1,0,0],[-1,1,-1,-1,-1,1,1,1,0,0,0,0,0,0,0,0,0,1],[1,0,0,-1,0,1,1,-1,0,0,0,1,0,1,0,0,0,0],[1,1,0,1,-1,-1,0,1,-1,0,0,1,0,0,0,0,0,0],[0,0,1,1,0,-1,1,-1,-1,1,1,0,0,1,0,0,0,0],[1,0,0,-1,0,0,0,0,0,0,1,1,0,1,0,0,0,1],[-1,1,0,1,-1,0,0,1,0,0,0,1,0,0,0,1,0,1],[-1,0,-1,0,1,1,0,1,0,0,1,0,0,0,0,0,0,0],[1,0,1,0,-1,-1,1,-1,0,0,1,0,1,0,0,0,0,0],[0,0,1,-1,0,-1,1,0,1,0,0,0,0,1,0,0,0,0],[0,1,0,1,-1,0,1,-1,-1,1,0,0,0,0,0,0,0,0],[0,0,0,0,0,1,1,-1,0,0,0,0,0,1,0,0,0,0],[0,0,0,1,0,1,-1,1,-1,0,0,0,0,1,0,0,0,0],[0,0,0,0,0,-1,1,0,1,1,1,1,1,1,0,0,1,0],[-1,1,0,1,1,-1,1,-1,-1,0,0,1,0,0,0,0,0,0],[0,-1,1,0,-1,0,1,1,0,0,0,0,0,0,0,0,0,1],[1,0,-1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,1,-1,0,-1,-1,0,1,0,0,0,0,1,0,0,1,0,1],[-1,0,-1,0,1,1,-1,0,1,0,1,0,1,0,0,0,0,0],[0,0,0,1,1,0,0,-1,0,1,1,1,0,0,1,1,0,1],[0,-1,-1,0,1,1,0,0,1,1,0,0,0,0,0,0,0,0],[1,-1,1,0,1,1,-1,-1,0,0,0,0,0,0,0,0,0,1],[1,1,0,-1,0,0,0,1,-1,0,0,1,0,1,1,1,0,0],[0,-1,1,-1,0,0,-1,1,1,1,0,0,0,0,1,0,0,0],[-1,1,0,0,0,0,1,-1,1,0,0,1,0,1,1,0,0,0],[1,1,-1,1,-1,-1,0,1,0,0,0,0,0,0,0,1,0,1],[0,0,0,0,0,0,1,1,-1,0,0,1,0,0,1,0,0,0],[0,-1,0,-1,0,1,1,0,0,0,0,1,0,1,0,0,1,1],[1,1,0,-1,1,-1,-1,0,0,0,0,1,0,0,0,0,1,1],[0,0,0,1,1,0,1,-1,-1,1,1,1,0,0,1,0,0,0],[0,0,0,-1,0,0,1,1,-1,0,1,1,0,1,1,0,0,0],[1,0,-1,1,0,-1,0,-1,1,0,1,0,0,1,0,1,0,0],[1,-1,0,1,-1,-1,0,1,0,0,0,0,0,0,0,1,0,0],[0,0,-1,0,1,0,-1,0,1,1,0,0,0,0,0,0,0,0],[1,-1,0,0,1,0,0,0,0,0,0,1,1,0,1,1,1,1],[-1,0,0,1,0,1,0,-1,1,0,1,1,0,1,0,1,0,0],[0,0,-1,0,0,1,-1,1,1,1,1,0,1,1,0,0,0,0],[-1,0,0,0,1,0,-1,1,0,0,1,0,1,0,0,0,0,0],[1,0,0,-1,-1,0,1,1,-1,0,0,0,0,0,1,0,0,0],[-1,1,-1,1,1,-1,0,0,0,0,0,0,0,0,0,0,0,1],[-1,1,0,-1,-1,0,0,1,1,0,0,0,0,0,1,1,0,0],[1,-1,0,0,0,1,0,-1,0,0,0,0,0,1,0,1,0,1],[0,-1,1,1,1,-1,-1,-1,1,1,0,0,0,0,0,0,0,0],[1,1,-1,-1,0,1,0,1,-1,0,0,0,0,1,0,0,0,0],[-1,0,0,1,1,0,-1,0,0,0,0,0,0,0,1,0,0,0],[1,0,0,-1,-1,1,0,0,0,0,1,1,0,0,0,0,1,1],[-1,-1,1,1,-1,-1,1,1,0,0,0,0,0,0,0,0,0,1],[0,-1,0,0,1,0,0,0,1,1,0,1,1,0,1,1,1,0],[0,1,0,-1,0,1,-1,-1,1,1,0,1,0,0,0,0,0,0],[1,-1,1,0,0,0,0,0,-1,0,0,0,0,0,0,0,1,0],[0,1,0,-1,0,0,1,-1,0,1,0,1,0,1,1,0,0,0],[1,0,-1,1,0,-1,-1,0,1,0,0,0,0,1,0,0,0,0],[-1,0,-1,1,1,0,1,1,-1,0,1,0,0,0,1,0,0,0],[1,0,0,-1,1,1,-1,-1,0,0,0,0,0,0,0,0,0,1],[0,-1,0,-1,1,1,0,0,1,1,0,1,0,0,0,1,1,0],[0,0,1,0,-1,1,1,-1,-1,1,1,0,1,0,0,0,0,0],[-1,0,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0,0],[1,1,-1,1,0,1,-1,0,-1,0,0,0,0,1,0,0,1,0],[0,0,0,1,1,0,-1,0,-1,0,0,0,0,0,1,0,1,0],[-1,1,-1,-1,-1,1,0,1,1,0,0,0,0,0,0,1,0,0],[1,0,1,1,0,0,-1,0,-1,0,0,0,0,0,0,0,1,0],[0,-1,1,-1,0,1,1,0,0,1,0,0,0,1,0,0,1,1],[1,-1,0,-1,-1,1,1,0,1,0,0,0,0,0,0,0,1,0],[1,0,1,0,0,-1,-1,1,0,0,1,0,0,0,0,0,0,0],[0,0,1,1,0,-1,0,0,-1,1,0,0,0,0,0,1,0,0],[-1,0,0,1,0,1,1,0,-1,0,0,0,0,1,0,0,0,0],[0,1,-1,0,1,0,-1,0,0,0,0,0,0,0,0,0,1,0],[0,1,1,1,-1,0,0,-1,-1,1,0,0,0,0,0,1,0,0],[0,0,1,0,0,-1,0,1,-1,0,0,0,0,1,0,0,0,0],[0,1,0,0,0,1,1,-1,-1,1,0,1,1,1,0,0,0,0],[0,-1,-1,1,0,0,1,1,0,1,0,0,0,0,0,0,0,0],[1,0,-1,1,0,0,0,0,-1,0,0,0,0,0,1,1,0,0],[-1,1,0,1,0,1,-1,0,0,0,0,0,0,1,0,0,0,0],[1,1,-1,1,1,-1,-1,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,-1,1,0,-1,1,-1,0,1,0,0,0,0,0,0,0],[0,0,0,0,-1,1,0,0,1,0,0,1,0,0,0,0,0,0],[1,-1,0,1,0,1,0,-1,-1,0,0,0,0,1,0,1,0,0],[1,-1,-1,1,0,1,0,0,-1,0,0,0,0,1,0,1,1,0],[1,0,0,1,-1,0,0,0,0,0,0,0,0,0,0,1,0,0],[-1,0,-1,1,0,0,0,1,0,0,1,0,0,1,1,1,0,1],[-1,1,-1,1,0,-1,1,0,0,0,0,0,0,0,0,0,0,1],[1,-1,-1,1,1,0,0,1,-1,0,0,0,0,0,1,0,0,0],[0,0,0,0,-1,0,1,1,-1,1,0,1,1,0,1,0,0,0],[0,-1,1,1,0,-1,-1,0,1,1,0,0,0,1,0,0,1,0],[0,-1,0,0,0,0,1,-1,1,1,0,1,0,1,0,0,0,0],[-1,1,1,0,0,-1,1,1,-1,0,0,0,0,1,0,0,0,0],[-1,1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0],[0,1,-1,0,0,0,-1,1,0,0,0,0,0,1,0,0,0,0],[1,-1,-1,-1,0,1,0,0,1,0,0,0,0,1,0,0,0,0],[0,1,1,1,1,-1,-1,-1,0,0,0,0,0,0,0,0,0,1],[1,0,0,1,1,0,-1,0,-1,0,0,0,0,0,1,0,1,0],[-1,0,-1,0,0,1,0,0,1,0,1,0,1,1,0,1,1,0],[1,-1,-1,-1,0,1,1,1,0,0,0,0,0,0,0,0,0,1],[1,0,-1,0,-1,0,0,0,1,0,1,0,1,0,1,1,1,0],[0,1,0,0,0,-1,0,1,0,0,0,0,0,1,0,0,0,0],[0,-1,1,0,0,1,0,-1,0,0,0,0,0,1,0,0,0,1],[0,-1,1,1,-1,0,-1,1,0,1,0,0,0,0,1,0,0,1],[1,1,0,-1,0,0,0,-1,1,0,0,1,0,1,1,1,0,0],[0,1,0,0,0,0,0,-1,0,1,0,1,1,1,1,1,0,1],[0,-1,0,1,1,-1,0,0,0,0,0,1,0,0,0,0,0,0],[1,-1,-1,1,-1,1,0,0,1,0,0,0,0,0,0,1,1,0],[0,-1,-1,1,0,-1,0,1,1,1,0,0,0,0,0,1,0,0],[1,-1,0,0,0,-1,0,1,1,0,0,1,1,1,0,1,0,0],[0,1,-1,1,-1,1,0,-1,1,0,0,0,0,0,0,1,0,0],[0,1,1,-1,-1,0,1,1,-1,1,0,0,0,0,1,0,0,0],[1,-1,-1,0,0,1,0,1,-1,0,0,0,1,1,0,1,0,0],[1,0,0,0,-1,1,0,0,0,0,1,1,0,0,0,0,1,1],[1,0,0,-1,1,-1,0,0,0,0,1,1,0,0,0,1,1,1],[1,0,0,-1,0,1,1,0,-1,0,1,1,0,1,0,0,0,0],[0,0,1,0,-1,0,-1,1,1,0,0,0,0,0,1,0,0,0],[0,1,0,1,0,-1,-1,0,0,0,0,1,0,0,0,0,0,1],[0,0,-1,0,1,0,0,1,-1,0,1,0,0,0,1,0,0,0],[0,1,1,0,0,-1,-1,0,0,1,0,0,0,0,0,0,0,0],[0,1,-1,0,0,1,-1,1,0,0,0,0,0,1,0,0,0,0],[1,0,-1,0,1,1,1,-1,-1,0,0,0,1,0,0,0,0,0],[0,0,0,1,0,1,-1,0,0,0,0,0,0,1,0,0,0,0],[1,1,-1,1,0,-1,0,-1,0,0,0,0,0,0,0,1,0,1],[0,0,0,1,-1,1,-1,0,0,1,1,1,0,0,0,0,1,1],[-1,0,1,0,0,1,0,0,-1,0,0,0,1,1,0,1,1,0],[-1,-1,0,1,-1,1,1,0,1,0,0,1,0,0,0,0,1,0],[1,0,1,0,-1,1,1,-1,-1,0,1,0,0,0,0,0,0,0],[-1,-1,1,1,-1,0,1,0,0,0,0,0,0,0,1,0,1,1],[-1,-1,0,-1,1,1,1,-1,1,0,0,1,0,0,0,0,0,0],[1,0,-1,1,0,1,0,-1,-1,0,0,0,0,0,0,1,0,0],[0,0,-1,1,0,0,1,-1,0,1,0,0,0,0,0,0,0,0],[-1,1,-1,1,0,0,0,0,1,0,0,0,0,1,0,0,1,0],[0,0,-1,-1,1,1,0,1,0,0,1,0,0,0,0,0,0,0],[0,0,1,1,-1,1,-1,0,0,0,0,0,0,0,0,0,0,1],[-1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0],[0,1,0,0,0,1,-1,0,0,1,0,0,0,0,0,0,0,1],[0,1,1,0,-1,-1,1,-1,0,1,0,0,1,0,0,0,0,0],[0,1,0,1,0,0,0,-1,0,1,0,1,0,0,0,0,0,0],[-1,0,1,1,0,0,0,0,0,0,0,0,0,1,1,0,0,0],[-1,0,1,0,1,0,0,-1,0,0,0,0,0,0,0,1,0,0],[1,0,-1,-1,1,1,1,-1,-1,0,1,0,0,0,0,0,0,0],[-1,1,0,1,1,0,-1,0,0,0,0,1,0,0,1,0,1,1],[0,-1,-1,1,1,0,1,1,-1,1,0,0,0,0,1,0,0,0],[0,0,0,1,-1,1,-1,-1,1,0,1,1,0,0,0,0,0,0],[-1,0,0,0,1,1,-1,1,0,0,0,0,1,0,0,0,0,0],[0,0,0,1,0,-1,1,0,0,1,0,0,0,0,0,0,0,0],[0,0,0,0,0,-1,1,0,1,1,1,1,1,1,0,0,1,0],[1,-1,0,-1,1,1,1,-1,-1,0,0,1,0,0,0,0,0,0],[-1,1,0,1,-1,0,-1,1,1,0,0,1,0,0,0,0,0,0],[1,-1,-1,1,0,1,-1,1,-1,0,0,0,0,1,0,0,0,0],[1,0,1,0,-1,0,-1,0,0,0,1,0,0,0,0,0,0,0],[1,0,-1,-1,1,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,1,-1,-1,0,0,0,-1,1,0,0,0,0,1,0,0,0,0],[1,0,-1,0,-1,-1,0,1,1,0,0,0,1,0,0,1,0,0],[0,0,0,0,-1,0,1,1,0,0,0,0,0,0,0,0,0,1],[-1,1,1,0,0,-1,1,0,0,0,0,0,0,1,0,0,0,0],[-1,-1,1,1,0,-1,1,1,-1,0,0,0,0,1,0,0,0,0],[1,0,-1,0,1,-1,0,0,0,0,0,0,0,0,0,0,0,1],[1,-1,1,-1,-1,1,0,1,0,0,0,0,0,0,0,0,0,1],[1,1,-1,-1,-1,0,0,0,1,0,0,0,0,0,1,1,1,0],[0,1,1,-1,1,1,-1,0,-1,1,0,0,0,0,0,0,1,0],[0,1,-1,0,1,1,-1,0,0,1,0,0,1,0,0,0,1,1],[1,0,1,-1,-1,0,0,1,-1,0,0,0,0,0,1,0,0,0],[-1,1,-1,1,1,-1,0,0,1,0,0,0,0,0,0,0,1,0],[0,0,0,1,-1,1,0,0,0,1,1,1,0,0,0,1,1,1],[-1,1,1,0,1,-1,0,-1,0,0,0,0,0,0,0,1,0,0],[1,0,-1,-1,1,1,1,-1,0,0,0,0,0,0,0,0,0,1],[0,-1,1,0,0,1,-1,1,0,0,0,0,0,0,0,0,0,1],[0,0,1,-1,0,0,1,0,0,0,0,0,0,1,0,0,0,0],[0,0,1,-1,-1,0,0,1,0,1,0,0,0,0,1,1,0,1],[0,1,0,0,-1,1,0,1,-1,1,0,1,0,0,0,1,0,0],[-1,1,0,0,0,-1,0,0,1,0,0,0,1,0,0,0,0,0],[0,1,0,-1,1,0,1,0,-1,1,0,1,0,0,1,0,1,0],[1,0,1,-1,1,-1,0,0,0,0,1,0,0,0,0,1,1,1],[0,1,1,0,-1,0,0,0,0,1,0,0,0,0,0,0,0,0],[1,1,-1,0,1,0,-1,0,-1,0,0,0,0,0,1,0,1,0],[1,-1,1,0,-1,1,-1,1,-1,0,0,0,1,0,0,0,0,0],[1,1,-1,1,0,1,0,-1,-1,0,0,0,0,0,0,1,0,0],[1,-1,0,0,1,0,1,0,-1,0,0,1,1,0,1,0,1,0],[0,-1,-1,1,1,0,0,0,0,1,0,0,0,0,1,0,0,0],[1,0,-1,-1,1,1,0,0,0,0,0,0,0,0,0,0,0,1],[-1,0,1,1,1,-1,0,0,-1,0,0,0,0,0,0,1,0,0],[0,0,0,0,1,0,0,1,-1,0,1,0,0,0,0,0,0,0],[-1,0,0,0,1,-1,1,1,0,0,1,1,1,0,0,0,0,1],[0,1,-1,0,0,1,0,0,0,0,0,0,1,1,0,0,1,0],[0,1,-1,1,-1,0,0,1,-1,1,0,0,0,0,1,1,0,0],[0,0,1,0,0,1,-1,0,0,0,0,0,0,0,0,0,0,1],[0,0,-1,0,-1,0,1,1,0,0,0,0,0,0,0,0,0,1],[0,0,0,1,0,-1,0,1,0,1,0,0,0,0,0,1,0,0],[1,0,0,0,1,0,1,-1,-1,0,1,1,1,0,1,0,0,0],[0,-1,0,0,1,1,-1,0,0,0,0,0,1,0,0,0,0,0],[-1,1,-1,0,0,1,0,0,1,0,0,0,0,0,0,1,0,0],[0,1,0,-1,1,1,-1,-1,0,1,0,1,0,0,0,0,0,1],[-1,0,1,0,-1,0,1,0,0,0,1,0,1,0,1,0,1,1],[0,0,0,1,-1,1,0,-1,1,0,1,1,0,0,0,0,0,0],[-1,1,-1,-1,-1,1,1,1,0,0,0,0,0,0,0,0,0,1],[0,0,-1,-1,1,1,1,1,-1,0,1,0,0,0,0,0,0,0],[0,1,-1,1,0,1,0,-1,-1,0,0,0,0,1,0,1,0,0],[1,0,-1,-1,1,0,0,1,0,0,1,0,0,0,1,1,0,1],[0,0,0,1,1,0,0,0,-1,0,0,0,0,0,1,0,0,0],[1,1,-1,1,0,-1,-1,0,1,0,0,0,0,1,0,0,0,0],[1,0,0,0,1,-1,1,-1,0,0,1,1,1,0,0,0,0,1],[1,0,-1,1,1,-1,0,0,0,0,0,0,0,0,0,0,0,1],[0,1,0,-1,0,1,0,-1,1,0,0,1,0,0,0,0,0,0],[-1,1,-1,1,1,-1,-1,0,1,0,0,0,0,0,0,0,1,0],[0,-1,0,0,1,0,1,0,0,1,0,1,1,0,1,0,1,1],[1,-1,0,0,1,-1,1,0,0,0,0,1,1,0,0,0,1,1],[0,-1,0,1,0,-1,1,-1,1,1,0,0,0,1,0,0,0,0],[0,0,1,0,0,-1,0,-1,1,0,0,0,0,1,0,0,0,0],[-1,1,1,1,-1,0,0,-1,1,0,0,0,0,0,1,0,0,0],[0,1,1,0,0,0,-1,1,-1,1,0,0,1,1,1,0,0,0],[0,0,1,0,-1,-1,0,0,1,0,1,0,1,0,0,0,1,0],[0,0,1,1,-1,-1,0,1,-1,1,0,0,0,0,0,0,0,0],[1,-1,0,-1,-1,0,0,1,1,0,0,0,0,0,1,1,0,0],[-1,0,-1,1,1,-1,0,1,0,0,1,0,0,0,0,0,0,1],[0,-1,-1,0,1,0,1,0,1,1,0,0,0,0,0,0,0,0],[-1,0,1,1,0,0,1,-1,0,0,0,0,0,1,0,0,0,0],[1,0,0,0,0,1,-1,1,-1,0,1,0,0,1,0,0,0,0],[-1,0,-1,1,1,0,-1,1,1,0,1,0,0,0,0,0,0,0],[0,0,0,1,-1,1,-1,0,1,0,0,1,0,0,0,0,0,0],[-1,1,0,1,-1,1,-1,-1,1,0,0,1,0,0,0,0,0,0],[-1,0,0,-1,1,0,1,0,0,0,0,1,0,0,0,0,0,0],[1,0,0,0,-1,1,1,-1,-1,0,1,0,0,0,0,0,0,0],[1,1,-1,0,-1,-1,1,-1,1,0,0,0,1,0,0,0,0,0],[1,1,0,-1,0,1,0,-1,-1,0,0,0,0,0,0,1,0,0],[0,1,-1,-1,1,1,0,-1,1,1,0,0,0,0,0,0,0,0],[-1,1,1,1,1,0,-1,-1,0,0,0,0,0,0,0,0,0,1],[0,0,0,1,0,1,0,-1,-1,0,0,0,0,1,0,1,0,0],[0,-1,1,0,1,0,0,1,-1,0,0,0,0,0,0,1,0,0],[0,1,1,0,0,-1,0,0,0,1,0,0,1,1,0,1,1,1],[1,0,0,-1,1,-1,1,0,-1,0,0,1,0,0,0,0,0,0],[0,-1,-1,0,0,0,1,0,1,1,0,0,0,0,0,0,1,0],[0,-1,1,0,1,1,-1,0,-1,0,0,0,1,0,0,0,1,0],[-1,0,-1,-1,1,1,1,0,1,0,1,0,0,0,0,0,0,0],[0,0,0,0,1,0,-1,-1,1,1,0,0,0,0,0,0,0,0],[-1,0,-1,0,1,1,1,-1,0,0,1,0,0,0,0,0,0,0],[0,1,-1,1,-1,-1,1,-1,1,1,0,0,0,0,0,0,0,0],[0,1,-1,-1,1,1,1,0,-1,0,0,0,0,0,0,0,1,0],[1,1,-1,-1,0,-1,0,1,0,0,0,0,0,1,0,0,0,1],[1,1,-1,-1,-1,0,1,1,0,0,0,0,0,0,1,0,0,0],[0,0,1,-1,1,0,0,0,0,1,1,0,0,0,1,1,1,1],[1,-1,0,0,0,1,0,-1,1,0,0,0,0,1,0,0,0,0],[1,0,1,0,0,-1,0,0,0,0,1,0,1,1,0,1,1,1],[1,0,0,0,-1,0,0,0,1,0,1,0,1,0,1,0,1,0],[-1,1,0,0,0,1,0,1,-1,0,0,0,0,1,0,0,0,0],[0,0,1,1,-1,0,0,-1,0,1,1,0,0,0,0,1,0,1],[1,-1,1,-1,0,-1,0,1,1,0,0,0,0,1,0,0,0,0],[0,1,-1,0,1,-1,-1,0,1,1,0,0,1,0,0,0,1,0],[1,0,1,0,0,0,-1,-1,0,0,1,0,0,0,0,0,0,1],[-1,1,1,1,-1,-1,-1,0,1,0,0,0,0,0,0,0,1,0],[1,0,0,0,0,0,-1,1,0,0,1,0,0,1,0,0,0,0],[0,-1,0,1,1,0,-1,-1,1,1,0,1,0,0,1,0,0,0],[0,0,0,0,-1,0,1,0,1,0,0,0,0,0,0,0,1,0],[1,1,0,-1,1,1,-1,0,-1,0,0,0,0,0,0,0,1,0],[1,-1,0,-1,0,1,-1,1,1,0,0,1,0,1,0,0,0,0],[1,1,-1,-1,-1,0,1,0,1,0,0,0,0,0,1,0,0,0],[0,-1,1,-1,-1,1,1,1,-1,1,0,0,0,0,0,0,0,0],[0,0,0,1,-1,-1,1,0,0,1,0,0,0,0,0,0,0,0],[0,1,1,1,-1,0,-1,1,-1,1,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,-1,1,-1,0,1,0,0,0,0,0,0,0],[0,1,-1,1,-1,1,1,-1,0,1,0,0,0,0,0,0,0,0],[1,-1,0,0,0,0,1,0,0,0,0,1,1,1,1,0,1,1],[-1,0,0,1,0,-1,0,0,1,0,1,1,0,1,0,1,1,0],[-1,0,0,-1,0,1,0,0,1,0,0,1,0,0,0,1,0,0],[-1,1,1,1,-1,0,-1,0,0,0,0,0,0,0,0,0,0,1],[0,1,0,-1,0,-1,1,0,0,0,0,1,0,1,0,0,0,1],[0,-1,1,0,0,-1,1,1,-1,0,0,0,0,1,0,0,0,0],[0,0,1,-1,0,1,0,-1,0,0,0,0,0,0,0,0,0,1],[-1,1,-1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1],[-1,0,1,-1,1,-1,0,0,1,0,0,0,0,0,0,1,0,0],[1,0,0,0,0,1,0,-1,0,0,0,0,0,1,0,0,0,0],[0,0,-1,1,0,0,0,0,1,1,0,0,0,0,0,0,0,0],[1,-1,1,0,-1,-1,1,0,1,0,0,0,1,0,0,0,1,0],[1,1,0,0,0,-1,0,-1,1,0,0,1,1,1,0,1,0,0],[1,-1,1,0,1,0,-1,-1,0,0,0,0,0,0,0,0,0,1],[-1,-1,1,1,-1,-1,1,1,0,0,0,0,0,0,0,0,0,1],[-1,0,1,0,0,0,-1,0,1,0,0,0,1,0,0,0,0,0],[1,0,0,0,0,-1,0,1,0,0,0,0,0,1,0,0,0,0],[1,-1,0,0,0,1,1,-1,-1,0,0,0,0,1,0,0,0,0],[0,0,1,1,0,-1,0,0,-1,1,0,0,0,0,0,1,0,0],[1,0,0,-1,0,0,0,1,-1,0,0,0,0,0,1,0,0,0],[0,1,0,0,1,0,-1,0,0,0,0,0,0,0,0,0,1,0],[1,0,0,0,1,0,0,-1,0,0,1,1,1,0,1,1,0,1],[0,1,1,0,0,0,-1,-1,0,1,0,0,0,0,0,0,0,1],[0,0,-1,1,0,1,0,0,0,0,0,0,0,1,0,0,0,0],[0,-1,-1,0,-1,1,1,1,0,1,0,0,0,0,0,0,0,0],[0,1,0,0,0,-1,0,1,-1,0,0,1,0,1,0,0,0,0],[0,0,1,0,0,-1,0,1,0,0,0,0,0,1,0,0,0,0],[0,-1,1,-1,0,1,1,0,-1,0,0,0,0,1,0,0,0,0],[0,-1,1,-1,1,1,0,0,-1,0,0,0,0,0,0,1,0,0],[0,0,1,-1,0,1,0,0,-1,1,1,0,0,0,0,1,1,0],[-1,1,-1,1,0,0,-1,1,0,0,0,0,0,1,0,0,0,0],[-1,-1,1,1,1,0,0,0,0,0,0,0,0,0,1,1,1,1],[0,-1,0,0,0,1,0,0,1,0,0,1,0,0,0,0,0,0],[1,1,-1,-1,-1,1,1,0,0,0,0,0,0,0,0,0,1,1],[1,-1,-1,0,-1,1,1,1,0,0,0,0,1,0,0,0,0,1],[0,1,0,0,0,0,-1,1,0,0,0,0,0,1,0,0,0,0],[-1,-1,1,1,-1,-1,0,1,1,0,0,0,0,0,0,1,0,0],[0,1,1,-1,-1,0,1,0,0,1,0,0,0,0,1,0,0,0],[-1,0,0,-1,0,1,1,0,0,0,0,1,0,0,0,0,0,1],[0,-1,1,1,1,-1,-1,0,0,1,0,0,0,0,0,0,1,1],[0,0,-1,0,0,1,0,0,1,1,1,0,0,0,0,0,0,0],[1,0,0,0,1,1,0,-1,-1,0,0,0,0,0,0,1,0,0],[0,-1,0,0,1,0,1,-1,1,1,0,1,1,0,1,0,0,0],[0,-1,-1,1,0,1,1,-1,1,1,0,0,0,1,0,0,0,0],[1,1,-1,-1,-1,0,1,0,0,0,0,0,0,0,1,0,0,0],[1,0,1,-1,0,1,-1,1,-1,0,1,0,0,0,0,0,0,0],[1,-1,1,-1,0,-1,1,0,1,0,0,0,0,1,0,0,0,0],[0,1,0,-1,0,1,-1,0,1,1,0,1,0,0,0,0,0,0],[0,1,-1,-1,1,-1,1,-1,1,1,0,0,0,0,0,0,0,0],[0,-1,1,0,0,0,0,0,1,1,0,0,1,1,1,1,1,0],[0,0,0,0,-1,1,0,1,-1,1,0,1,0,0,0,1,0,0],[0,1,-1,1,0,-1,1,0,0,0,0,0,0,0,0,0,0,1],[-1,0,0,0,0,0,1,0,1,0,1,1,1,1,1,0,1,0],[0,-1,0,1,-1,-1,1,0,1,0,0,0,0,0,0,0,1,0],[-1,0,0,0,-1,1,0,1,1,0,1,1,1,0,0,1,0,0],[-1,-1,0,0,1,0,1,1,0,0,0,1,0,0,0,0,0,0],[-1,1,-1,1,-1,1,1,-1,0,0,0,0,0,0,0,0,0,1],[0,1,-1,0,0,1,1,-1,-1,1,0,0,1,1,0,0,0,0],[1,-1,1,1,0,1,-1,0,-1,0,0,0,0,0,0,0,1,0],[1,0,1,0,-1,0,0,0,0,0,1,0,0,0,0,0,0,0],[1,0,0,0,1,-1,-1,1,-1,0,0,1,0,0,0,0,0,0],[0,1,1,1,0,-1,0,-1,-1,1,0,0,0,0,0,1,0,0],[1,0,-1,-1,0,1,1,-1,0,0,1,0,0,1,0,0,0,1],[-1,0,0,1,0,1,0,-1,1,0,1,1,0,1,0,1,0,0],[-1,0,0,0,1,1,-1,0,1,0,0,0,1,0,0,0,0,0],[1,1,0,0,1,0,-1,0,-1,0,0,0,0,0,0,0,1,0],[-1,1,-1,0,0,0,1,0,1,0,0,0,0,0,0,0,1,0],[1,0,1,1,0,-1,-1,0,-1,0,0,0,0,0,0,0,1,0],[-1,1,1,1,0,-1,-1,0,1,0,0,0,0,1,0,0,1,0],[1,0,0,-1,0,0,0,0,1,0,0,0,0,1,0,0,0,0],[0,0,1,-1,1,-1,-1,1,1,1,0,0,0,0,0,0,0,0],[-1,1,0,-1,1,-1,1,0,1,0,0,1,0,0,0,0,1,0],[-1,1,1,1,0,-1,1,-1,0,0,0,0,0,1,0,0,0,0],[0,1,1,-1,-1,0,0,1,-1,1,0,0,0,0,1,0,0,0],[0,1,0,1,-1,0,0,-1,1,1,0,1,0,0,0,0,0,0],[0,-1,0,0,1,0,0,-1,1,1,0,1,1,0,1,1,0,0],[-1,0,0,0,1,-1,1,0,1,0,1,1,1,0,0,0,1,0],[0,0,0,-1,0,-1,1,1,0,0,0,0,0,1,0,0,0,1],[0,0,1,1,-1,0,-1,-1,1,0,1,0,0,0,0,0,0,0],[-1,0,0,1,0,1,0,0,0,0,0,0,0,1,0,0,0,0],[0,-1,0,0,0,-1,0,1,1,0,0,0,0,0,0,1,0,0],[0,0,1,-1,0,1,0,0,0,0,0,0,0,0,0,0,0,1],[0,0,0,0,1,1,0,-1,-1,0,0,0,0,0,0,1,0,0],[-1,1,1,1,-1,-1,0,0,1,0,0,0,0,0,0,1,1,0],[0,-1,1,0,0,1,0,0,-1,0,0,0,1,1,0,1,1,0],[0,0,-1,1,0,1,-1,1,0,0,0,0,0,1,0,0,0,0],[0,-1,-1,-1,1,1,0,1,1,1,0,0,0,0,0,0,0,0],[1,-1,-1,0,1,-1,1,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,1,-1,0,-1,0,0,1,0,1,0,0,1,0],[1,0,0,1,0,-1,-1,1,0,0,0,1,0,0,0,0,0,0],[0,1,-1,-1,0,1,0,0,1,0,0,0,0,0,0,1,0,0],[1,-1,1,0,-1,0,0,0,1,0,0,0,0,0,1,0,1,0],[0,1,0,-1,0,-1,1,0,0,0,0,1,0,1,0,0,0,1],[1,0,0,-1,1,0,0,-1,0,0,0,0,0,0,0,0,0,1],[0,1,1,0,0,0,0,-1,0,1,0,0,0,0,0,0,0,0],[0,0,0,1,-1,0,0,1,0,1,0,0,0,0,0,1,0,1],[-1,0,-1,0,1,1,-1,1,1,0,1,0,1,0,0,0,0,0],[1,0,1,-1,-1,1,-1,1,0,0,1,0,0,0,0,0,0,1],[0,1,-1,0,0,-1,1,0,1,1,0,0,1,1,0,0,1,0],[0,1,-1,0,0,1,0,0,0,0,0,0,1,1,0,0,1,0],[1,0,0,0,1,0,-1,0,0,0,0,0,0,0,0,0,0,1],[0,-1,1,1,-1,0,-1,1,1,0,0,0,0,0,1,0,0,0],[-1,-1,1,-1,0,0,0,1,1,0,0,0,0,0,0,1,0,0],[1,1,-1,-1,-1,0,1,0,1,0,0,0,0,0,1,0,0,0],[0,1,-1,0,1,0,-1,0,1,1,0,0,1,0,1,0,1,0],[0,0,1,0,-1,0,1,-1,1,0,1,0,0,0,1,0,0,0],[0,0,-1,1,1,0,-1,0,0,0,0,0,0,0,1,0,0,0],[-1,0,0,0,-1,1,1,0,1,0,1,1,1,0,0,0,1,0],[0,-1,0,0,1,0,1,0,0,1,0,1,1,0,1,0,1,1],[0,-1,-1,1,0,0,0,1,0,1,0,0,0,1,1,1,0,1],[-1,1,-1,1,0,1,0,0,0,0,0,0,0,1,0,0,0,0],[1,0,0,-1,0,0,0,0,1,0,0,0,0,1,0,0,0,0],[0,0,0,0,1,1,-1,-1,0,0,0,0,1,0,0,0,0,1],[0,-1,0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0],[0,1,-1,-1,0,-1,1,1,0,0,0,0,0,1,0,0,0,1],[0,-1,1,0,-1,1,0,1,-1,1,0,0,0,0,0,0,0,0],[0,1,1,0,-1,0,0,0,0,1,0,0,0,0,0,0,0,0],[1,1,0,1,-1,-1,0,1,-1,0,0,1,0,0,0,0,0,0],[-1,1,0,0,0,-1,0,0,1,0,0,0,1,0,0,0,0,0],[0,0,1,-1,1,-1,0,1,0,1,1,0,0,0,0,1,0,1],[0,1,0,-1,0,0,1,0,-1,0,0,0,0,1,1,0,0,0],[-1,1,0,1,1,-1,0,0,-1,0,0,1,0,0,0,0,1,0],[0,-1,0,1,1,-1,0,0,0,0,0,1,0,0,0,0,0,0],[-1,1,-1,-1,1,-1,1,0,1,0,0,0,0,0,0,0,1,0],[-1,-1,1,1,-1,-1,0,1,1,0,0,0,0,0,0,1,0,0],[0,1,1,0,-1,-1,1,0,-1,1,0,0,1,0,0,0,0,0],[1,1,0,0,-1,0,0,0,0,0,0,1,0,0,0,0,0,0],[0,0,1,0,1,-1,0,0,0,1,1,0,1,0,0,1,1,1],[-1,0,-1,1,0,1,1,0,0,0,1,0,0,1,0,0,0,0],[1,0,0,1,0,0,0,-1,0,0,0,0,0,0,0,1,0,0],[0,0,-1,0,0,1,-1,1,1,1,1,0,1,1,0,0,0,0],[-1,1,-1,1,1,-1,1,-1,0,0,0,0,0,0,0,0,0,1],[0,-1,0,0,0,1,1,0,-1,1,0,0,0,1,0,0,0,0],[1,0,0,-1,1,1,-1,0,0,0,0,0,0,0,0,0,0,1],[-1,-1,0,1,1,0,-1,1,1,0,0,1,0,0,0,0,0,0],[1,-1,1,1,-1,0,0,0,-1,0,0,0,0,0,0,0,1,0],[1,1,-1,1,0,-1,-1,-1,1,0,0,0,0,1,0,0,0,0],[-1,1,0,0,-1,1,-1,0,1,0,0,1,1,0,0,0,0,0],[1,-1,1,-1,0,0,1,-1,0,0,0,0,0,1,0,0,0,0],[-1,-1,1,0,-1,0,1,0,1,0,0,0,0,0,0,0,1,0],[0,-1,1,0,1,1,0,-1,0,1,0,0,1,0,0,1,0,1],[1,1,0,-1,0,0,-1,1,-1,0,0,1,0,1,1,0,0,0],[1,1,-1,1,1,0,-1,0,-1,0,0,0,0,0,1,0,1,0],[-1,1,0,0,0,-1,1,-1,1,0,0,1,1,1,0,0,0,0],[0,0,1,0,1,0,-1,0,0,1,0,0,0,0,0,0,0,1],[0,0,1,-1,1,0,0,0,-1,0,0,0,0,0,0,1,0,0],[0,0,-1,-1,1,0,1,1,0,1,1,0,0,0,1,0,0,1],[-1,-1,1,1,0,0,0,1,0,0,0,0,0,1,1,1,0,1],[0,0,-1,0,1,0,1,0,0,1,0,0,0,0,0,0,0,1],[1,0,-1,0,0,0,0,-1,1,0,0,0,0,1,0,0,0,0],[1,1,0,-1,1,1,-1,0,-1,0,0,0,0,0,0,0,1,0],[1,0,0,0,0,1,0,0,-1,0,0,0,1,1,0,1,0,0],[1,1,0,0,0,0,0,-1,-1,0,0,1,0,0,0,1,0,0],[-1,0,1,0,0,0,1,-1,0,0,0,0,0,1,0,0,0,0],[0,0,-1,-1,0,0,0,1,1,0,0,0,0,0,0,1,0,0],[-1,0,0,-1,1,0,0,0,1,0,1,1,0,0,0,1,0,0],[1,0,-1,1,1,0,-1,1,-1,0,0,0,0,0,1,0,0,0],[-1,1,1,1,-1,1,-1,0,0,0,0,0,0,0,0,0,0,1],[0,-1,-1,0,1,0,-1,1,1,1,0,0,0,0,0,0,0,0],[-1,1,-1,0,0,-1,1,0,1,0,0,0,0,0,0,0,1,0],[1,0,0,0,0,0,-1,1,-1,0,0,1,0,0,0,0,0,0],[1,0,-1,-1,0,1,1,1,-1,0,1,0,0,1,0,0,0,0],[-1,1,0,0,0,1,1,0,-1,0,0,0,0,1,0,0,0,0],[-1,1,-1,0,-1,1,1,-1,1,0,0,0,1,0,0,0,0,0],[-1,1,0,-1,1,1,0,-1,0,0,0,0,0,0,0,1,0,0],[-1,0,-1,0,1,0,1,0,1,0,1,0,0,0,0,0,0,0],[0,-1,0,0,0,0,1,0,1,1,0,1,1,1,1,0,1,0],[-1,1,1,1,-1,0,-1,1,0,0,0,0,0,0,0,0,0,1],[0,1,0,0,0,0,0,-1,1,1,0,1,0,0,0,0,0,0],[0,-1,0,0,-1,0,0,1,1,0,0,0,0,0,0,1,0,0],[0,-1,0,1,1,-1,0,1,0,0,0,1,0,0,0,0,0,0],[-1,0,-1,0,1,1,0,0,1,0,1,0,1,0,0,0,0,0],[0,-1,0,1,0,0,1,0,0,1,0,0,0,0,0,0,0,0],[0,0,0,0,1,1,-1,0,0,0,0,0,1,0,0,0,0,0],[0,-1,-1,1,-1,1,0,0,1,1,0,0,0,0,0,1,1,0],[-1,1,0,-1,-1,0,0,1,1,0,0,0,0,0,1,1,0,0],[-1,0,-1,0,1,0,1,1,-1,0,1,0,0,0,1,0,0,0],[0,0,0,0,-1,-1,1,1,0,0,0,0,1,0,0,0,0,1],[0,0,-1,0,0,0,1,1,0,0,0,0,0,0,0,0,0,1],[-1,1,1,0,-1,0,-1,1,1,0,0,0,1,0,0,0,0,0],[1,1,0,1,-1,1,-1,0,-1,0,0,1,0,0,0,0,1,0],[1,-1,0,0,0,1,1,-1,0,0,0,0,0,1,0,0,0,0],[0,0,-1,0,1,-1,0,0,1,1,0,0,0,0,0,0,0,0],[0,1,0,0,-1,1,-1,0,1,0,0,1,0,0,0,0,0,0],[0,-1,1,1,0,1,0,-1,0,0,0,0,0,1,0,0,0,0],[0,0,1,1,-1,-1,1,-1,1,0,1,0,0,0,0,0,0,0],[1,0,-1,1,0,1,-1,1,-1,0,0,0,0,1,0,0,0,0],[0,0,1,-1,0,0,0,-1,1,1,1,0,0,1,1,1,0,0],[-1,1,0,1,-1,0,-1,1,1,0,0,1,0,0,0,0,0,0],[1,-1,1,1,-1,1,0,0,-1,0,0,0,0,0,0,0,1,0],[0,-1,0,1,0,0,0,1,-1,1,0,1,0,0,0,0,0,0],[0,0,1,1,0,1,0,-1,-1,0,0,0,0,1,0,1,0,0],[1,1,0,1,0,0,-1,-1,0,0,0,1,0,0,0,0,0,1],[0,0,-1,1,-1,0,0,1,0,1,1,0,0,0,1,1,0,1],[-1,0,0,1,-1,0,0,1,0,0,1,1,0,0,0,1,0,1],[1,-1,0,-1,0,0,1,1,0,0,0,0,0,0,0,0,0,1],[0,1,-1,1,0,0,0,1,-1,0,0,0,0,1,1,0,0,0],[0,-1,1,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1],[1,0,1,1,0,-1,0,-1,0,0,1,0,0,1,0,1,0,1],[1,0,-1,1,0,-1,0,0,0,0,0,0,0,0,0,1,0,1],[0,1,0,0,1,0,0,0,-1,0,0,0,0,0,0,0,1,0],[0,1,0,0,-1,0,0,-1,1,1,0,1,1,0,1,0,0,0],[0,0,0,1,0,1,-1,0,-1,0,0,0,0,1,0,0,1,0],[0,1,1,-1,-1,0,0,1,0,1,0,0,0,0,1,0,0,0],[0,-1,1,-1,0,0,-1,1,1,1,0,0,0,0,1,0,0,0],[1,0,1,0,-1,0,0,-1,0,0,1,0,0,0,0,0,0,0],[0,-1,-1,0,0,1,0,1,1,1,0,0,0,0,0,1,0,0],[1,-1,1,0,-1,0,0,1,0,0,0,0,1,0,1,1,0,1],[0,0,-1,1,1,-1,-1,1,0,0,1,0,0,0,0,0,0,1],[-1,0,-1,0,0,1,0,0,1,0,1,0,1,1,0,1,1,0],[0,0,0,-1,1,0,1,-1,0,0,0,1,0,0,0,0,0,0],[0,1,0,0,0,-1,1,0,0,0,0,0,0,1,0,0,0,0],[1,0,1,0,0,0,1,-1,-1,0,1,0,1,1,1,0,0,0],[-1,0,-1,1,0,-1,1,0,1,0,1,0,0,0,0,0,0,0],[-1,1,1,1,0,0,-1,0,0,0,0,0,0,0,0,0,0,1],[0,-1,1,0,1,0,-1,1,0,1,0,0,1,0,1,0,0,1],[-1,1,0,0,0,1,-1,1,0,0,0,0,1,1,0,0,0,0],[-1,-1,0,1,0,0,1,0,0,0,0,1,0,1,1,0,1,1],[1,0,0,-1,1,1,-1,1,-1,0,1,0,0,0,0,0,0,0],[1,1,-1,0,1,0,-1,0,0,0,0,0,1,0,1,0,1,1],[-1,0,1,0,-1,0,1,-1,1,0,1,0,0,0,1,0,0,0],[1,0,-1,-1,1,1,-1,1,-1,0,1,0,0,0,0,0,0,0],[0,1,1,1,-1,-1,-1,1,0,1,0,0,0,0,0,0,0,0],[1,1,-1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1],[-1,0,-1,1,0,1,1,0,0,0,1,0,0,1,0,0,0,0],[1,1,-1,0,0,0,0,0,-1,0,0,0,1,1,1,1,1,0],[0,1,-1,0,0,-1,0,1,1,1,0,0,1,1,0,1,0,0],[0,-1,1,1,-1,0,1,0,-1,1,0,0,0,0,0,0,1,0],[-1,-1,0,0,1,1,0,0,1,0,0,1,0,0,0,0,0,0],[-1,0,-1,0,1,0,1,1,0,0,1,0,0,0,0,0,0,0],[1,0,1,-1,-1,1,-1,0,0,0,1,0,0,0,0,0,1,1],[-1,0,1,0,-1,1,1,0,0,0,0,0,0,0,0,0,0,1],[-1,0,1,0,1,-1,-1,1,1,0,0,0,1,0,0,0,0,0],[-1,1,1,0,0,0,-1,-1,1,0,0,0,1,0,0,0,0,0],[0,1,0,0,1,0,0,-1,0,1,0,1,0,0,0,1,0,1],[1,-1,0,1,0,0,0,1,-1,0,0,0,0,0,0,1,0,0],[-1,-1,0,1,1,-1,-1,1,1,0,0,1,0,0,0,0,0,0],[-1,0,0,0,1,0,1,-1,1,0,0,1,0,0,0,0,0,0],[0,-1,-1,0,-1,1,0,1,1,1,0,0,0,0,0,1,0,0],[-1,1,1,0,-1,0,1,-1,0,0,0,0,1,0,1,0,0,1],[1,-1,0,-1,0,0,0,1,0,0,0,0,0,1,1,1,0,1],[1,1,0,-1,-1,0,0,1,0,0,0,1,0,0,1,0,0,0],[1,0,1,0,0,1,0,-1,-1,0,1,0,0,0,0,1,0,0],[-1,-1,1,-1,0,0,1,0,1,0,0,0,0,1,1,0,1,0],[0,0,0,0,1,1,0,-1,0,1,1,1,1,0,0,1,0,1],[1,0,-1,-1,0,1,0,-1,1,0,0,0,0,1,0,0,0,0],[0,1,0,-1,-1,1,-1,0,1,1,0,1,0,0,0,0,0,0],[1,0,0,1,0,-1,-1,-1,1,0,0,0,0,1,0,0,0,0],[1,-1,-1,1,0,0,0,1,-1,0,0,0,0,0,1,1,0,0],[0,1,0,1,0,-1,1,-1,0,1,0,0,0,0,0,0,0,0],[-1,-1,1,1,0,-1,1,1,-1,0,0,0,0,1,0,0,0,0],[0,0,-1,0,1,0,1,0,-1,1,1,0,0,0,1,0,0,0],[-1,0,0,-1,1,-1,0,1,1,0,0,0,0,0,0,1,0,0],[-1,0,0,1,1,0,0,-1,0,0,0,0,0,0,1,0,0,0],[0,-1,1,1,1,-1,0,-1,0,0,0,0,0,0,0,1,0,0],[0,-1,0,1,0,1,0,0,0,0,0,0,0,1,0,0,0,0],[-1,1,1,1,0,0,-1,1,-1,0,0,0,0,1,0,0,0,0],[0,1,0,0,1,-1,1,0,-1,0,0,1,0,0,0,0,0,0],[0,0,0,1,0,0,-1,-1,1,0,0,0,0,1,0,0,0,0],[1,0,1,-1,0,0,0,0,0,0,1,0,0,1,1,1,1,1],[1,-1,0,1,0,0,0,0,0,0,0,1,0,1,1,1,1,1],[-1,-1,1,0,1,1,0,0,-1,0,0,0,1,0,0,1,1,0],[-1,-1,0,1,1,0,1,-1,0,0,0,1,0,0,0,0,0,0],[1,1,-1,-1,0,1,0,0,0,0,0,0,0,1,0,0,1,1],[0,0,-1,-1,0,1,1,1,-1,1,0,0,0,0,0,0,0,0],[0,0,0,1,-1,-1,1,1,-1,1,0,1,0,0,0,0,0,0],[0,0,0,-1,0,1,0,1,-1,1,0,0,0,0,0,0,0,0],[1,-1,0,-1,0,1,0,0,1,0,0,1,0,1,0,1,1,0],[1,1,0,0,0,-1,0,0,0,0,0,1,0,0,0,0,0,0],[1,1,-1,-1,-1,1,0,0,0,0,0,0,0,0,0,1,0,0],[-1,0,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0,0],[0,0,0,-1,1,1,0,-1,0,0,0,0,0,0,0,1,0,0],[1,-1,0,0,1,-1,1,-1,0,0,0,1,1,0,0,0,0,1],[0,-1,1,1,0,-1,1,0,0,1,0,0,0,1,0,0,1,1],[0,1,0,1,-1,1,0,-1,-1,1,0,1,0,0,0,1,0,0],[0,-1,1,-1,1,1,0,1,-1,0,0,0,0,0,0,1,0,0],[0,0,0,0,0,-1,1,-1,1,0,0,0,0,1,0,0,0,0],[1,-1,1,1,1,-1,0,-1,0,0,0,0,0,0,0,1,0,1],[1,0,-1,0,1,0,1,-1,-1,0,0,0,0,0,1,0,0,0],[1,-1,0,-1,1,1,1,-1,-1,0,0,1,0,0,0,0,0,0],[1,0,-1,1,-1,0,0,1,-1,0,0,0,0,0,1,1,0,0],[0,0,0,1,-1,1,0,-1,1,0,1,1,0,0,0,0,0,0],[1,-1,0,0,-1,1,1,1,-1,0,0,0,1,0,0,0,0,0],[1,0,0,0,0,0,-1,0,1,0,1,1,1,1,1,0,1,0],[1,1,0,1,0,0,0,-1,-1,0,0,0,0,0,0,1,0,0],[0,0,-1,-1,1,0,1,1,-1,0,1,0,0,0,1,0,0,0],[0,1,-1,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0],[1,0,0,-1,-1,1,1,-1,0,0,1,0,0,0,0,0,0,0],[0,0,0,-1,1,1,1,-1,-1,0,0,1,0,0,0,0,0,0],[1,0,0,0,-1,-1,0,0,1,0,1,1,1,0,0,1,1,0],[0,-1,0,-1,0,1,1,-1,1,0,0,1,0,1,0,0,0,0],[0,1,0,0,-1,0,0,1,0,1,0,1,1,0,1,1,0,1],[1,1,0,0,0,1,0,-1,-1,0,0,0,0,0,0,1,0,0],[1,-1,0,1,-1,0,0,0,1,0,0,0,0,0,0,1,1,0],[0,1,0,-1,0,-1,0,0,1,1,0,0,0,1,0,1,0,0],[1,0,1,-1,-1,1,1,0,-1,0,1,0,0,0,0,0,0,0],[1,0,-1,0,0,-1,1,0,0,0,0,0,1,0,0,0,0,1],[1,0,1,0,-1,-1,1,-1,0,0,1,0,1,0,0,0,0,0],[0,0,0,-1,1,0,0,1,0,1,1,1,0,0,1,1,0,1],[0,1,0,1,-1,-1,0,1,0,0,0,1,0,0,0,0,0,1],[0,0,-1,0,1,-1,1,1,0,0,0,0,0,0,0,0,0,1],[-1,0,1,0,1,0,-1,1,-1,0,0,0,1,0,0,0,0,0],[0,-1,0,1,1,0,0,1,-1,0,0,0,0,0,1,0,0,0],[0,1,-1,0,-1,0,1,1,-1,1,0,0,1,0,1,0,0,0],[0,-1,0,0,-1,1,-1,1,1,0,0,1,0,0,0,0,0,0],[1,0,0,-1,1,-1,0,0,0,0,1,1,0,0,0,1,1,1],[1,1,-1,0,0,1,-1,-1,0,0,0,0,1,1,0,0,0,1],[0,1,0,0,0,-1,1,0,0,0,0,0,0,1,0,0,0,0],[0,-1,0,0,-1,0,1,0,1,0,0,0,0,0,0,0,1,0],[0,0,1,-1,1,0,-1,-1,1,1,0,0,0,0,0,0,0,0],[-1,0,-1,1,0,0,1,1,0,0,1,0,0,0,0,0,0,1],[1,-1,-1,-1,0,1,0,1,0,0,0,0,0,1,0,1,0,1],[-1,1,-1,1,0,1,-1,-1,1,0,0,0,0,1,0,0,0,0],[1,0,-1,1,0,0,0,-1,0,0,0,0,0,0,0,1,0,0],[-1,1,-1,1,0,1,1,0,-1,0,0,0,0,1,0,0,0,0],[0,1,1,1,-1,0,-1,0,-1,1,0,0,0,0,0,0,1,0],[-1,1,1,1,-1,0,0,-1,0,0,0,0,0,0,0,0,0,1],[1,1,0,-1,1,1,-1,-1,0,0,0,0,0,0,0,0,0,1],[0,-1,1,0,1,0,-1,0,0,1,0,0,1,0,1,0,0,1],[0,0,0,1,1,0,-1,0,0,0,0,0,0,0,1,0,0,0],[1,0,0,0,0,1,-1,-1,1,0,1,1,1,1,0,0,0,0],[1,-1,0,1,0,0,-1,1,0,0,0,0,0,1,1,0,0,1],[0,-1,1,0,1,0,-1,1,-1,1,0,0,1,0,1,0,0,0],[1,1,-1,0,0,0,0,1,-1,0,0,0,0,1,1,0,0,0],[-1,0,0,1,1,-1,-1,1,0,0,1,0,0,0,0,0,0,0],[-1,1,0,1,-1,0,0,0,0,0,0,1,0,0,0,1,0,1],[1,0,0,-1,-1,1,1,1,-1,0,1,1,0,0,0,0,0,0],[1,0,0,0,0,0,1,-1,0,0,1,1,1,1,1,0,0,1],[0,0,0,-1,1,0,-1,1,1,1,0,0,0,0,0,0,0,0],[-1,1,1,0,0,-1,0,0,1,0,0,0,1,0,0,0,0,0],[0,0,0,0,1,1,0,-1,0,1,1,1,1,0,0,1,0,1],[-1,-1,1,1,1,-1,-1,1,0,0,0,0,0,0,0,0,0,1],[-1,0,-1,0,0,0,0,1,1,0,1,0,0,0,0,1,0,0],[1,0,1,-1,0,-1,0,1,0,0,0,0,0,1,0,0,0,0],[0,1,0,0,0,-1,0,0,1,0,0,0,0,1,0,0,0,0],[-1,1,-1,0,1,-1,1,0,0,0,0,0,0,0,0,0,0,1],[-1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,1,0,0],[1,-1,-1,0,1,1,0,1,-1,0,0,0,1,0,0,0,0,0],[-1,1,0,1,0,-1,1,1,-1,0,0,1,0,1,0,0,0,0],[0,0,0,0,1,0,1,-1,-1,0,0,1,0,0,0,0,0,0],[1,1,0,0,0,0,-1,0,-1,0,0,1,0,0,0,0,1,0],[1,0,-1,-1,0,0,-1,1,1,0,0,0,0,1,0,0,0,0],[-1,-1,1,0,0,1,0,1,0,0,0,0,1,1,0,1,0,1],[-1,0,1,1,1,0,0,-1,0,0,1,0,0,0,1,1,0,1],[0,-1,1,0,-1,0,0,0,1,0,0,0,0,0,1,0,1,0],[1,1,-1,0,1,0,-1,0,0,0,0,0,1,0,1,0,1,1],[0,0,1,1,1,-1,0,-1,0,0,0,0,0,0,0,1,0,0],[1,0,0,0,0,-1,1,-1,0,0,1,1,1,1,0,0,0,1],[0,1,-1,1,1,-1,0,-1,1,1,0,0,0,0,0,0,0,0],[-1,0,0,0,1,0,-1,1,0,0,1,0,1,0,0,0,0,0],[1,-1,0,0,0,0,1,0,0,0,0,1,1,1,1,0,1,1],[0,1,1,-1,-1,1,-1,0,0,1,0,0,0,0,0,0,0,0],[0,1,-1,-1,1,1,0,0,0,0,0,0,0,0,0,0,1,0],[-1,0,0,0,0,1,0,0,1,0,0,1,0,0,0,0,0,0],[-1,0,1,0,0,0,0,1,-1,0,0,0,1,1,0,1,0,0],[1,-1,-1,-1,-1,1,1,0,1,0,0,0,0,0,0,0,1,0],[1,-1,1,0,0,1,0,-1,-1,0,0,0,1,1,0,1,0,0],[0,-1,0,0,1,0,-1,0,1,1,0,0,0,0,0,0,0,0],[1,1,0,0,-1,1,0,-1,-1,0,0,0,0,0,0,1,0,0],[-1,0,1,0,-1,-1,1,1,0,0,0,0,1,0,0,0,0,1],[0,1,-1,0,0,0,-1,1,1,0,0,0,0,1,0,0,0,0],[-1,1,0,-1,0,-1,1,0,1,0,0,0,0,1,0,0,0,0],[1,-1,0,0,-1,1,1,0,-1,0,0,0,0,0,0,0,1,0],[0,0,0,1,0,0,1,0,-1,1,1,1,0,1,1,0,1,0],[-1,0,0,0,0,1,1,-1,1,0,0,1,0,0,0,0,0,0],[1,0,0,-1,1,0,0,0,0,0,1,1,0,0,1,1,1,1],[1,0,1,1,-1,1,-1,0,-1,0,0,0,0,0,0,0,1,0],[0,1,0,0,-1,-1,-1,1,1,1,0,1,1,0,0,0,0,0],[0,1,1,0,0,-1,1,0,-1,1,0,0,1,1,0,0,1,0],[0,1,0,-1,0,1,0,1,-1,0,0,0,0,1,0,0,0,0],[1,0,0,1,-1,0,-1,1,0,0,0,1,0,0,0,0,0,0],[1,0,1,0,0,-1,0,0,0,0,1,0,1,1,0,1,1,1],[1,0,-1,-1,-1,1,1,1,0,0,0,0,0,0,0,0,0,1],[0,0,-1,1,1,0,0,0,0,0,0,0,0,0,1,0,0,0],[1,-1,1,1,0,-1,-1,1,0,0,0,0,0,1,0,0,0,1],[-1,-1,1,0,0,0,0,1,1,0,0,0,1,1,1,1,0,0],[0,1,-1,0,-1,-1,1,1,0,0,0,0,1,0,0,0,0,1],[0,0,0,0,0,1,-1,0,1,1,1,1,1,1,0,0,1,0],[-1,0,1,0,0,0,1,0,0,0,1,0,1,1,1,0,1,1],[1,0,0,-1,-1,1,0,-1,1,0,1,1,0,0,0,0,0,0],[-1,1,-1,0,1,0,1,-1,1,0,0,0,1,0,1,0,0,0],[1,0,1,0,1,-1,0,-1,-1,0,0,0,0,0,0,1,0,0],[0,-1,-1,0,1,0,1,1,0,1,0,0,0,0,0,0,0,1],[-1,1,0,1,-1,1,0,-1,0,0,0,1,0,0,0,1,0,1],[1,-1,0,0,0,1,0,-1,0,0,0,0,0,1,0,1,0,1],[0,0,1,0,0,-1,1,1,-1,0,0,0,0,1,0,0,0,0],[1,0,-1,0,1,0,1,0,-1,0,0,0,0,0,1,0,0,0],[-1,0,1,0,0,-1,1,1,0,0,1,0,1,1,0,0,0,1],[1,1,0,1,-1,-1,-1,0,1,0,0,1,0,0,0,0,0,0],[-1,-1,0,1,0,1,0,1,0,0,0,1,0,1,0,0,0,0],[1,1,0,1,-1,0,-1,0,0,0,0,1,0,0,0,0,0,0],[1,-1,0,-1,0,0,0,0,1,0,0,0,0,1,0,0,0,0],[0,0,-1,1,0,0,-1,1,0,1,1,0,0,1,1,0,0,1],[1,-1,-1,1,0,1,0,0,-1,0,0,0,0,1,0,1,1,0],[0,1,-1,0,1,1,-1,-1,0,0,0,0,1,0,0,0,0,1],[1,-1,1,1,0,-1,0,1,-1,0,0,0,0,0,0,1,0,0],[-1,0,1,1,-1,0,1,-1,1,0,1,0,0,0,0,0,0,0],[1,1,0,-1,0,0,-1,0,0,0,0,1,0,1,1,0,1,1],[0,0,1,1,-1,1,1,-1,-1,1,1,0,0,0,0,0,0,0],[-1,0,0,1,0,1,-1,1,-1,0,0,0,0,1,0,0,0,0],[-1,0,1,1,0,-1,0,0,0,0,1,0,0,1,0,1,1,1],[1,0,-1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1],[0,0,1,1,-1,-1,0,1,0,1,0,0,0,0,0,1,0,0],[1,1,-1,0,-1,0,1,1,-1,0,0,0,0,0,1,0,0,0],[1,-1,1,-1,1,1,-1,0,-1,0,0,0,0,0,0,0,1,0],[-1,-1,1,1,1,-1,-1,1,0,0,0,0,0,0,0,0,0,1],[-1,0,1,1,0,-1,0,0,0,0,1,0,0,1,0,1,1,1],[-1,1,1,0,1,0,0,0,-1,0,0,0,1,0,1,1,1,0],[0,-1,-1,0,1,0,0,1,1,1,0,0,0,0,0,0,0,0],[-1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,1,1,0],[0,1,0,0,1,0,0,-1,-1,0,0,1,0,0,1,1,0,0],[1,-1,0,0,1,0,1,-1,0,0,0,1,1,0,1,0,0,1],[-1,1,0,0,1,0,1,-1,-1,0,0,1,0,0,0,0,0,0],[-1,0,1,0,0,0,1,0,-1,0,0,0,0,1,0,0,0,0],[0,0,0,1,-1,0,0,0,1,1,1,0,0,0,0,1,1,0],[0,1,1,-1,0,1,1,-1,-1,1,0,0,0,1,0,0,0,0],[-1,1,0,0,0,0,1,0,0,0,0,0,0,1,0,0,1,0],[-1,1,-1,1,1,0,0,-1,1,0,0,0,0,0,1,0,0,0],[-1,1,0,0,1,1,0,-1,-1,0,0,0,0,0,0,1,0,0],[0,0,1,1,-1,-1,1,0,0,1,0,0,0,0,0,0,0,0],[1,0,0,0,-1,-1,0,1,1,0,0,0,1,0,0,1,0,0],[-1,-1,1,1,0,1,0,1,-1,0,0,0,0,1,0,0,0,0],[-1,1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0],[0,-1,1,0,0,0,0,1,0,0,0,0,0,0,0,1,0,1],[0,0,-1,-1,1,1,0,1,0,0,1,0,0,0,0,0,0,0],[-1,-1,0,0,1,1,-1,0,1,0,0,1,1,0,0,0,0,0],[0,0,0,0,0,1,-1,0,1,1,1,1,1,1,0,0,1,0],[0,-1,1,0,0,-1,-1,1,1,0,0,0,1,0,0,0,0,0],[0,-1,1,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0],[0,1,-1,1,-1,0,0,1,-1,1,0,0,0,0,1,1,0,0],[1,0,-1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1],[-1,1,-1,1,1,0,0,-1,0,0,0,0,0,0,1,0,0,0],[0,-1,0,0,0,-1,1,0,1,1,0,1,1,1,0,0,1,0],[0,0,1,-1,-1,0,1,1,0,0,0,0,0,0,1,0,0,1],[1,-1,-1,0,1,1,-1,1,0,0,0,0,1,0,0,0,0,1],[0,0,1,0,1,-1,-1,-1,1,1,0,0,0,0,0,0,0,0],[-1,0,0,1,0,-1,1,1,0,0,0,0,0,0,0,0,0,1],[0,0,0,1,0,0,0,1,-1,0,0,1,0,0,0,0,0,0],[-1,-1,1,0,0,1,1,0,-1,0,0,0,0,1,0,0,0,0],[1,-1,0,0,1,0,0,0,-1,0,0,1,1,0,1,1,0,0],[0,1,-1,1,0,0,0,0,-1,1,0,0,0,1,1,1,1,0],[0,0,-1,1,0,1,0,-1,1,0,0,0,0,1,0,0,0,0],[-1,-1,0,1,0,1,1,0,-1,0,0,1,0,1,0,0,0,0],[-1,-1,1,1,1,0,0,1,-1,0,0,0,0,0,1,1,0,0],[1,-1,0,0,0,1,-1,0,1,0,0,1,1,1,0,0,1,0],[-1,1,0,1,0,1,-1,1,-1,0,0,0,0,1,0,0,0,0],[1,0,-1,1,-1,-1,0,1,1,0,0,0,0,0,0,1,0,0],[1,0,0,1,0,0,-1,0,0,0,0,0,0,0,0,0,1,1],[1,-1,1,-1,0,0,-1,1,0,0,0,0,0,1,1,0,0,1],[0,1,0,0,0,1,0,0,-1,0,0,0,0,0,0,1,0,0],[0,-1,1,0,1,0,0,0,-1,0,0,0,0,0,0,1,0,0],[-1,-1,1,0,0,1,1,1,-1,0,0,0,0,1,0,0,0,0],[1,0,1,-1,0,-1,0,0,0,0,0,0,0,1,0,0,0,0],[-1,0,0,0,1,0,0,0,1,0,0,1,0,0,0,1,0,0],[-1,0,0,1,-1,1,0,1,0,0,1,1,0,0,0,1,0,1],[-1,1,0,0,1,0,0,-1,1,0,0,1,1,0,1,1,0,0],[-1,-1,0,0,1,1,-1,1,1,0,0,1,1,0,0,0,0,0],[1,1,-1,-1,0,1,0,0,0,0,0,0,0,1,0,0,1,1],[0,0,1,0,0,0,-1,1,0,1,1,0,0,1,0,0,0,0],[-1,1,-1,-1,-1,1,1,0,1,0,0,0,0,0,0,0,1,0],[0,0,-1,0,-1,1,1,-1,1,0,1,0,0,0,0,0,0,0],[0,0,1,-1,-1,0,0,0,1,0,0,0,0,0,1,0,0,0],[1,0,1,0,1,-1,-1,-1,0,0,0,0,0,0,0,0,0,1],[-1,-1,1,1,1,0,-1,-1,1,0,0,0,0,0,1,0,0,0],[0,-1,0,-1,1,1,0,-1,1,1,0,1,0,0,0,1,0,0],[0,1,0,1,0,-1,0,0,0,1,0,0,0,0,0,1,0,0],[1,1,-1,-1,0,1,1,-1,-1,0,0,0,0,1,0,0,0,0],[0,0,-1,1,1,-1,1,-1,0,1,0,0,0,0,0,0,0,1],[-1,1,1,1,-1,-1,1,-1,0,0,0,0,0,0,0,0,0,1],[1,1,-1,1,0,0,-1,0,-1,0,0,0,0,1,1,0,1,0],[0,0,-1,0,1,0,0,0,1,1,0,0,0,0,0,0,0,0],[1,-1,0,-1,0,1,1,-1,1,0,0,0,0,1,0,0,0,0],[-1,0,1,1,1,0,-1,-1,1,0,0,0,0,0,1,0,0,0],[-1,0,-1,1,1,0,0,0,1,0,1,0,0,0,0,0,0,0],[0,-1,1,-1,0,1,-1,1,0,1,0,0,0,0,0,0,0,0],[0,-1,0,-1,0,1,1,1,0,0,0,0,0,0,0,0,0,1],[0,0,-1,-1,1,-1,1,0,1,1,1,0,0,0,0,0,1,0],[0,0,-1,-1,0,0,1,0,1,0,0,0,0,0,0,0,1,0],[1,1,0,0,-1,0,0,1,-1,0,0,1,0,0,0,0,0,0],[-1,0,0,0,-1,0,1,1,0,0,0,0,0,0,0,0,0,1],[0,1,0,1,-1,1,0,-1,0,0,0,0,0,0,0,1,0,1],[0,0,0,0,1,1,-1,1,-1,1,1,1,1,0,0,0,0,0],[1,0,0,-1,-1,1,0,1,-1,0,1,1,0,0,0,1,0,0],[0,-1,1,0,0,0,-1,1,0,1,0,0,1,1,1,0,0,1],[0,1,-1,1,-1,0,0,0,1,0,0,0,0,0,0,1,0,0],[1,0,1,-1,0,0,0,-1,1,0,1,0,0,1,1,1,0,0],[-1,0,-1,1,-1,1,1,0,0,0,1,0,0,0,0,0,1,1],[1,1,0,0,-1,0,0,-1,0,0,0,1,0,0,0,0,0,0],[1,0,-1,0,0,-1,0,0,1,0,0,0,0,1,0,0,0,0],[-1,0,-1,1,0,0,1,0,0,0,1,0,0,1,1,0,1,1],[1,-1,0,0,-1,1,-1,1,1,0,0,1,0,0,0,0,0,0],[-1,0,-1,1,-1,1,0,0,1,0,1,0,0,0,0,1,1,0],[-1,0,0,-1,1,0,1,-1,1,0,0,1,0,0,0,0,0,0],[0,1,1,1,0,0,0,-1,-1,1,0,0,0,0,0,1,0,0],[0,0,-1,1,1,0,1,-1,0,1,1,0,0,0,1,0,0,1],[0,-1,1,0,0,0,1,-1,1,0,0,0,0,1,0,0,0,0],[-1,1,0,0,0,0,0,-1,1,0,0,1,1,1,1,1,0,0],[-1,0,1,1,0,0,0,0,0,0,0,0,0,1,1,0,0,0],[0,0,0,1,0,0,1,-1,-1,1,1,1,0,1,1,0,0,0],[0,0,0,1,0,-1,0,-1,1,1,1,0,0,1,0,1,0,0],[-1,-1,1,-1,1,0,0,1,1,0,0,0,0,0,0,1,0,0],[0,1,1,0,0,0,0,0,-1,1,0,0,1,1,1,1,1,0],[1,1,-1,1,0,-1,-1,-1,1,0,0,0,0,1,0,0,0,0],[-1,1,-1,0,0,0,0,1,1,0,0,0,1,1,1,1,0,0],[1,1,0,-1,0,1,1,-1,-1,0,0,1,0,0,0,0,0,0],[1,0,0,0,0,0,0,-1,1,0,0,0,0,1,0,0,0,0],[0,0,0,-1,1,0,-1,0,1,1,0,0,0,0,0,0,0,0],[1,1,-1,0,-1,0,1,-1,1,0,0,0,1,0,0,0,0,0],[-1,1,0,1,0,0,0,1,-1,0,0,0,0,1,0,0,0,0],[0,1,1,0,0,1,0,-1,-1,1,0,0,0,0,0,1,0,0],[0,-1,1,0,1,0,-1,1,0,1,0,0,1,0,1,0,0,1],[1,0,1,-1,0,-1,-1,1,0,0,0,0,0,1,0,0,0,0],[0,0,-1,-1,1,1,1,0,0,1,1,0,0,0,0,0,1,1],[0,1,1,-1,-1,0,0,0,0,1,0,0,0,0,1,0,0,0],[1,1,-1,-1,1,0,0,0,0,0,0,0,0,0,1,1,1,1],[1,1,0,0,0,-1,1,-1,-1,0,0,1,0,0,0,0,0,0],[1,0,0,0,-1,0,0,1,0,0,0,0,1,0,1,1,0,1],[0,1,0,1,-1,0,0,0,0,1,0,1,0,0,0,1,0,0],[1,0,0,-1,1,1,0,0,-1,0,1,1,0,0,0,1,1,0],[1,1,-1,0,0,-1,-1,1,1,0,0,0,0,1,0,0,0,0],[-1,1,0,0,1,1,1,-1,-1,0,0,1,1,0,0,0,0,0],[0,0,1,-1,0,1,-1,0,0,1,0,0,0,0,0,0,0,1],[1,1,0,0,-1,1,1,-1,-1,0,0,1,1,0,0,0,0,0],[1,0,1,1,-1,-1,-1,0,0,0,1,0,0,0,0,0,0,0],[1,-1,0,-1,0,1,-1,1,1,0,0,1,0,1,0,0,0,0],[-1,-1,0,1,1,-1,1,0,0,0,0,1,0,0,0,0,0,0],[1,-1,1,-1,0,-1,-1,1,1,0,0,0,0,1,0,0,0,0],[1,1,0,0,0,1,-1,-1,0,0,0,1,0,0,0,0,0,1],[-1,1,0,1,1,0,0,-1,-1,0,0,0,0,0,1,1,0,0],[0,0,1,0,1,1,0,-1,-1,0,0,0,0,0,0,1,0,0],[1,0,-1,1,1,0,-1,1,-1,0,0,0,0,0,1,0,0,0],[0,-1,1,1,-1,0,1,0,0,1,0,0,0,0,0,0,1,0],[0,1,0,0,1,-1,-1,-1,1,1,0,0,0,0,0,0,0,0],[0,1,-1,0,0,-1,0,1,1,1,0,0,1,1,0,1,0,0],[1,-1,-1,-1,0,1,0,1,1,0,0,0,0,1,0,1,0,0],[-1,0,0,0,-1,1,0,0,1,0,0,1,0,0,0,0,0,0],[1,1,-1,0,-1,1,0,0,0,0,0,0,0,0,0,1,0,0],[0,-1,-1,1,1,0,-1,1,0,1,0,0,0,0,1,0,0,0],[1,-1,0,0,1,0,-1,0,0,0,0,0,0,0,0,0,0,1],[0,0,-1,1,1,0,1,0,-1,0,0,0,0,0,1,0,0,0],[-1,-1,1,1,-1,0,1,0,1,0,0,0,0,0,0,0,1,0],[0,1,-1,-1,1,1,0,-1,0,0,0,0,0,0,0,1,0,0],[0,0,-1,1,0,0,1,0,0,1,0,0,0,0,0,0,0,0],[1,0,0,0,-1,1,-1,-1,1,0,1,1,0,0,0,0,0,0],[1,0,1,0,-1,-1,1,-1,1,0,1,0,1,0,0,0,0,0],[-1,1,-1,-1,0,1,1,1,-1,0,0,0,0,1,0,0,0,0],[1,0,1,0,0,0,-1,0,0,0,1,0,1,1,1,0,1,1],[-1,0,1,0,1,0,0,-1,1,0,1,0,1,0,1,1,0,0],[0,-1,1,1,0,-1,0,0,1,0,0,0,0,1,0,1,0,0],[1,0,-1,1,0,0,0,0,0,0,1,0,0,1,1,1,1,1],[1,0,1,-1,-1,1,-1,1,0,0,1,0,0,0,0,0,0,1],[1,0,1,0,0,0,-1,-1,1,0,1,0,1,1,1,0,0,0],[0,1,-1,1,-1,1,0,0,-1,1,0,0,0,0,0,1,1,0],[-1,0,-1,0,1,0,0,0,1,0,1,0,1,0,0,1,0,0],[0,-1,1,1,-1,1,0,0,0,0,0,0,0,0,0,0,1,1],[1,0,-1,0,0,0,1,1,-1,0,0,0,0,0,1,0,0,0],[0,0,-1,-1,0,1,0,1,1,0,0,0,0,0,0,1,0,0],[0,1,0,1,-1,-1,-1,0,1,0,0,1,0,0,0,0,0,0],[1,0,0,0,0,0,1,-1,-1,0,1,1,1,1,1,0,0,0],[0,1,0,0,1,-1,0,-1,1,1,0,0,0,0,0,0,0,0],[1,0,-1,-1,-1,1,0,1,1,0,0,0,0,0,0,1,0,0],[-1,1,0,1,-1,-1,1,-1,1,0,0,1,0,0,0,0,0,0],[0,0,1,-1,-1,1,0,1,0,0,0,0,0,0,0,0,0,1],[1,1,-1,-1,-1,1,0,-1,1,0,0,0,0,0,0,1,0,0],[1,-1,0,1,0,0,0,-1,0,0,0,0,0,1,0,1,0,0],[1,0,1,1,-1,0,-1,1,-1,0,1,0,0,0,0,0,0,0],[0,1,-1,-1,1,0,1,-1,1,1,0,0,0,0,0,0,0,0],[-1,1,0,1,0,0,0,-1,1,0,0,1,0,1,1,0,0,0],[1,-1,0,-1,1,-1,1,1,-1,0,0,1,0,0,0,0,0,0],[0,-1,1,0,1,0,-1,0,1,1,0,0,1,0,1,0,1,0],[-1,1,1,1,1,-1,0,-1,-1,0,0,0,0,0,0,1,0,0],[1,-1,0,1,0,1,-1,-1,0,0,0,0,0,1,0,0,0,1],[0,0,0,0,-1,-1,1,0,1,0,0,0,1,0,0,0,1,0],[1,0,-1,0,-1,1,1,1,-1,0,0,0,1,0,0,0,0,0],[1,-1,1,1,-1,-1,0,1,0,0,0,0,0,0,0,1,0,0],[1,-1,0,0,1,1,1,-1,-1,0,0,1,1,0,0,0,0,0],[1,-1,0,-1,-1,0,1,0,1,0,0,0,0,0,1,0,1,0],[1,1,-1,1,0,0,0,-1,0,0,0,0,0,0,0,1,0,0],[1,-1,0,-1,1,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,1,0,0,0,-1,0,0,0,1,0,1,1,1,0,1,1],[-1,-1,1,0,1,0,0,1,-1,0,0,0,0,0,0,1,0,0],[0,0,-1,-1,0,1,1,1,-1,1,0,0,0,0,0,0,0,0],[1,0,1,-1,-1,0,1,0,-1,0,1,0,0,0,1,0,0,0],[1,-1,1,-1,1,-1,0,0,0,0,0,0,0,0,0,1,1,1],[-1,-1,1,0,-1,0,1,1,0,0,0,0,0,0,0,0,0,1],[0,0,0,1,-1,0,1,0,0,1,0,0,0,0,0,0,0,0],[0,1,0,0,1,-1,-1,-1,1,1,0,0,0,0,0,0,0,0],[-1,0,1,0,1,-1,0,1,0,0,1,0,1,0,0,1,0,1],[0,0,0,-1,0,1,1,0,0,0,0,1,0,0,0,0,0,1],[0,1,1,0,-1,1,-1,1,-1,1,0,0,0,0,0,0,0,0],[-1,1,-1,1,0,1,-1,1,-1,0,0,0,0,1,0,0,0,0],[-1,1,0,-1,-1,0,1,1,0,0,0,0,0,0,1,0,0,1],[0,0,1,1,0,-1,0,0,0,1,0,0,0,0,0,1,0,0],[1,-1,1,1,-1,0,0,0,0,0,0,0,0,0,0,0,1,0],[0,1,-1,1,-1,1,1,-1,0,1,0,0,0,0,0,0,0,0],[1,0,-1,0,1,1,-1,0,-1,0,0,0,0,0,0,0,1,0],[0,-1,1,-1,-1,1,1,1,-1,1,0,0,0,0,0,0,0,0],[1,0,-1,0,0,0,0,0,1,0,1,0,1,1,1,1,1,0],[0,1,0,0,0,0,-1,0,1,1,0,0,0,0,0,0,0,0],[1,-1,0,0,-1,-1,1,0,1,0,0,0,1,0,0,0,1,0],[-1,0,-1,-1,1,1,0,1,0,0,1,0,0,0,0,1,0,0],[0,1,-1,0,0,-1,1,0,0,0,0,0,1,1,0,0,0,1],[0,0,-1,0,1,0,-1,0,1,1,0,0,0,0,0,0,0,0],[1,-1,-1,0,0,0,1,-1,1,0,0,0,0,1,0,0,0,0],[0,-1,0,0,0,1,0,1,-1,1,0,0,0,0,0,0,0,0],[0,0,-1,1,0,0,-1,1,0,1,1,0,0,1,1,0,0,1],[1,0,0,-1,0,0,1,0,-1,0,0,0,0,0,1,0,0,0],[0,0,0,-1,0,1,0,1,0,0,0,1,0,0,0,0,0,1],[1,-1,1,-1,1,0,0,0,0,0,0,0,0,0,1,1,1,1],[0,-1,1,1,1,0,0,-1,-1,0,0,0,0,0,0,1,0,0],[1,-1,0,0,1,-1,1,1,-1,0,0,1,0,0,0,0,0,0],[0,1,1,-1,1,-1,-1,0,1,1,0,0,0,0,0,0,0,0],[1,0,1,0,-1,-1,1,0,-1,0,0,0,1,0,0,0,0,0],[1,1,0,1,0,-1,0,-1,0,0,0,1,0,1,0,1,0,1],[0,0,-1,0,1,0,-1,1,1,1,1,0,1,0,1,0,0,0],[-1,1,1,1,0,0,0,0,-1,0,0,0,0,1,0,1,1,0],[0,0,0,-1,1,1,0,0,-1,0,0,0,0,0,0,1,0,0],[1,-1,-1,0,0,1,1,-1,0,0,0,0,0,1,0,0,0,0],[0,0,1,-1,1,-1,0,-1,1,1,1,0,0,0,0,1,0,0],[0,1,-1,-1,1,1,-1,-1,1,1,0,0,0,0,0,0,0,0],[1,0,-1,1,-1,0,0,0,0,0,0,0,0,0,0,1,0,0],[0,-1,0,0,1,1,1,-1,0,1,0,1,1,0,0,0,0,1],[0,0,0,1,0,-1,-1,0,1,1,1,1,0,1,0,0,1,0],[-1,0,-1,1,-1,1,1,-1,1,0,1,0,0,0,0,0,0,0],[0,1,0,1,0,1,-1,0,-1,0,0,0,0,1,0,0,1,0],[1,0,0,-1,0,1,-1,1,0,0,1,1,0,1,0,0,0,1],[1,1,-1,0,1,0,0,-1,0,0,0,0,0,0,0,0,0,1],[-1,0,0,1,-1,-1,1,1,0,0,0,0,0,0,0,0,0,1],[1,0,0,-1,0,0,1,-1,1,0,0,0,0,1,0,0,0,0],[0,0,1,1,0,-1,1,-1,-1,1,1,0,0,1,0,0,0,0],[-1,1,0,0,0,-1,1,0,0,0,0,0,0,1,0,0,0,1],[1,-1,-1,1,0,1,0,-1,1,0,0,0,0,1,0,0,0,0],[1,-1,0,0,1,0,0,0,0,0,0,1,1,0,1,1,1,1],[-1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0],[1,1,-1,0,-1,0,0,0,0,0,0,0,1,0,1,1,0,1],[1,0,1,-1,1,-1,0,-1,0,0,1,0,0,0,0,1,0,1],[0,-1,1,1,1,-1,0,0,0,0,0,0,0,0,0,1,0,0],[0,0,-1,-1,1,0,0,1,1,1,1,0,0,0,1,1,0,0],[0,1,-1,1,-1,-1,1,1,0,0,0,0,0,0,0,0,0,1],[1,1,0,-1,-1,1,-1,-1,1,0,0,1,0,0,0,0,0,0],[-1,1,0,-1,-1,1,1,1,0,0,0,0,0,0,0,0,0,1],[1,1,-1,0,0,1,-1,-1,1,0,0,0,0,1,0,0,0,0],[0,1,0,-1,-1,1,1,0,-1,1,0,0,0,0,0,0,0,0],[1,0,0,1,0,1,-1,-1,0,0,0,0,0,1,0,0,0,1],[0,0,-1,-1,0,0,1,0,1,0,0,0,0,0,0,0,1,0],[0,0,1,0,1,0,0,-1,0,1,1,0,1,0,1,1,0,1],[-1,-1,0,1,0,0,-1,1,1,0,0,1,0,0,0,0,0,0],[0,1,1,0,-1,1,0,0,-1,1,0,0,0,0,0,0,0,0],[1,0,0,1,-1,0,0,1,-1,0,0,0,0,0,0,1,0,0],[0,0,0,1,1,0,-1,-1,0,0,0,0,0,0,0,0,0,1],[-1,1,1,1,-1,-1,0,-1,1,0,0,0,0,0,0,1,0,0],[-1,0,0,1,1,0,-1,1,-1,0,1,1,0,0,1,0,0,0],[-1,1,0,-1,-1,1,0,1,0,0,0,1,0,0,0,1,0,1],[-1,0,-1,1,1,0,-1,0,1,0,1,0,0,0,0,0,0,0],[1,1,0,0,-1,1,-1,1,-1,0,0,1,0,0,0,0,0,0],[-1,1,1,0,-1,0,-1,1,0,0,0,0,1,0,1,0,0,1],[-1,0,0,1,0,1,-1,0,0,0,0,0,0,1,0,0,0,0],[0,0,0,1,1,-1,0,1,-1,0,0,1,0,0,0,0,0,0],[-1,0,-1,-1,1,0,1,1,0,0,1,0,0,0,0,0,0,0],[0,0,0,1,-1,-1,1,0,0,1,0,0,0,0,0,0,0,0],[1,0,1,1,-1,0,-1,1,-1,0,1,0,0,0,0,0,0,0],[-1,1,0,0,0,0,-1,0,1,0,0,1,1,1,0,0,0,0],[1,-1,-1,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0],[0,1,1,-1,1,0,0,-1,0,1,0,0,0,0,1,1,0,1],[-1,0,1,1,0,0,-1,-1,1,0,0,0,0,0,1,0,0,0],[0,0,-1,1,0,0,0,1,-1,1,1,0,0,1,1,1,0,0],[0,1,0,-1,-1,0,1,0,0,1,0,0,0,0,1,0,0,1],[-1,0,1,1,1,0,-1,-1,0,0,0,0,0,0,0,0,0,1],[1,1,-1,0,-1,-1,1,0,1,0,0,0,1,0,0,0,0,0],[0,0,1,-1,1,0,-1,1,0,1,0,0,0,0,0,0,0,0],[0,0,0,1,0,0,0,1,-1,0,0,1,0,0,0,0,0,0],[-1,0,-1,1,0,0,-1,1,1,0,1,0,0,1,1,0,0,0],[1,1,-1,-1,0,0,-1,1,1,0,0,0,0,1,0,0,0,0],[0,0,0,1,1,-1,-1,1,0,0,1,0,0,0,0,0,0,0],[1,1,-1,-1,0,0,0,0,0,0,0,0,0,1,1,0,1,1],[0,0,1,-1,-1,0,1,1,-1,1,1,0,0,0,1,0,0,0],[0,1,-1,1,-1,1,1,0,-1,1,0,0,0,0,0,0,0,0],[-1,1,0,0,1,1,0,-1,0,0,0,0,1,0,0,0,0,0],[0,-1,0,1,0,0,0,-1,1,1,0,1,0,1,0,0,0,0],[1,1,-1,0,0,-1,0,0,1,0,0,0,0,1,0,0,0,0],[0,1,0,1,0,0,-1,0,0,0,0,0,0,0,0,0,0,1],[0,1,1,-1,0,0,-1,1,-1,1,0,0,0,0,0,0,0,0],[0,-1,1,0,0,0,0,1,0,0,0,0,0,0,0,1,0,1],[0,0,0,-1,1,0,1,0,0,1,1,1,0,0,1,0,1,1],[0,1,1,1,-1,0,-1,0,0,1,0,0,0,0,0,0,0,0],[1,0,0,-1,0,1,-1,0,0,0,0,1,0,0,0,0,0,1],[-1,1,0,-1,1,-1,1,-1,1,0,0,1,0,0,0,0,0,0],[-1,1,-1,1,0,1,-1,1,0,0,0,0,0,1,0,0,0,0],[0,1,-1,1,-1,0,1,-1,1,1,0,0,0,0,0,0,0,0],[-1,-1,1,0,-1,0,0,1,1,0,0,0,1,0,1,1,0,0],[1,1,0,0,0,-1,-1,0,1,0,0,1,1,1,0,0,1,0],[-1,0,1,1,0,1,1,-1,-1,0,0,0,0,1,0,0,0,0],[0,-1,0,1,1,-1,0,1,0,0,0,1,0,0,0,0,0,0],[-1,1,1,0,0,0,1,-1,0,0,0,0,0,1,0,0,0,0],[1,-1,0,0,0,1,0,-1,1,0,0,0,0,1,0,0,0,0],[1,-1,0,0,0,1,1,0,-1,0,0,0,1,0,0,0,0,0],[-1,0,-1,-1,1,1,1,-1,1,0,1,0,0,0,0,0,0,0],[1,1,0,1,0,-1,-1,0,-1,0,0,1,0,0,0,0,1,0],[0,0,1,0,0,-1,0,0,1,0,0,0,0,1,0,0,0,0],[1,-1,0,1,0,0,-1,0,1,0,0,0,0,1,0,0,0,0],[-1,0,0,1,-1,1,-1,1,1,0,0,1,0,0,0,0,0,0],[-1,0,1,0,0,0,1,-1,0,0,0,0,0,1,0,0,0,0],[0,1,0,-1,1,0,0,-1,0,0,0,0,0,0,0,1,0,0],[1,1,-1,1,1,-1,-1,-1,0,0,0,0,0,0,0,0,0,1],[-1,1,0,1,-1,1,0,-1,1,0,0,1,0,0,0,0,0,0],[1,-1,1,1,0,1,-1,-1,0,0,0,0,0,1,0,0,0,1],[0,0,0,1,0,1,-1,-1,1,1,1,1,0,1,0,0,0,0],[-1,-1,0,1,1,0,1,-1,1,0,0,1,0,0,0,0,0,0],[-1,1,0,-1,-1,1,0,1,1,0,0,0,0,0,0,1,0,0],[1,0,0,-1,0,-1,1,0,1,0,0,0,0,1,0,0,0,0],[-1,1,1,0,-1,0,0,1,0,0,0,0,1,0,1,1,0,1],[0,1,-1,1,-1,1,0,-1,0,1,0,0,0,0,0,1,0,1],[1,0,1,-1,0,-1,1,-1,0,0,0,0,0,1,0,0,0,0],[-1,1,1,0,0,0,-1,-1,1,0,0,0,1,0,0,0,0,0],[0,-1,0,1,0,-1,0,1,1,0,0,0,0,0,0,1,0,0],[0,-1,-1,1,-1,1,0,1,0,1,0,0,0,0,0,1,0,1],[0,1,1,0,-1,-1,-1,1,0,1,0,0,1,0,0,0,0,0],[1,0,1,1,-1,0,-1,-1,1,0,1,0,0,0,0,0,0,0],[0,-1,-1,0,0,1,0,1,0,1,0,0,0,1,0,1,0,0],[1,-1,1,1,1,0,0,-1,-1,0,0,0,0,0,0,1,0,0],[0,0,1,0,0,1,0,-1,-1,1,1,0,1,1,0,1,0,0],[0,-1,-1,0,1,1,-1,1,1,1,0,0,0,0,0,0,0,0],[0,0,-1,1,1,-1,1,0,0,1,0,0,0,0,0,0,0,1],[1,0,0,1,1,-1,0,-1,-1,0,0,1,0,0,0,1,0,0],[0,1,0,1,1,-1,-1,0,0,0,0,0,0,0,0,0,1,0],[0,1,0,-1,0,0,0,1,0,0,0,0,0,1,0,0,0,0],[-1,1,1,1,0,1,0,-1,-1,0,0,0,0,1,0,1,0,0],[-1,0,1,0,1,0,-1,1,0,0,0,0,1,0,0,0,0,0],[0,0,-1,0,1,1,1,0,-1,0,0,0,1,0,0,0,0,0],[0,-1,-1,1,1,0,1,-1,0,1,0,0,0,0,0,0,0,0],[-1,-1,0,1,-1,1,0,1,1,0,0,1,0,0,0,0,0,0],[1,0,0,-1,1,-1,0,1,-1,0,0,1,0,0,0,0,0,0],[-1,-1,0,0,1,1,0,1,0,0,0,1,1,0,0,0,0,0],[-1,0,0,1,-1,1,0,0,1,0,0,1,0,0,0,0,0,0],[1,0,1,0,0,0,0,0,-1,0,1,0,1,1,1,1,1,0],[0,0,-1,0,0,1,0,1,-1,1,0,0,0,1,0,0,0,0],[0,0,-1,0,0,0,1,1,0,0,0,0,0,0,0,0,0,1],[-1,0,-1,0,0,1,1,0,1,0,1,0,0,0,0,0,0,0],[-1,0,0,1,0,-1,0,1,1,0,0,0,0,0,0,1,0,0],[0,-1,0,0,0,1,1,-1,0,1,0,1,0,1,0,0,0,0],[-1,0,0,0,1,1,0,0,-1,0,0,0,1,0,0,0,0,0],[-1,-1,0,1,1,0,1,-1,1,0,0,1,0,0,0,0,0,0],[-1,-1,1,0,1,-1,-1,1,1,0,0,0,1,0,0,0,0,0],[1,0,1,-1,-1,0,1,-1,1,0,1,0,0,0,1,0,0,0],[0,1,0,0,1,1,0,-1,-1,0,0,0,0,0,0,1,0,0],[0,0,0,1,-1,0,1,-1,1,0,1,0,0,0,0,0,0,0],[0,1,-1,0,0,0,-1,1,0,0,0,0,0,1,0,0,0,0],[0,0,0,1,1,0,-1,0,0,0,0,0,0,0,1,0,0,0],[0,1,0,0,0,0,1,-1,0,1,0,1,0,0,0,0,0,0],[0,0,0,-1,0,-1,0,1,1,0,0,0,0,1,0,1,0,0],[0,0,-1,0,-1,1,0,1,0,1,1,0,0,0,0,1,0,1],[-1,0,-1,0,0,1,0,1,0,0,1,0,1,1,0,1,0,1],[0,1,0,0,-1,-1,1,-1,1,0,0,0,1,0,0,0,0,0],[0,0,-1,0,0,-1,0,1,1,1,1,0,1,1,0,1,0,0],[0,-1,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,1],[0,0,1,0,-1,0,0,0,1,0,0,0,0,0,1,0,0,0],[-1,1,-1,1,-1,0,0,0,1,0,0,0,0,0,0,1,0,0],[0,0,0,0,1,-1,0,0,1,1,1,1,1,0,0,1,1,0],[0,-1,0,1,1,0,0,1,-1,0,0,0,0,0,1,0,0,0],[-1,0,0,0,1,-1,0,1,0,0,1,0,0,0,0,0,0,0],[1,-1,-1,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0],[0,1,-1,0,1,-1,1,-1,1,1,0,0,0,0,0,0,0,0],[-1,1,-1,0,1,1,0,0,-1,0,0,0,1,0,0,1,1,0],[1,0,1,-1,0,0,1,-1,0,0,1,0,0,1,1,0,0,1],[0,1,0,0,-1,1,-1,1,0,1,0,1,1,0,0,0,0,1],[-1,1,1,0,0,1,0,-1,0,0,0,0,0,0,0,0,0,1],[0,1,0,1,-1,0,0,0,-1,1,0,1,0,0,1,1,1,0],[-1,0,1,1,0,-1,1,-1,0,0,0,0,0,1,0,0,0,0],[1,0,-1,-1,1,1,0,-1,0,0,0,0,0,0,0,0,0,1],[1,1,-1,1,-1,0,0,0,0,0,0,0,0,0,0,1,0,0],[-1,0,0,1,1,0,0,-1,1,0,0,0,0,0,1,0,0,0],[0,1,0,1,-1,-1,0,1,0,0,0,1,0,0,0,0,0,1],[0,0,0,0,1,0,1,-1,0,1,1,1,1,0,1,0,0,1],[-1,0,0,-1,0,0,1,1,0,0,1,1,0,1,1,0,0,1],[0,1,-1,1,-1,1,0,0,0,1,0,0,0,0,0,1,0,1],[-1,0,0,0,0,1,1,0,0,0,0,1,0,0,0,0,0,0],[-1,1,0,-1,1,1,1,0,-1,0,0,1,0,0,0,0,1,0],[1,1,-1,-1,0,-1,1,-1,1,0,0,0,0,1,0,0,0,0],[1,-1,0,-1,0,1,1,-1,1,0,0,0,0,1,0,0,0,0],[0,1,-1,1,0,-1,-1,1,1,0,0,0,0,1,0,0,0,0],[-1,0,-1,1,1,0,1,0,0,0,1,0,0,0,1,0,0,0],[-1,1,0,0,-1,1,-1,1,0,0,0,1,1,0,0,0,0,1],[1,0,0,0,-1,1,1,0,-1,0,0,0,1,0,0,0,0,0],[0,1,1,1,0,-1,0,-1,0,1,0,0,0,0,0,0,0,0],[0,0,-1,1,0,0,0,1,0,1,0,0,0,0,0,0,0,1],[1,0,0,1,0,1,-1,0,-1,0,0,0,0,1,0,0,1,0],[0,0,0,0,0,-1,-1,1,1,1,1,0,1,1,0,0,0,0],[1,-1,1,-1,0,-1,-1,1,1,0,0,0,0,1,0,0,0,0],[-1,-1,0,0,1,0,1,1,-1,0,0,1,0,0,0,0,0,0],[1,0,0,-1,0,0,-1,0,1,0,0,0,0,1,0,0,0,0],[-1,1,1,1,-1,-1,0,0,1,0,0,0,0,0,0,1,1,0],[0,-1,0,0,1,-1,1,1,-1,0,0,1,0,0,0,0,0,0],[1,0,0,0,1,0,-1,1,-1,0,1,0,0,0,0,0,0,0],[0,-1,0,0,1,1,0,-1,0,1,0,1,1,0,0,1,0,1],[1,-1,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0],[1,0,0,0,-1,1,-1,1,0,0,0,1,0,0,0,0,0,0],[-1,1,1,0,0,1,-1,0,0,0,0,0,1,0,0,0,0,1],[0,1,1,-1,0,1,-1,-1,0,1,0,0,0,0,0,0,0,1],[1,-1,1,0,0,-1,1,0,-1,0,0,0,1,1,0,0,1,0],[-1,0,1,-1,1,-1,0,1,1,0,0,0,0,0,0,1,0,0],[-1,1,-1,0,1,-1,1,-1,1,0,0,0,1,0,0,0,0,0],[-1,0,1,1,-1,1,0,0,0,0,0,0,0,0,0,0,0,1],[0,1,0,0,0,-1,-1,1,1,0,0,0,0,1,0,0,0,0],[1,1,0,0,-1,0,0,0,0,0,0,1,0,0,0,0,0,0],[-1,0,1,1,0,-1,1,1,-1,0,0,0,0,1,0,0,0,0],[0,-1,0,0,1,1,-1,0,1,1,0,1,1,0,0,0,1,0],[1,0,0,-1,1,0,-1,0,0,0,0,0,0,0,0,0,0,1],[1,1,0,0,0,0,-1,0,-1,0,0,1,0,0,0,0,1,0],[0,1,-1,0,0,1,0,-1,0,0,0,0,0,0,0,1,0,0],[1,0,1,-1,-1,0,-1,1,0,0,0,0,0,0,1,0,0,0],[1,1,0,0,-1,-1,0,0,1,0,0,1,1,0,0,0,0,0],[0,0,0,-1,1,0,0,1,-1,0,1,0,0,0,0,0,0,0],[-1,1,-1,0,1,0,1,0,0,0,0,0,0,0,0,0,1,0],[-1,1,-1,1,1,-1,0,-1,1,0,0,0,0,0,0,1,0,0],[-1,1,1,0,-1,-1,0,1,1,0,0,0,1,0,0,0,0,0],[0,-1,-1,0,1,1,1,0,-1,1,0,0,0,0,0,0,0,0],[-1,0,0,1,1,-1,0,0,0,0,0,1,0,0,0,0,0,0],[0,0,0,1,0,0,0,-1,1,0,0,0,0,1,0,0,0,0],[1,1,-1,-1,0,-1,-1,1,1,0,0,0,0,1,0,0,0,0],[0,0,-1,1,-1,-1,1,0,1,1,1,0,0,0,0,0,1,0],[1,1,-1,0,-1,-1,0,1,0,0,0,0,1,0,0,1,0,1],[0,0,1,1,-1,-1,0,0,1,1,1,0,0,0,0,1,1,0],[0,0,-1,1,0,0,0,-1,1,0,1,0,0,1,0,0,0,0],[0,1,0,0,-1,-1,-1,1,1,1,0,1,1,0,0,0,0,0],[1,-1,-1,0,1,1,1,0,-1,0,0,0,1,0,0,0,0,0],[0,1,-1,1,0,1,0,0,-1,0,0,0,0,1,0,0,0,0],[0,1,1,0,0,-1,0,1,-1,1,0,0,1,1,0,1,0,0],[0,1,1,-1,1,0,-1,-1,0,1,0,0,0,0,0,0,0,1],[-1,0,1,1,0,0,-1,-1,1,0,0,0,0,0,1,0,0,0],[-1,-1,0,1,1,-1,1,0,1,0,0,1,0,0,0,0,0,0],[0,0,1,0,1,0,0,-1,-1,0,0,0,0,0,0,1,0,0],[0,1,0,1,0,0,0,0,-1,0,0,1,0,0,0,1,0,0],[1,-1,1,-1,0,0,0,1,0,0,0,0,0,1,0,0,0,1],[1,0,1,0,-1,0,1,0,-1,0,1,0,1,0,1,0,1,0],[0,0,1,-1,0,1,1,-1,0,1,1,0,0,1,0,0,0,1],[0,0,1,-1,0,-1,1,0,1,0,0,0,0,1,0,0,0,0],[0,1,0,-1,-1,1,1,0,0,0,0,1,0,0,0,0,0,1],[1,-1,0,1,0,1,0,-1,-1,0,0,0,0,1,0,1,0,0],[0,1,-1,0,0,1,-1,-1,1,1,0,0,1,1,0,0,0,0],[0,-1,0,-1,0,1,1,0,1,1,0,1,0,1,0,0,1,0],[-1,0,1,1,-1,-1,1,1,0,0,0,0,0,0,0,0,0,1],[-1,1,1,0,-1,1,1,-1,0,0,0,0,0,0,0,0,0,1],[0,0,1,-1,-1,0,1,1,0,0,0,0,0,0,1,0,0,1],[0,0,1,0,-1,0,1,-1,1,0,1,0,0,0,1,0,0,0],[1,-1,1,1,-1,1,-1,0,-1,0,0,0,0,0,0,0,1,0],[-1,1,0,1,-1,-1,0,1,1,0,0,0,0,0,0,1,0,0],[0,1,0,0,1,-1,1,-1,0,0,0,1,0,0,0,0,0,0],[0,1,0,0,-1,0,1,0,0,1,0,1,1,0,1,0,0,0],[-1,1,0,0,0,0,1,-1,0,0,0,1,1,1,1,0,0,1],[0,0,0,1,-1,-1,1,0,1,1,1,1,0,0,0,0,1,0],[0,1,1,0,-1,-1,1,0,0,1,0,0,1,0,0,0,0,0],[1,1,-1,-1,1,0,1,0,-1,0,0,0,0,0,1,0,0,0],[0,0,0,-1,1,-1,0,1,0,1,1,1,0,0,0,1,0,1],[0,-1,-1,0,1,0,1,0,0,1,0,0,0,0,1,0,0,1],[0,0,0,-1,1,1,-1,1,0,1,0,0,0,0,0,0,0,0],[0,1,-1,-1,0,1,1,0,0,0,0,0,0,1,0,0,1,1],[-1,1,-1,-1,1,0,1,-1,1,0,0,0,0,0,1,0,0,0],[-1,0,0,1,0,1,-1,0,0,0,0,0,0,1,0,0,0,0],[0,-1,0,0,1,1,1,-1,0,1,0,1,1,0,0,0,0,1],[1,-1,0,0,1,-1,1,1,-1,0,0,1,0,0,0,0,0,0],[-1,0,0,1,0,-1,1,0,1,0,0,0,0,0,0,0,1,0],[1,1,0,0,1,-1,-1,0,-1,0,0,1,0,0,0,0,1,0],[-1,0,1,1,1,0,0,0,-1,0,1,0,0,0,1,1,1,0],[-1,1,-1,0,0,1,0,1,-1,0,0,0,0,1,0,0,0,0],[0,1,0,1,-1,1,-1,1,-1,1,0,1,0,0,0,0,0,0],[-1,0,-1,-1,1,0,1,0,1,0,1,0,0,0,0,0,0,0],[1,-1,-1,0,0,1,0,0,1,0,0,0,0,1,0,0,0,0],[-1,0,-1,1,1,0,1,0,0,0,1,0,0,0,1,0,0,0],[0,0,-1,1,1,0,0,-1,0,0,0,0,0,0,1,0,0,0],[0,-1,-1,0,-1,1,1,0,1,1,0,0,0,0,0,0,1,0],[0,-1,1,-1,-1,1,1,1,0,0,0,0,0,0,0,0,0,1],[0,0,0,1,1,-1,0,0,-1,0,0,1,0,0,0,1,1,0],[1,0,-1,0,0,-1,-1,1,1,0,0,0,0,1,0,0,0,0],[1,0,-1,0,-1,0,1,-1,1,0,1,0,1,0,0,0,0,0],[0,1,-1,0,1,-1,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,-1,0,1,0,0,0,0,0,1,0,0,0,0],[1,0,-1,-1,-1,0,1,0,1,0,0,0,0,0,1,0,1,0],[1,0,-1,1,0,1,-1,-1,1,0,0,0,0,1,0,0,0,0],[-1,1,1,-1,1,-1,0,-1,1,0,0,0,0,0,0,1,0,0],[0,0,-1,1,-1,-1,0,1,1,0,0,0,0,0,0,1,0,0],[1,0,0,-1,0,1,0,0,0,0,0,1,0,0,0,0,0,1],[-1,1,1,-1,0,1,0,-1,0,0,0,0,0,0,0,1,0,1],[0,1,0,-1,-1,0,0,1,0,1,0,1,0,0,1,1,0,1],[1,-1,-1,1,0,0,-1,1,1,0,0,0,0,1,0,0,0,0],[0,0,1,0,0,1,0,-1,0,0,0,0,0,0,0,0,0,1],[-1,-1,1,0,1,-1,0,0,1,0,0,0,0,0,0,1,0,0],[0,1,0,1,-1,1,-1,-1,1,0,0,1,0,0,0,0,0,0],[-1,1,1,1,-1,1,0,-1,0,0,0,0,0,0,0,0,0,1],[1,-1,1,0,1,0,-1,-1,0,0,0,0,0,0,0,0,0,1],[-1,0,-1,1,0,0,1,1,0,0,1,0,0,0,0,0,0,1],[0,-1,1,1,1,-1,0,0,0,0,0,0,0,0,0,1,0,0],[0,0,1,1,-1,-1,1,-1,1,0,1,0,0,0,0,0,0,0],[0,1,-1,0,1,1,1,-1,-1,0,0,0,1,0,0,0,0,0],[0,1,0,-1,0,0,0,-1,1,1,0,1,0,1,1,0,0,0],[1,-1,-1,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0],[-1,0,0,1,0,0,1,0,0,0,1,1,0,0,0,0,0,0],[0,1,1,0,0,-1,-1,0,1,1,0,0,0,0,0,0,0,0],[1,0,-1,1,0,0,-1,1,-1,0,1,0,0,1,1,0,0,0],[1,-1,1,-1,1,1,-1,0,-1,0,0,0,0,0,0,0,1,0],[1,-1,0,0,-1,0,1,0,0,0,0,0,1,0,0,0,1,0],[1,1,0,-1,1,0,0,-1,-1,0,0,1,0,0,0,1,0,0],[-1,1,0,1,1,0,0,0,-1,0,0,1,0,0,1,1,1,0],[1,0,-1,0,1,-1,0,1,0,0,0,0,0,0,0,0,0,1],[1,-1,1,-1,0,-1,1,0,0,0,0,0,0,1,0,0,0,0],[0,-1,1,1,-1,1,-1,0,0,0,0,0,0,0,0,0,1,1],[0,1,1,0,0,1,-1,-1,0,0,0,0,0,0,0,0,0,1],[1,-1,1,1,1,0,0,-1,-1,0,0,0,0,0,0,1,0,0],[1,-1,0,1,-1,1,-1,1,-1,0,0,1,0,0,0,0,0,0],[0,1,0,-1,-1,1,-1,1,1,1,0,1,0,0,0,0,0,0],[0,-1,1,0,-1,1,1,1,-1,1,0,0,0,0,0,0,0,0],[0,-1,1,1,0,0,1,-1,-1,0,0,0,0,1,0,0,0,0],[1,-1,-1,1,1,0,0,0,0,0,0,0,0,0,1,1,1,1],[-1,0,0,1,-1,1,1,0,0,0,1,1,0,0,0,0,1,1],[-1,0,1,1,-1,0,1,-1,0,0,1,0,0,0,1,0,0,1],[0,0,1,1,-1,-1,-1,1,0,1,1,0,0,0,0,0,0,1],[0,-1,1,1,0,-1,1,-1,1,0,0,0,0,1,0,0,0,0],[-1,1,0,1,0,0,-1,-1,1,0,0,1,0,1,1,0,0,0],[0,0,0,1,1,-1,-1,1,-1,0,0,1,0,0,0,0,0,0],[1,-1,-1,0,1,-1,1,0,0,0,0,0,0,0,0,0,0,1],[-1,-1,1,1,0,0,-1,0,1,0,0,0,0,0,1,0,0,0],[1,0,1,-1,0,-1,0,0,0,0,0,0,0,1,0,0,0,0],[1,0,1,0,0,-1,1,-1,0,0,1,0,1,1,0,0,0,1],[1,-1,-1,0,0,1,1,1,-1,0,0,0,1,0,0,0,0,0],[0,0,0,1,-1,0,1,-1,0,1,1,0,0,0,0,0,0,0],[0,1,-1,0,0,1,-1,0,0,1,0,0,1,1,0,0,1,1],[1,-1,1,0,1,-1,-1,0,0,0,0,0,0,0,0,0,0,1],[-1,1,0,0,-1,0,0,1,1,0,0,0,0,0,0,1,0,0],[1,1,-1,0,0,-1,1,0,0,0,0,0,1,0,0,0,0,1],[0,-1,0,0,0,1,0,0,1,0,0,1,0,0,0,0,0,0],[1,0,0,0,1,-1,0,0,0,0,1,1,1,0,0,1,1,1],[1,-1,-1,-1,-1,1,1,1,0,0,0,0,0,0,0,0,0,1],[-1,-1,1,1,1,0,0,-1,1,0,0,0,0,0,1,1,0,0],[0,1,-1,0,-1,0,0,1,0,1,0,0,1,0,1,1,0,1],[0,0,1,1,1,0,-1,0,-1,0,0,0,0,0,0,0,1,0],[-1,1,1,-1,1,1,0,-1,-1,0,0,0,0,0,0,1,0,0],[-1,0,1,1,0,0,1,-1,-1,0,0,0,0,1,0,0,0,0],[1,0,0,1,-1,1,0,0,-1,0,0,0,0,0,0,1,0,0],[0,-1,0,1,1,0,1,0,-1,1,0,1,0,0,1,0,1,0],[0,0,-1,-1,0,1,1,1,0,0,0,0,0,0,0,0,0,1],[0,1,-1,0,0,0,0,1,-1,0,0,0,0,1,1,0,0,0],[0,-1,1,0,0,-1,1,1,0,1,0,0,1,1,0,0,0,1],[1,1,0,0,-1,-1,-1,1,1,0,0,1,1,0,0,0,0,0],[-1,1,0,-1,-1,0,1,0,1,0,0,0,0,0,1,0,0,0],[0,0,1,0,0,0,0,1,-1,0,1,0,0,1,0,0,0,0],[-1,-1,0,0,1,1,-1,1,0,0,0,1,1,0,0,0,0,0],[0,-1,0,1,1,0,0,0,-1,0,0,0,0,0,1,0,0,0],[-1,1,0,-1,0,0,1,0,1,0,0,1,0,1,1,0,1,0],[0,1,1,-1,0,-1,0,-1,1,1,0,0,0,1,0,0,0,0],[-1,0,0,1,1,0,-1,0,1,0,0,0,0,0,1,0,0,0],[0,1,0,0,0,-1,1,-1,0,1,0,1,1,1,0,0,0,0],[-1,1,1,0,0,0,-1,1,-1,0,0,0,1,1,0,0,0,0],[0,0,1,0,1,1,-1,-1,0,0,0,0,0,0,0,0,0,1],[0,-1,0,-1,-1,1,1,0,1,0,0,0,0,0,0,0,1,0],[0,-1,0,1,-1,0,0,1,1,0,0,0,0,0,0,1,0,0],[1,-1,0,0,1,0,0,-1,0,0,0,1,1,0,1,1,0,1],[0,-1,1,-1,-1,1,0,1,0,0,0,0,0,0,0,0,0,1],[0,-1,1,1,1,0,-1,1,-1,0,0,0,0,0,1,0,0,0],[1,1,-1,0,1,1,-1,0,-1,0,0,0,0,0,0,0,1,0],[-1,1,-1,1,0,-1,0,0,1,0,0,0,0,1,0,1,1,0],[0,1,0,-1,-1,0,1,1,0,0,0,0,0,0,1,0,0,1],[1,0,-1,0,0,0,1,0,-1,0,0,0,0,0,1,0,0,0],[1,-1,0,-1,1,1,1,-1,0,0,0,1,0,0,0,0,0,1],[1,0,1,0,-1,0,1,-1,-1,0,1,0,0,0,0,0,0,0],[1,1,0,0,0,-1,-1,0,0,0,0,1,0,0,0,0,0,0],[-1,-1,1,0,1,1,0,1,-1,0,0,0,1,0,0,1,0,0],[0,1,-1,0,0,1,-1,0,0,1,0,0,1,1,0,0,1,1],[1,0,-1,-1,0,1,0,0,1,0,0,0,0,1,0,0,0,0],[-1,1,1,0,-1,0,0,0,1,0,0,0,0,0,1,0,0,0],[0,-1,0,1,1,0,-1,0,1,1,0,1,0,0,1,0,1,0],[-1,1,-1,-1,1,1,1,0,-1,0,0,0,0,0,0,0,1,0],[0,-1,-1,1,0,1,0,-1,1,1,0,0,0,1,0,0,0,0],[0,-1,-1,1,-1,1,1,0,1,1,0,0,0,0,0,0,1,0],[-1,1,-1,1,1,0,-1,0,1,0,0,0,0,0,1,0,1,0],[0,-1,0,1,0,0,1,0,-1,1,0,0,0,0,0,0,0,0],[1,-1,1,1,0,0,0,-1,0,0,0,0,0,1,0,1,0,0],[0,0,0,1,-1,0,0,0,1,1,1,0,0,0,0,1,1,0],[-1,0,1,1,0,-1,0,0,1,0,0,0,0,1,0,1,1,0],[1,1,0,-1,-1,0,1,-1,0,0,0,0,0,0,1,0,0,0],[0,1,0,-1,0,0,1,-1,0,1,0,1,0,1,1,0,0,0],[0,-1,0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0],[0,-1,1,1,-1,0,1,1,-1,1,0,0,0,0,0,0,0,0],[-1,1,-1,-1,0,0,1,0,1,0,0,0,0,0,0,0,1,0],[-1,-1,1,1,-1,0,-1,1,1,0,0,0,0,0,1,0,0,0],[0,0,0,1,0,1,0,0,-1,0,0,0,0,1,0,0,0,0],[0,1,0,0,1,-1,0,0,0,1,0,1,1,0,0,1,1,1],[1,-1,-1,0,1,1,1,0,-1,0,0,0,1,0,0,0,0,0],[0,1,0,-1,-1,1,1,0,0,0,0,1,0,0,0,0,0,1],[-1,0,0,-1,0,0,1,0,1,0,1,1,0,1,1,0,1,0],[0,1,0,-1,1,1,-1,-1,1,1,0,0,0,0,0,0,0,0],[0,0,0,0,1,-1,1,-1,1,1,1,1,1,0,0,0,0,0],[0,-1,0,-1,0,0,1,1,0,0,0,0,0,0,0,0,0,1],[0,0,0,1,0,-1,1,0,0,1,0,0,0,0,0,0,0,0],[-1,1,1,0,1,0,0,0,-1,0,0,0,1,0,1,1,1,0],[1,1,0,0,0,-1,0,1,-1,0,0,1,0,0,0,0,0,0],[0,-1,0,1,0,1,1,-1,-1,0,0,0,0,1,0,0,0,0],[-1,-1,0,1,-1,0,1,1,0,0,0,1,0,0,0,0,0,1],[0,0,1,1,-1,-1,-1,1,0,1,1,0,0,0,0,0,0,1],[1,-1,0,1,0,0,-1,1,-1,0,0,1,0,0,0,0,0,0],[1,-1,1,1,0,1,0,-1,-1,0,0,0,0,1,0,1,0,0],[-1,1,0,-1,1,1,0,0,0,0,0,0,0,0,0,1,0,0],[0,0,1,1,0,0,-1,1,-1,0,1,0,0,1,0,0,0,0],[0,-1,0,1,-1,1,0,0,0,1,0,1,0,0,0,1,1,1],[-1,-1,1,1,1,-1,0,-1,1,0,0,0,0,0,0,1,0,0],[1,-1,1,-1,1,1,0,-1,0,0,0,0,0,0,0,1,0,1],[-1,1,-1,0,0,1,0,0,0,0,0,0,0,1,0,1,0,0],[0,1,0,1,0,-1,0,0,-1,1,0,1,0,1,0,1,1,0],[-1,0,-1,-1,1,1,1,1,0,0,1,0,0,0,0,0,0,0],[0,-1,-1,-1,1,1,0,1,0,1,0,0,0,0,0,0,0,0],[1,0,-1,0,1,-1,0,0,0,0,0,0,0,0,0,0,0,1],[-1,1,1,-1,0,0,1,-1,1,0,0,0,0,1,1,0,0,0],[1,1,0,0,-1,0,0,-1,1,0,0,1,0,0,0,0,0,0],[1,0,0,-1,1,1,0,-1,-1,0,0,0,0,0,0,1,0,0],[0,0,0,-1,0,1,-1,1,0,1,0,1,0,1,0,0,0,0],[1,0,0,-1,0,1,0,1,-1,0,1,1,0,1,0,0,0,0],[-1,1,1,-1,0,0,1,0,0,0,0,0,0,1,0,0,0,0],[-1,0,1,-1,1,0,0,0,1,0,0,0,0,0,0,1,0,0],[0,0,0,1,0,1,-1,0,0,0,0,0,0,1,0,0,0,0],[1,1,0,-1,0,0,0,0,0,0,0,1,0,1,1,1,1,1],[1,-1,-1,1,1,0,0,-1,0,0,0,0,0,0,1,1,0,1],[1,-1,-1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,1],[0,1,0,1,-1,0,-1,-1,1,0,0,1,0,0,0,0,0,0],[0,-1,1,-1,-1,0,0,1,1,0,0,0,0,0,1,0,0,0],[0,1,1,1,-1,1,0,-1,-1,1,0,0,0,0,0,1,0,0],[-1,0,0,1,-1,0,1,1,0,0,0,0,0,0,0,0,0,1],[0,0,0,0,-1,1,0,-1,1,0,1,1,0,0,0,0,0,0],[1,0,0,1,-1,0,-1,1,0,0,0,1,0,0,0,0,0,0],[-1,-1,0,1,0,1,0,1,-1,0,0,1,0,1,0,0,0,0],[-1,0,0,0,0,-1,0,1,1,0,0,0,0,0,0,1,0,0],[0,0,1,0,0,0,-1,0,1,1,1,0,1,1,1,0,1,0],[0,1,0,0,-1,0,0,1,0,1,0,1,1,0,1,1,0,1],[-1,-1,1,1,0,0,0,1,0,0,0,0,0,1,1,1,0,1],[1,-1,0,1,0,-1,0,-1,1,0,0,0,0,1,0,0,0,0],[0,1,-1,0,0,1,-1,1,-1,0,0,0,0,1,0,0,0,0],[-1,-1,1,-1,1,1,0,1,0,0,0,0,0,0,0,1,0,0],[1,1,0,1,1,-1,0,-1,-1,0,0,1,0,0,0,1,0,0],[1,1,0,0,0,-1,1,0,-1,0,0,1,0,0,0,0,0,0],[1,1,-1,0,-1,1,1,-1,0,0,0,0,1,0,0,0,0,0],[-1,1,1,0,-1,1,1,-1,0,0,0,0,0,0,0,0,0,1],[1,0,1,-1,1,-1,0,0,0,0,1,0,0,0,0,1,1,1],[-1,0,0,0,0,0,1,1,0,0,1,1,1,1,1,0,0,1],[0,0,0,-1,-1,1,1,0,0,0,1,1,0,0,0,0,1,1],[1,1,0,-1,1,0,-1,0,-1,0,0,0,0,0,0,0,1,0],[-1,1,0,1,-1,1,-1,0,1,0,0,1,0,0,0,0,0,0],[1,1,0,-1,0,1,0,-1,0,0,0,1,0,0,0,0,0,0],[1,0,0,-1,0,0,0,-1,1,0,0,0,0,1,0,0,0,0],[1,-1,1,0,1,-1,0,-1,0,0,0,0,1,0,0,1,0,1],[1,-1,1,0,-1,0,1,0,0,0,0,0,1,0,0,0,1,0],[1,0,1,-1,-1,1,1,-1,-1,0,1,0,0,0,0,0,0,0],[1,0,-1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1],[0,0,0,0,0,-1,-1,1,1,1,1,0,1,1,0,0,0,0],[0,0,-1,0,0,0,-1,1,1,1,1,0,1,1,0,0,0,0],[-1,1,-1,0,0,1,-1,1,1,0,0,0,1,1,0,0,0,0],[0,1,1,0,0,-1,-1,1,0,1,0,0,1,1,0,0,0,1],[-1,1,1,-1,0,1,0,0,0,0,0,0,0,0,0,1,0,1],[0,-1,0,0,0,1,1,-1,1,0,0,1,0,1,0,0,0,0],[-1,-1,0,1,-1,0,1,1,0,0,0,1,0,0,0,0,0,1],[1,1,-1,0,0,0,-1,0,1,0,0,0,0,1,0,0,0,0],[1,1,0,-1,1,-1,1,-1,-1,0,0,1,0,0,0,0,0,0],[1,1,0,-1,0,-1,-1,1,1,0,0,0,0,1,0,0,0,0],[1,0,0,0,-1,0,1,0,0,0,0,0,1,0,0,0,0,0],[-1,1,-1,-1,0,1,1,-1,1,0,0,0,0,1,0,0,0,0],[1,1,0,0,-1,-1,-1,0,1,0,0,1,1,0,0,0,0,0],[1,1,-1,1,1,0,-1,0,-1,0,0,0,0,0,1,0,1,0],[1,0,1,0,-1,0,1,-1,0,0,1,0,0,0,0,0,0,0],[-1,1,1,1,-1,0,-1,0,0,0,0,0,0,0,0,0,0,1],[0,-1,0,1,0,1,-1,0,1,1,0,1,0,1,0,0,1,0],[0,1,-1,-1,0,0,1,-1,1,1,0,0,0,1,1,0,0,0],[0,1,0,1,1,-1,-1,0,0,0,0,0,0,0,0,0,1,0],[0,1,0,-1,1,1,1,-1,-1,0,0,1,0,0,0,0,0,0],[-1,0,0,0,0,1,1,0,0,0,0,1,0,0,0,0,0,0],[-1,1,1,-1,0,1,0,0,0,0,0,0,0,0,0,1,0,1],[-1,1,1,-1,1,1,0,0,-1,0,0,0,0,0,0,1,0,0],[0,0,0,-1,-1,1,0,1,0,1,0,0,0,0,0,1,0,0],[0,1,0,0,-1,-1,0,1,0,1,0,1,1,0,0,1,0,1],[0,0,0,-1,1,0,1,0,0,1,1,1,0,0,1,0,1,1],[0,-1,1,0,0,0,-1,1,0,1,0,0,1,1,1,0,0,1],[0,-1,0,1,0,-1,1,0,0,1,0,0,0,0,0,0,0,0],[1,0,1,-1,1,1,0,-1,-1,0,0,0,0,0,0,1,0,0],[1,-1,1,-1,1,1,-1,0,0,0,0,0,0,0,0,0,0,1],[0,1,0,0,-1,1,1,-1,0,1,0,1,0,0,0,0,0,0],[0,1,-1,-1,0,0,0,1,1,1,0,0,0,1,1,1,0,0],[1,0,1,1,-1,0,-1,0,0,0,1,0,0,0,0,0,0,0],[1,0,1,1,1,-1,-1,0,-1,0,0,0,0,0,0,0,1,0],[1,0,1,-1,-1,1,0,0,-1,0,1,0,0,0,0,0,0,0],[0,1,-1,0,-1,0,1,-1,1,1,0,0,1,0,1,0,0,0],[-1,1,-1,1,-1,0,0,1,0,0,0,0,0,0,1,1,0,1],[1,0,1,-1,0,0,-1,-1,1,0,1,0,0,1,1,0,0,0],[1,-1,1,-1,0,0,1,1,-1,0,0,0,0,1,0,0,0,0],[0,0,1,-1,0,0,1,-1,1,1,1,0,0,1,1,0,0,0],[1,1,-1,-1,0,1,1,-1,0,0,0,0,0,1,0,0,0,1],[-1,1,-1,1,0,0,1,0,-1,0,0,0,0,1,1,0,1,0],[0,1,1,0,0,0,-1,-1,1,1,0,0,1,1,1,0,0,0],[0,0,-1,1,0,1,-1,1,-1,0,0,0,0,1,0,0,0,0],[0,0,0,-1,0,0,0,1,1,0,0,0,0,0,0,1,0,0],[0,1,-1,1,0,-1,0,0,1,1,0,0,0,1,0,1,1,0],[1,0,0,1,0,0,0,0,-1,0,0,0,0,0,0,1,0,0],[0,-1,0,0,1,1,0,0,0,1,0,1,1,0,0,1,1,1],[-1,0,1,-1,0,1,1,1,-1,0,0,0,0,1,0,0,0,0],[0,-1,1,0,1,-1,0,0,1,1,0,0,1,0,0,1,1,0],[0,0,1,1,-1,0,-1,0,1,0,0,0,0,0,1,0,0,0],[1,-1,0,0,1,0,0,1,-1,0,0,1,1,0,1,1,0,0],[0,0,1,1,0,-1,-1,1,0,1,1,0,0,1,0,0,0,0],[1,0,-1,0,-1,0,0,1,1,0,0,0,0,0,0,1,0,0],[0,0,0,0,0,1,1,0,-1,0,0,0,1,1,0,0,0,0],[-1,-1,0,1,0,1,1,0,-1,0,0,1,0,1,0,0,0,0],[1,0,-1,0,0,1,0,0,-1,0,0,0,0,0,0,1,0,0],[0,1,-1,1,-1,0,1,0,-1,1,0,0,0,0,1,0,0,0],[-1,-1,1,0,-1,1,1,0,0,0,0,0,0,0,0,0,1,1],[1,-1,1,0,-1,1,0,0,-1,0,0,0,0,0,0,0,1,0],[1,-1,1,-1,1,0,-1,1,0,0,0,0,0,0,0,0,0,1],[0,0,0,0,0,1,1,-1,0,0,0,0,0,1,0,0,0,0],[-1,0,0,1,0,1,0,0,-1,0,0,0,0,1,0,0,0,0],[0,1,1,0,0,0,0,-1,-1,1,0,0,0,0,0,1,0,0],[-1,1,0,-1,1,1,1,-1,-1,0,0,1,0,0,0,0,0,0],[1,0,0,1,1,-1,-1,0,0,0,0,0,0,0,0,0,0,1],[-1,-1,1,0,0,1,1,0,0,0,0,0,1,1,0,0,1,1],[1,-1,1,-1,-1,0,1,0,1,0,0,0,0,0,1,0,1,0],[0,0,-1,0,0,0,-1,1,1,1,1,0,1,1,0,0,0,0],[-1,-1,1,0,0,1,0,0,0,0,0,0,1,1,0,1,1,1],[-1,-1,1,0,0,1,-1,1,0,0,0,0,1,0,0,0,0,1],[1,0,0,-1,-1,1,-1,1,1,0,0,1,0,0,0,0,0,0],[1,0,-1,0,-1,1,1,0,-1,0,0,0,1,0,0,0,0,0],[0,0,0,-1,-1,1,1,1,-1,1,0,0,0,0,0,0,0,0],[0,1,0,-1,0,0,1,1,-1,0,0,0,0,1,0,0,0,0],[0,1,-1,0,1,1,0,-1,0,0,0,0,1,0,0,0,0,0],[1,-1,1,0,0,-1,1,0,0,0,0,0,1,1,0,0,1,1],[-1,1,0,1,0,1,0,-1,-1,0,0,0,0,1,0,1,0,0],[1,0,-1,1,1,-1,-1,0,0,0,0,0,0,0,0,0,0,1],[0,0,-1,0,1,0,1,0,0,1,0,0,0,0,0,0,0,1],[0,0,1,0,0,1,-1,-1,0,0,0,0,0,0,0,0,0,1],[-1,0,0,1,-1,0,1,-1,1,0,1,0,0,0,0,0,0,0],[-1,0,1,-1,1,0,0,1,0,0,0,0,0,0,0,1,0,0],[1,1,0,0,0,-1,0,0,0,0,0,1,0,0,0,0,0,0],[-1,-1,0,-1,1,1,1,0,1,0,0,1,0,0,0,0,0,0],[0,0,-1,-1,1,1,1,0,-1,1,1,0,0,0,0,0,1,0],[0,1,-1,-1,0,-1,1,0,1,0,0,0,0,1,0,0,0,0],[1,0,-1,1,0,0,-1,0,0,0,0,0,0,1,1,0,1,1],[0,0,0,0,1,1,-1,-1,1,1,1,1,1,0,0,0,0,0],[-1,1,0,0,1,1,-1,-1,1,0,0,0,1,0,0,0,0,0],[0,0,-1,0,1,1,0,0,0,0,0,0,1,0,0,0,0,0],[0,0,1,1,-1,1,0,0,-1,1,1,0,0,0,0,1,1,0],[0,1,1,0,-1,1,-1,1,-1,1,0,0,0,0,0,0,0,0],[-1,-1,0,0,1,0,0,1,1,0,0,1,0,0,0,1,0,0],[1,0,0,1,0,1,0,-1,-1,0,0,0,0,0,0,1,0,0],[0,-1,0,-1,1,1,0,1,-1,1,0,0,0,0,0,0,0,0],[0,0,-1,-1,1,0,1,1,0,1,1,0,0,0,1,0,0,1],[1,1,0,0,1,-1,-1,0,0,0,0,1,1,0,0,0,1,1],[-1,1,0,1,0,-1,0,-1,1,0,0,1,0,1,0,1,0,0],[-1,-1,0,1,1,0,0,0,0,0,0,1,0,0,0,0,0,0],[0,-1,1,-1,1,1,0,0,0,1,0,0,0,0,0,1,1,1],[0,1,0,-1,1,1,0,-1,0,0,0,0,0,0,0,1,0,0],[1,-1,1,0,1,-1,0,0,-1,0,0,0,0,0,0,1,0,0],[-1,-1,1,1,0,1,-1,0,0,0,0,0,0,1,0,0,1,1],[0,0,1,0,1,-1,0,1,-1,1,1,0,1,0,0,1,0,0],[-1,-1,1,1,-1,0,0,0,1,0,0,0,0,0,0,0,1,0],[0,1,-1,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0],[0,1,0,0,0,1,-1,0,0,1,0,0,0,0,0,0,0,1],[0,1,1,-1,-1,1,1,-1,0,1,0,0,0,0,0,0,0,1],[0,0,1,1,1,0,0,-1,-1,0,0,0,0,0,0,1,0,0],[-1,0,0,0,0,-1,1,1,0,0,0,0,0,0,0,0,0,1],[0,-1,0,-1,0,0,0,1,1,0,0,0,0,0,0,1,0,0],[1,0,-1,0,0,1,1,0,-1,0,0,0,1,0,0,0,0,0],[0,0,0,0,1,-1,0,-1,1,1,0,0,0,0,0,0,0,0],[-1,0,1,0,-1,-1,1,1,0,0,0,0,1,0,0,0,0,1],[1,0,0,0,-1,0,1,0,-1,0,0,0,1,0,0,0,0,0],[1,0,-1,0,1,1,0,0,-1,0,0,0,1,0,0,0,0,0],[0,0,0,-1,-1,1,1,1,0,0,0,0,0,0,0,0,0,1],[0,1,0,0,-1,0,1,-1,0,1,0,1,1,0,1,0,0,0],[1,1,-1,-1,0,0,1,1,-1,0,0,0,0,0,1,0,0,0],[0,0,1,0,-1,0,0,1,-1,1,0,0,1,0,1,0,0,0],[0,0,-1,1,0,1,0,0,0,0,0,0,0,1,0,0,0,0],[1,1,0,1,-1,-1,0,0,0,0,0,1,0,0,0,1,1,1],[1,1,0,0,-1,0,0,-1,1,0,0,1,0,0,0,0,0,0],[0,1,0,-1,1,0,-1,-1,1,1,0,0,0,0,0,0,0,0],[-1,0,0,1,1,-1,-1,0,1,0,1,1,0,0,0,0,1,0],[0,1,0,-1,0,0,1,0,-1,0,0,0,0,1,1,0,0,0],[-1,-1,0,1,-1,1,1,0,0,0,0,1,0,0,0,0,1,1],[1,1,-1,0,1,-1,0,-1,0,0,0,0,0,0,0,0,0,1],[0,1,-1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[-1,0,-1,-1,1,1,1,1,-1,0,1,0,0,0,0,0,0,0],[-1,-1,1,1,0,-1,1,-1,1,0,0,0,0,1,0,0,0,0],[0,0,-1,0,1,1,-1,-1,1,1,1,0,1,0,0,0,0,0],[0,-1,0,-1,0,1,1,-1,1,0,0,1,0,1,0,0,0,0],[-1,1,0,0,0,-1,0,1,1,0,0,1,1,1,0,1,0,0],[0,1,0,1,-1,1,0,-1,0,0,0,0,0,0,0,1,0,1],[0,-1,0,1,0,1,0,-1,0,0,0,0,0,1,0,0,0,0],[0,1,1,-1,-1,1,-1,1,0,1,0,0,0,0,0,0,0,0],[0,0,-1,0,1,-1,1,0,0,1,1,0,0,0,0,0,0,1],[1,1,-1,0,0,0,1,0,-1,0,0,0,0,0,1,0,0,0],[0,1,0,0,0,-1,-1,1,1,0,0,0,0,1,0,0,0,0],[1,-1,0,0,-1,1,1,0,0,0,0,0,0,0,0,0,1,0],[1,1,-1,1,-1,1,0,-1,0,0,0,0,0,0,0,1,0,0],[-1,1,0,-1,0,0,0,1,0,0,0,0,0,1,0,1,0,0],[1,-1,1,1,0,0,-1,-1,0,0,0,0,0,1,1,0,0,1],[0,0,0,0,-1,1,1,0,-1,1,1,0,0,0,0,0,1,0],[-1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0],[0,1,1,0,-1,0,-1,1,0,1,0,0,0,0,0,0,0,0],[0,0,1,-1,1,0,0,-1,1,1,1,0,0,0,1,1,0,0],[0,0,0,0,1,0,-1,1,0,0,1,0,0,0,0,0,0,0],[0,1,1,-1,0,0,-1,1,0,1,0,0,0,0,0,0,0,0],[-1,0,0,1,0,1,1,-1,-1,0,0,0,0,1,0,0,0,0],[1,0,0,1,1,-1,-1,0,-1,0,1,1,0,0,0,0,1,0],[0,0,-1,0,0,-1,1,0,1,1,1,0,1,1,0,0,1,0],[0,1,1,-1,1,-1,-1,-1,1,1,0,0,0,0,0,0,0,0],[1,0,0,-1,1,0,-1,0,0,0,0,0,0,0,0,0,0,1],[1,0,1,0,1,0,-1,0,-1,0,0,0,0,0,0,0,1,0],[0,-1,0,1,1,-1,1,1,-1,0,0,1,0,0,0,0,0,0],[0,0,0,-1,-1,1,1,0,1,1,1,1,0,0,0,0,1,0],[-1,-1,1,1,-1,1,0,0,0,0,0,0,0,0,0,0,1,1],[1,0,1,0,-1,1,0,-1,0,0,1,0,0,0,0,0,0,0],[1,0,-1,-1,0,0,0,1,0,0,0,0,0,1,1,0,0,0],[0,1,-1,1,0,-1,0,1,0,0,0,0,0,1,0,0,0,1],[-1,0,-1,1,0,1,1,1,-1,0,1,0,0,1,0,0,0,0],[0,0,1,0,1,-1,-1,1,0,0,1,0,0,0,0,0,0,0],[0,1,1,1,0,-1,0,-1,0,1,0,0,0,0,0,0,0,0],[0,0,1,1,0,-1,0,1,-1,1,1,0,0,1,0,1,0,0],[-1,-1,0,-1,1,1,0,1,1,0,0,1,0,0,0,1,0,0],[-1,0,0,-1,1,0,1,0,1,0,1,1,0,0,1,0,1,0],[1,0,0,0,1,0,0,0,-1,0,0,1,0,0,0,1,0,0],[0,1,-1,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0],[1,0,0,-1,0,0,1,-1,0,0,0,0,0,1,0,0,0,0],[-1,0,0,1,0,0,-1,0,1,0,0,1,0,0,0,0,0,0],[1,0,-1,0,1,1,-1,0,0,0,1,0,1,0,0,0,1,1],[0,1,0,-1,0,1,1,0,-1,0,0,1,0,1,0,0,0,0],[0,0,0,1,-1,0,-1,1,1,0,0,1,0,0,0,0,0,0],[0,0,1,0,-1,1,0,0,0,0,0,0,0,0,0,0,0,1],[1,1,-1,0,-1,0,1,0,0,0,0,0,1,0,0,0,0,0],[0,1,0,1,-1,-1,0,0,1,1,0,0,0,0,0,1,0,0],[1,1,-1,1,-1,0,0,1,-1,0,0,0,0,0,1,1,0,0],[1,0,1,-1,1,0,-1,1,-1,0,1,0,0,0,0,0,0,0],[1,-1,0,0,0,0,-1,1,1,0,0,0,0,1,0,0,0,0],[0,-1,-1,1,0,0,0,1,1,1,0,0,0,0,0,1,0,0],[1,1,0,-1,-1,0,-1,1,1,0,0,1,0,0,1,0,0,0],[1,0,1,-1,0,-1,0,0,1,0,0,0,0,1,0,0,0,0],[0,1,0,0,-1,0,0,-1,1,1,0,1,1,0,1,0,0,0],[1,0,0,1,-1,1,0,-1,0,0,1,0,0,0,0,1,0,0],[1,0,0,0,-1,1,-1,0,1,0,0,1,0,0,0,0,0,0],[-1,1,1,0,0,0,1,-1,0,0,0,0,0,1,0,0,0,0],[1,1,-1,-1,1,0,1,0,-1,0,0,0,0,0,1,0,0,0],[1,1,-1,0,-1,1,1,-1,-1,0,0,0,1,0,0,0,0,0],[0,0,1,0,-1,-1,1,0,1,0,0,0,1,0,0,0,1,0],[1,1,-1,1,0,0,0,0,-1,0,0,0,0,0,1,1,0,0],[0,1,0,-1,1,-1,0,0,1,1,0,1,0,0,0,1,1,0],[0,1,0,1,0,-1,0,1,-1,0,0,1,0,1,0,0,0,0],[-1,0,1,-1,0,-1,1,1,0,0,0,0,0,1,0,0,0,0],[1,-1,1,0,-1,0,1,0,-1,0,0,0,1,0,0,0,1,0],[0,1,-1,-1,0,1,0,0,0,0,0,0,0,0,0,1,0,0],[0,-1,0,0,0,0,-1,1,1,1,0,1,1,0,1,0,0,0],[1,-1,1,-1,0,1,0,1,-1,0,0,0,0,1,0,1,0,0],[0,0,1,-1,1,0,-1,1,0,1,0,0,0,0,0,0,0,0],[1,-1,0,0,0,1,1,-1,0,0,0,0,0,1,0,0,0,0],[-1,0,1,1,1,-1,0,-1,1,0,0,0,0,0,0,1,0,0],[-1,-1,0,1,1,-1,0,1,1,0,0,1,0,0,0,0,0,0],[0,1,-1,1,-1,0,0,-1,1,0,0,0,0,0,0,1,0,0],[-1,1,0,0,-1,-1,1,0,1,0,0,0,1,0,0,0,0,0],[1,0,0,-1,0,1,0,0,-1,0,1,1,0,1,0,1,1,0],[0,0,-1,-1,1,0,1,0,0,1,1,0,0,0,0,0,1,1],[-1,-1,0,1,0,0,1,-1,1,0,0,1,0,1,1,0,0,0],[1,1,0,1,1,-1,-1,0,-1,0,0,1,0,0,0,0,1,0],[1,0,1,1,-1,0,0,0,-1,0,1,0,0,0,1,1,1,0],[0,1,-1,0,0,0,1,0,0,0,0,0,0,1,0,0,1,1],[0,0,-1,-1,-1,1,0,1,1,0,0,0,0,0,0,1,0,0],[-1,1,1,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0],[1,1,0,-1,1,0,0,-1,0,0,0,1,0,0,1,1,0,1],[0,-1,0,1,0,-1,1,-1,1,1,0,0,0,1,0,0,0,0],[0,1,0,0,0,0,-1,0,1,1,0,0,0,0,0,0,0,0],[1,-1,-1,1,-1,1,0,1,-1,0,0,0,0,0,0,1,0,0],[0,1,-1,1,0,1,-1,-1,0,0,0,0,0,1,0,0,0,1],[0,0,0,1,1,-1,-1,1,0,0,1,0,0,0,0,0,0,0],[-1,1,0,1,1,0,1,-1,-1,0,0,1,0,0,1,0,0,0],[1,-1,-1,0,-1,1,1,0,1,0,0,0,0,0,0,0,1,0],[-1,1,-1,-1,1,0,1,0,0,0,0,0,0,0,0,0,1,0],[1,0,0,-1,1,0,0,0,0,0,1,1,0,0,1,1,1,1],[1,0,0,-1,1,1,-1,0,0,0,0,0,0,0,0,0,0,1],[-1,-1,1,1,-1,1,-1,1,0,0,0,0,0,0,0,0,0,1],[1,1,0,-1,-1,0,1,-1,1,0,0,0,0,0,1,0,0,0],[1,-1,0,0,-1,0,0,1,0,0,0,0,1,0,1,1,0,1],[1,-1,1,-1,0,-1,0,1,1,0,0,0,0,1,0,0,0,0],[0,-1,0,0,1,0,0,0,1,1,0,1,1,0,1,1,1,0],[-1,-1,0,0,1,0,0,0,1,0,0,1,1,0,0,1,0,0],[0,0,-1,0,1,1,-1,1,-1,1,1,0,1,0,0,0,0,0],[0,0,0,1,1,-1,1,-1,0,1,1,1,0,0,0,0,0,1],[-1,1,-1,-1,1,0,1,0,0,0,0,0,0,0,0,0,1,0],[-1,1,-1,0,0,-1,1,1,0,0,0,0,0,0,0,0,0,1],[1,-1,1,-1,1,-1,0,1,-1,0,0,0,0,0,0,1,0,0],[0,-1,1,0,-1,0,1,1,0,0,0,0,0,0,0,0,0,1],[-1,0,-1,1,-1,1,0,1,0,0,1,0,0,0,0,1,0,1],[-1,1,0,1,1,-1,0,0,0,0,0,0,0,0,0,0,1,0],[0,1,0,0,-1,1,0,0,0,1,0,1,0,0,0,0,0,1],[0,0,0,0,0,0,-1,1,1,1,0,0,1,0,0,0,0,0],[0,0,-1,1,0,1,-1,-1,1,0,0,0,0,1,0,0,0,0],[1,1,-1,0,0,-1,0,0,1,0,0,0,0,1,0,0,0,0],[-1,1,0,0,-1,1,0,0,1,0,0,1,0,0,0,0,0,0],[1,1,0,1,-1,-1,-1,1,0,0,0,1,0,0,0,0,0,0],[-1,1,0,0,-1,0,1,0,1,0,0,0,0,0,0,0,1,0],[0,1,-1,-1,1,1,1,-1,-1,1,0,0,0,0,0,0,0,0],[-1,-1,0,1,-1,1,1,1,0,0,0,1,0,0,0,0,0,1],[0,-1,1,1,1,-1,-1,0,1,1,0,0,0,0,0,0,0,0],[-1,0,0,0,1,1,0,1,-1,0,1,1,1,0,0,1,0,0],[0,0,1,0,0,-1,-1,1,1,0,0,0,1,0,0,0,0,0],[-1,1,-1,0,1,1,1,-1,-1,0,0,0,1,0,0,0,0,0],[0,1,-1,1,0,0,-1,-1,1,0,0,0,0,1,0,0,0,0],[1,0,0,-1,0,1,-1,-1,1,0,1,1,0,1,0,0,0,0],[0,0,-1,-1,1,1,0,0,1,1,0,0,0,0,0,0,0,0],[0,1,-1,-1,0,1,1,1,-1,0,0,0,0,1,0,0,0,0],[0,0,0,-1,1,0,-1,0,1,1,0,0,0,0,0,0,0,0],[-1,1,-1,-1,0,1,1,0,0,0,0,0,0,1,0,0,1,1],[-1,1,-1,1,-1,0,0,1,0,0,0,0,0,0,1,1,0,1],[1,-1,0,-1,1,1,0,-1,0,0,0,0,0,0,0,0,0,1],[0,0,-1,1,1,0,0,1,-1,0,0,0,0,0,1,0,0,0],[1,1,0,1,0,-1,-1,0,-1,0,0,1,0,0,0,0,1,0],[0,-1,1,0,0,1,1,0,-1,0,0,0,0,1,0,0,0,0],[1,-1,-1,1,0,-1,0,1,0,0,0,0,0,0,0,1,0,1],[0,0,-1,0,0,1,1,0,-1,1,0,0,0,0,0,0,0,0],[1,-1,1,0,1,-1,0,1,-1,0,0,0,0,0,0,1,0,0],[0,0,1,-1,1,-1,-1,1,1,1,0,0,0,0,0,0,0,0],[1,-1,1,1,1,0,-1,0,-1,0,0,0,0,0,0,0,1,0],[-1,1,-1,1,1,-1,1,-1,0,0,0,0,0,0,0,0,0,1],[1,0,0,1,0,-1,0,0,0,0,0,0,0,0,0,1,0,0],[0,0,1,0,0,1,-1,1,-1,1,0,0,0,0,0,0,0,0],[0,0,0,0,1,-1,1,0,0,1,1,1,1,0,0,0,1,1],[0,-1,0,0,1,-1,0,1,0,0,0,1,0,0,0,0,0,0],[1,1,-1,1,-1,-1,0,0,0,0,0,0,0,0,0,1,0,1],[0,-1,0,0,1,-1,1,1,0,1,0,1,1,0,0,0,0,1],[1,0,-1,1,-1,0,0,1,0,0,0,0,0,0,0,1,0,0],[0,0,1,1,0,-1,-1,0,0,1,1,0,0,1,0,0,1,1],[0,-1,-1,1,0,0,1,0,1,1,0,0,0,0,0,0,0,0],[-1,-1,1,-1,0,1,1,1,0,0,0,0,0,1,0,0,0,1],[0,1,0,-1,0,1,0,-1,1,0,0,1,0,0,0,0,0,0],[1,-1,0,-1,0,1,0,0,1,0,0,1,0,1,0,1,1,0],[0,1,-1,1,-1,-1,0,1,1,0,0,0,0,0,0,1,0,0],[1,1,-1,0,0,1,-1,1,-1,0,0,0,0,1,0,0,0,0],[0,-1,0,0,1,-1,0,1,1,1,0,1,1,0,0,1,0,0],[1,-1,-1,-1,1,1,1,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,1,-1,0,0,0,0,0,0,0,0,0,0,1],[-1,0,1,1,1,-1,-1,1,0,0,1,0,0,0,0,0,0,0],[0,-1,1,0,-1,-1,1,1,0,0,0,0,1,0,0,0,0,1],[-1,1,1,-1,1,1,0,-1,-1,0,0,0,0,0,0,1,0,0],[-1,0,-1,-1,1,1,1,1,0,0,1,0,0,0,0,0,0,0],[-1,1,-1,0,0,0,1,-1,1,0,0,0,1,1,1,0,0,0],[1,0,-1,1,-1,1,0,-1,0,0,1,0,0,0,0,1,0,0],[-1,1,0,0,0,-1,1,0,1,0,0,0,0,0,0,0,1,0],[0,0,0,-1,1,0,1,0,-1,0,0,1,0,0,0,0,0,0],[-1,1,1,0,-1,-1,1,0,0,0,0,0,1,0,0,0,1,1],[1,1,0,0,1,-1,1,-1,-1,0,0,1,0,0,0,0,0,0],[-1,1,-1,1,1,0,0,-1,1,0,0,0,0,0,1,0,0,0],[1,-1,0,0,0,1,-1,1,0,0,0,0,0,1,0,0,0,1],[1,-1,0,0,0,0,-1,1,0,0,0,1,1,1,1,0,0,1],[1,-1,1,0,-1,-1,1,0,1,0,0,0,1,0,0,0,1,0],[-1,0,1,1,-1,1,0,-1,0,0,1,0,0,0,0,0,0,1],[0,-1,-1,-1,1,1,1,1,-1,1,0,0,0,0,0,0,0,0],[0,-1,0,-1,1,1,-1,1,1,1,0,0,0,0,0,0,0,0],[-1,0,1,0,1,-1,0,-1,1,0,0,0,0,0,0,1,0,0],[0,1,0,0,0,1,1,-1,-1,1,0,1,1,1,0,0,0,0],[1,0,-1,1,0,0,0,-1,1,0,1,0,0,1,1,1,0,0],[0,0,0,1,0,-1,0,0,1,1,0,0,0,0,0,1,0,0],[0,0,-1,1,1,0,0,0,-1,0,0,0,0,0,1,0,0,0],[0,0,0,0,-1,1,1,-1,0,1,1,0,0,0,0,0,0,1],[0,0,0,1,-1,0,-1,1,1,0,0,1,0,0,0,0,0,0],[0,0,0,0,0,1,0,1,-1,0,1,0,1,1,0,0,0,0],[0,1,0,0,-1,1,-1,0,1,0,0,1,0,0,0,0,0,0],[0,1,0,-1,0,1,1,-1,-1,1,0,1,0,1,0,0,0,0],[-1,1,1,-1,0,0,1,0,0,0,0,0,0,1,0,0,0,0],[-1,1,0,1,0,0,-1,0,1,0,0,0,0,1,1,0,0,0],[1,0,1,-1,0,-1,0,-1,1,0,0,0,0,1,0,0,0,0],[0,-1,0,0,-1,1,1,0,1,0,0,0,0,0,0,0,1,0],[0,1,-1,0,1,1,-1,-1,1,1,0,0,1,0,0,0,0,0],[-1,0,1,0,0,0,0,0,1,0,1,0,1,1,1,1,1,0],[-1,0,1,1,-1,-1,0,0,1,0,1,0,0,0,0,1,1,0],[0,0,1,1,-1,0,-1,1,0,1,1,0,0,0,1,0,0,1],[0,0,1,1,0,0,-1,0,0,0,0,0,0,1,1,0,0,1],[-1,1,-1,-1,1,1,1,-1,0,0,0,0,0,0,0,0,0,1],[1,0,1,-1,0,0,0,1,-1,0,1,0,0,0,0,0,0,0],[0,0,0,0,1,-1,1,0,-1,0,0,1,0,0,0,0,0,0],[0,0,-1,1,-1,-1,1,0,1,1,1,0,0,0,0,0,1,0],[1,0,1,-1,-1,0,1,1,-1,0,0,0,0,0,1,0,0,0],[0,0,1,-1,0,1,-1,1,0,1,0,0,0,0,0,0,0,0],[-1,1,-1,-1,1,1,0,-1,1,0,0,0,0,0,0,1,0,0],[1,-1,0,1,0,-1,0,1,0,0,0,0,0,0,0,1,0,0],[1,0,-1,-1,0,1,1,-1,1,0,0,0,0,1,0,0,0,0],[1,-1,1,-1,-1,0,1,1,-1,0,0,0,0,0,1,0,0,0],[0,1,-1,1,-1,0,0,0,0,1,0,0,0,0,1,1,0,1],[0,0,0,0,1,1,1,-1,-1,1,1,1,1,0,0,0,0,0],[0,0,-1,1,-1,-1,0,1,1,0,0,0,0,0,0,1,0,0],[1,1,-1,0,1,0,1,-1,-1,0,0,0,0,0,1,0,0,0],[1,0,0,-1,1,1,-1,1,-1,0,1,0,0,0,0,0,0,0],[-1,1,-1,0,1,1,1,-1,-1,0,0,0,1,0,0,0,0,0],[0,0,0,-1,-1,0,1,0,1,0,0,0,0,0,1,0,1,0],[1,1,-1,0,1,1,-1,0,-1,0,0,0,0,0,0,0,1,0],[1,0,0,0,1,0,-1,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,-1,0,-1,0,1,1,0,0,0,0,1,0,0,0,0],[0,1,0,0,-1,-1,0,1,1,0,0,0,1,0,0,1,0,0],[1,0,0,0,-1,1,0,-1,1,0,1,1,0,0,0,0,0,0],[-1,0,1,-1,-1,1,0,1,0,0,0,0,0,0,0,1,0,1],[0,-1,0,1,0,0,1,-1,0,1,0,0,0,1,0,0,0,0],[0,0,-1,1,1,0,1,-1,0,1,1,0,0,0,1,0,0,1],[1,-1,1,0,1,1,-1,0,-1,0,0,0,0,0,0,0,1,0],[0,1,-1,0,1,0,0,0,-1,0,0,0,0,0,1,0,1,0],[1,0,0,0,-1,1,1,-1,0,0,1,0,0,0,0,0,0,0],[-1,0,0,1,0,0,1,-1,0,0,1,1,0,1,1,0,0,0],[0,1,1,0,0,0,1,-1,-1,1,0,0,1,1,1,0,0,0],[-1,1,0,-1,-1,1,1,-1,1,0,0,1,0,0,0,0,0,0],[0,1,0,0,0,1,0,-1,0,1,0,1,0,0,0,0,0,0],[-1,-1,1,1,-1,1,1,0,0,0,0,0,0,0,0,0,1,1],[1,-1,0,1,-1,1,-1,0,0,0,0,1,0,0,0,0,1,1],[-1,-1,1,0,1,0,-1,1,1,0,0,0,1,0,0,0,0,0],[1,0,1,-1,-1,0,0,1,0,0,0,0,0,0,1,0,0,0],[1,0,-1,-1,1,0,1,-1,0,0,0,0,0,0,0,0,0,1],[1,-1,1,-1,-1,0,-1,1,1,0,0,0,0,0,1,0,0,0],[1,0,0,0,0,0,1,0,-1,0,1,1,1,1,1,0,1,0],[0,0,-1,1,1,0,0,-1,1,1,1,0,0,0,1,1,0,0],[-1,0,0,1,0,0,1,-1,1,0,1,0,0,0,0,0,0,0],[1,1,-1,-1,1,1,-1,0,-1,0,0,0,0,0,0,0,1,0],[0,1,-1,1,0,0,-1,1,0,0,0,0,0,1,0,0,0,0],[1,-1,1,1,1,-1,0,0,-1,0,0,0,0,0,0,1,0,0],[-1,0,0,0,1,0,1,-1,1,0,0,1,0,0,0,0,0,0],[0,1,-1,1,1,0,0,-1,0,0,0,0,0,0,1,0,0,0],[1,0,0,1,1,-1,-1,0,0,0,0,0,0,0,0,0,0,1],[-1,0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,0],[-1,1,-1,0,1,1,-1,0,0,0,0,0,1,0,0,0,0,0],[0,0,0,1,-1,0,1,1,-1,1,0,0,0,0,0,0,0,0],[0,-1,0,1,-1,1,0,1,-1,1,0,1,0,0,0,1,0,0],[0,0,1,0,1,0,0,-1,-1,0,0,0,0,0,0,1,0,0],[-1,-1,0,0,0,0,1,1,0,0,0,1,0,0,0,0,0,1],[1,1,0,-1,0,1,-1,0,0,0,0,1,0,1,0,0,1,1],[0,0,-1,1,0,1,0,0,-1,0,0,0,0,1,0,0,0,0],[-1,-1,0,1,0,1,1,0,0,0,0,1,0,1,0,0,0,0],[0,1,0,-1,0,0,1,1,-1,0,0,0,0,1,0,0,0,0],[0,-1,0,1,0,-1,0,1,0,0,0,1,0,0,0,0,0,0],[1,1,-1,-1,0,0,1,-1,1,0,0,0,0,1,0,0,0,0],[1,1,0,-1,0,0,1,0,-1,0,0,1,0,0,0,0,0,0],[1,-1,1,-1,0,1,1,-1,0,0,0,0,0,1,0,0,0,0],[0,0,0,-1,1,1,1,0,-1,0,0,1,0,0,0,0,0,0],[1,0,1,-1,0,0,0,-1,0,0,1,0,0,1,1,1,0,1],[1,-1,1,1,0,1,-1,-1,0,0,0,0,0,1,0,0,0,1],[0,0,-1,1,0,0,1,0,0,1,0,0,0,0,0,0,0,0],[-1,1,1,1,-1,-1,1,-1,0,0,0,0,0,0,0,0,0,1],[1,1,-1,-1,-1,1,1,0,0,0,0,0,0,0,0,0,1,1],[1,-1,0,-1,0,1,0,0,0,0,0,1,0,1,0,0,1,1],[0,1,1,-1,1,0,-1,0,-1,1,0,0,0,0,0,0,1,0],[1,-1,0,1,-1,1,0,0,0,0,0,0,0,0,0,1,1,0],[0,1,1,0,0,0,-1,-1,1,1,0,0,1,1,1,0,0,0],[0,0,-1,1,-1,0,1,0,0,1,0,0,0,0,0,0,0,0],[0,1,-1,-1,0,1,1,-1,0,1,0,0,0,1,0,0,0,1],[1,1,-1,1,0,0,0,0,-1,0,0,0,0,0,1,1,0,0],[1,1,0,1,-1,0,-1,0,-1,0,0,1,0,0,0,0,1,0],[1,0,-1,0,0,0,1,0,0,0,1,0,1,1,1,0,1,1],[-1,1,0,1,-1,-1,1,1,0,0,0,0,0,0,0,0,0,1],[-1,1,1,0,1,-1,0,0,-1,0,0,0,1,0,0,1,1,0],[1,0,1,-1,-1,0,-1,0,1,0,0,0,0,0,1,0,0,0],[-1,1,1,-1,-1,0,1,1,0,0,0,0,0,0,1,0,0,1],[1,0,1,0,1,0,-1,-1,0,0,0,0,0,0,0,0,0,1],[-1,1,1,0,0,-1,-1,1,0,0,0,0,1,1,0,0,0,0],[0,0,1,-1,-1,1,0,1,0,0,0,0,0,0,0,0,0,1],[1,0,1,1,0,0,-1,-1,0,0,1,0,0,0,0,0,0,1],[-1,0,1,1,1,0,0,0,-1,0,1,0,0,0,1,1,1,0],[-1,1,1,-1,0,-1,1,1,-1,0,0,0,0,1,0,0,0,0],[0,1,1,1,-1,-1,0,1,-1,1,0,0,0,0,0,0,0,0],[-1,1,0,1,-1,0,0,0,1,0,0,1,0,0,1,1,1,0],[1,-1,0,1,0,1,0,0,-1,0,0,1,0,1,0,1,1,0],[0,-1,0,0,1,1,1,0,-1,1,0,1,1,0,0,0,1,0],[0,1,-1,1,0,1,0,-1,0,0,0,0,0,1,0,0,0,0],[-1,0,0,-1,1,0,0,1,1,0,0,0,0,0,0,1,0,0],[0,1,-1,1,0,1,-1,0,0,0,0,0,0,1,0,0,0,0],[1,0,1,1,-1,1,-1,-1,0,0,1,0,0,0,0,0,0,1],[-1,-1,1,1,1,-1,0,1,0,0,0,0,0,0,0,1,0,0],[0,0,0,0,1,0,-1,0,1,1,0,0,0,0,0,0,0,0],[-1,-1,1,1,0,-1,0,1,1,0,0,0,0,0,0,1,0,0],[0,0,-1,0,1,0,-1,1,0,0,1,0,0,0,0,0,0,0],[1,-1,-1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1],[0,0,0,-1,-1,1,-1,1,1,1,0,1,0,0,0,0,0,0],[1,1,-1,0,0,-1,1,-1,1,0,0,0,1,1,0,0,0,0],[1,-1,1,0,0,-1,0,0,1,0,0,0,0,1,0,0,0,0],[-1,-1,0,1,0,1,1,-1,0,0,0,1,0,1,0,0,0,0],[0,0,1,-1,-1,0,0,1,1,0,0,0,0,0,1,0,0,0],[0,0,1,1,0,-1,-1,0,1,1,1,0,0,1,0,0,0,0],[-1,0,1,0,0,-1,1,1,0,0,1,0,1,1,0,0,0,1],[0,0,-1,0,1,0,-1,1,0,0,1,0,0,0,0,0,0,0],[-1,-1,0,0,1,1,-1,0,1,0,0,1,1,0,0,0,0,0],[-1,1,0,0,0,1,-1,0,1,0,0,1,1,0,0,0,0,0],[1,0,-1,1,1,0,0,-1,0,0,1,0,0,0,1,1,0,1],[-1,0,1,0,-1,0,0,1,1,0,1,0,1,0,1,1,0,0],[-1,1,1,0,-1,0,-1,1,1,0,0,0,1,0,0,0,0,0],[0,-1,-1,1,0,1,0,0,0,1,0,0,0,1,0,0,0,0],[0,0,1,0,-1,1,0,1,-1,1,0,0,0,0,0,0,0,0],[0,1,-1,-1,0,1,1,-1,1,1,0,0,0,1,0,0,0,0],[0,0,0,0,0,1,0,1,-1,0,1,0,1,1,0,0,0,0],[1,-1,0,1,1,0,-1,1,-1,0,0,0,0,0,1,0,0,0],[1,0,1,1,0,-1,-1,-1,1,0,1,0,0,1,0,0,0,0],[0,1,1,0,-1,1,-1,0,0,1,0,0,1,0,0,0,1,1],[1,1,-1,0,-1,1,1,-1,0,0,0,0,1,0,0,0,0,0],[1,-1,0,-1,1,1,0,1,-1,0,0,1,0,0,0,1,0,0],[1,1,-1,0,0,1,1,-1,-1,0,0,0,1,0,0,0,0,0],[1,0,-1,1,0,-1,-1,1,0,0,1,0,0,1,0,0,0,1],[-1,1,0,0,1,1,-1,-1,0,0,0,0,1,0,0,0,0,1],[-1,1,-1,0,0,-1,0,1,1,0,0,0,1,1,0,1,0,0],[-1,0,1,-1,0,0,1,1,0,0,1,0,0,1,1,0,0,1],[0,0,1,1,-1,0,0,-1,1,0,1,0,0,0,0,0,0,0],[1,1,-1,0,-1,0,1,1,-1,0,0,0,0,0,1,0,0,0],[-1,0,-1,1,-1,1,0,1,1,0,1,0,0,0,0,1,0,0],[1,1,0,1,0,-1,-1,-1,0,0,0,1,0,0,0,0,0,1],[-1,0,0,1,-1,-1,1,0,1,0,0,0,0,0,0,0,1,0],[1,-1,1,1,-1,-1,0,0,0,0,0,0,0,0,0,0,1,0],[0,0,1,1,0,-1,-1,1,0,1,1,0,0,1,0,0,0,0],[0,-1,0,0,0,1,-1,0,1,0,0,1,0,0,0,0,0,0],[0,0,-1,-1,0,1,1,0,1,0,0,0,0,0,0,0,1,0],[1,-1,-1,1,0,-1,0,1,1,0,0,0,0,1,0,1,0,0],[0,-1,-1,1,1,0,1,-1,1,1,0,0,0,0,0,0,0,0],[1,1,-1,-1,0,1,-1,1,0,0,0,0,0,1,0,0,0,0],[0,-1,-1,0,0,1,1,1,0,1,0,0,0,0,0,0,0,0],[1,0,-1,1,0,0,-1,0,1,0,0,0,0,1,0,0,0,0],[0,0,1,1,-1,-1,1,1,-1,1,0,0,0,0,0,0,0,0],[-1,0,1,1,-1,0,0,1,0,0,0,0,0,0,0,0,0,1],[1,0,0,-1,-1,0,1,0,1,0,0,0,0,0,1,0,1,0],[-1,0,-1,1,1,0,-1,1,0,0,1,0,0,0,0,0,0,0],[-1,0,-1,1,0,1,1,0,-1,0,1,0,0,1,0,0,0,0],[1,1,-1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1],[0,-1,0,1,-1,0,1,0,1,0,0,0,0,0,0,0,1,0],[-1,1,1,1,-1,-1,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,-1,0,-1,0,1,1,0,0,0,0,1,0,0,0,0],[0,0,-1,1,1,-1,-1,0,1,1,0,0,0,0,0,0,0,0],[-1,-1,0,-1,1,0,1,0,1,0,0,1,0,0,0,0,0,0],[-1,1,1,1,0,0,0,-1,-1,0,0,0,0,1,1,1,0,0],[0,-1,0,1,1,0,0,0,0,1,0,1,0,0,1,1,1,1],[0,1,-1,1,1,-1,0,-1,1,1,0,0,0,0,0,0,0,0],[0,-1,-1,-1,1,0,1,1,0,1,0,0,0,0,0,0,0,1],[0,1,-1,0,1,0,-1,0,1,1,0,0,1,0,1,0,1,0],[1,-1,1,0,0,0,1,0,-1,0,0,0,1,1,1,0,1,0],[1,0,-1,-1,0,-1,0,1,1,0,0,0,0,1,0,0,0,0],[1,1,0,1,-1,-1,0,0,-1,0,0,1,0,0,0,0,0,0],[1,-1,1,1,1,-1,-1,0,0,0,0,0,0,0,0,0,0,1],[1,1,0,1,0,-1,-1,0,0,0,0,1,0,0,0,0,0,0],[-1,1,1,1,0,-1,-1,0,0,0,0,0,0,0,0,0,0,1],[-1,0,1,1,-1,0,-1,0,1,0,0,0,0,0,1,0,0,0],[1,1,-1,0,1,0,0,0,-1,0,0,0,0,0,1,0,1,0],[0,0,0,0,-1,1,1,-1,1,0,1,0,0,0,0,0,0,0],[0,1,1,-1,-1,0,0,0,1,0,0,0,0,0,1,0,0,0],[0,0,0,0,-1,1,-1,0,1,0,0,1,0,0,0,0,0,0],[-1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,1,1,0],[-1,-1,1,1,0,1,-1,1,0,0,0,0,0,1,0,0,0,1],[0,0,1,0,-1,0,1,1,-1,1,0,0,1,0,1,0,0,0],[-1,-1,1,0,1,0,0,0,1,0,0,0,1,0,1,1,1,0],[-1,-1,0,1,0,1,1,-1,1,0,0,1,0,1,0,0,0,0],[1,0,-1,1,0,-1,0,0,1,0,1,0,0,1,0,1,1,0],[0,1,1,-1,1,0,-1,0,-1,1,0,0,0,0,0,0,1,0],[1,-1,-1,-1,0,0,0,1,1,0,0,0,0,1,1,1,0,0],[0,-1,0,1,1,0,1,-1,0,1,0,1,0,0,1,0,0,1],[-1,1,-1,1,1,0,0,0,0,0,0,0,0,0,1,1,1,1],[-1,-1,1,1,-1,1,0,1,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,1,-1,-1,0,0,0,0,0,0,0,0,0,0,1],[-1,1,0,-1,-1,1,0,1,0,0,0,1,0,0,0,1,0,1],[-1,0,1,0,1,-1,0,-1,1,0,0,0,0,0,0,1,0,0],[0,1,1,-1,0,1,-1,-1,0,1,0,0,0,0,0,0,0,1],[0,1,0,-1,-1,0,1,0,0,1,0,0,0,0,1,0,0,1],[0,1,-1,0,-1,1,1,-1,0,1,0,0,1,0,0,0,0,1],[0,1,0,0,-1,-1,0,0,1,0,0,1,1,0,0,1,0,0],[-1,1,1,1,0,-1,-1,1,-1,0,0,0,0,1,0,0,0,0],[0,0,0,0,1,-1,1,1,-1,0,0,1,0,0,0,0,0,0],[0,1,0,-1,1,1,1,-1,-1,0,0,1,0,0,0,0,0,0],[1,0,0,1,-1,-1,0,1,0,0,0,0,0,0,0,1,0,0],[-1,1,0,0,1,1,0,0,-1,0,0,1,1,0,0,1,1,0],[0,1,-1,1,-1,1,0,-1,1,0,0,0,0,0,0,1,0,0],[0,1,-1,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0],[0,1,0,0,0,-1,0,1,0,0,0,0,0,1,0,0,0,0],[1,-1,1,0,-1,0,0,0,0,0,0,0,1,0,1,0,1,0],[0,1,0,-1,1,1,0,0,-1,0,0,0,0,0,0,0,1,0],[1,-1,1,0,0,1,-1,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,1,1,-1,-1,0,0,0,0,0,0,0,0,0,1],[0,1,1,0,-1,-1,1,1,-1,1,0,0,1,0,0,0,0,0],[0,-1,1,1,-1,0,0,1,0,0,0,0,0,0,0,1,0,1],[0,1,0,-1,0,-1,0,0,1,1,0,0,0,1,0,1,0,0],[1,1,-1,0,1,0,-1,-1,0,0,0,0,0,0,0,0,0,1],[-1,0,0,1,0,1,1,-1,0,0,0,0,0,1,0,0,0,0],[-1,0,0,1,1,0,-1,-1,1,0,0,0,0,0,1,0,0,0],[-1,1,-1,0,1,0,1,-1,0,0,0,0,1,0,1,0,0,1],[0,0,1,0,-1,-1,0,1,1,0,0,0,1,0,0,0,0,0],[1,-1,0,1,0,1,0,-1,0,0,0,0,0,1,0,0,0,0],[-1,1,1,0,-1,0,1,0,0,0,0,0,1,0,1,0,0,1],[0,-1,1,0,1,-1,0,-1,1,1,0,0,1,0,0,1,0,0],[1,0,1,-1,1,-1,-1,1,-1,0,1,0,0,0,0,0,0,0],[1,-1,0,0,-1,1,1,0,0,0,0,0,0,0,0,0,1,0],[1,-1,1,1,0,-1,-1,0,1,0,0,0,0,1,0,0,0,0],[1,1,-1,1,0,-1,0,0,0,0,0,0,0,0,0,1,0,1],[1,1,0,-1,0,-1,0,1,0,0,0,0,0,1,0,0,0,0],[1,1,-1,0,0,-1,1,-1,0,0,0,0,1,0,0,0,0,1],[0,0,0,1,1,0,0,0,-1,0,0,0,0,0,1,0,0,0],[0,1,1,-1,-1,0,1,-1,1,0,0,0,0,0,1,0,0,0],[1,-1,-1,1,0,-1,-1,1,1,0,0,0,0,1,0,0,0,0],[0,1,1,0,1,-1,0,-1,0,1,0,0,1,0,0,1,0,1],[1,-1,1,0,1,0,-1,1,-1,0,0,0,1,0,1,0,0,0],[0,-1,1,-1,0,1,1,0,-1,0,0,0,0,1,0,0,0,0],[-1,-1,1,1,1,-1,-1,0,1,0,0,0,0,0,0,0,1,0],[-1,1,1,0,0,1,-1,-1,0,0,0,0,1,0,0,0,0,1],[-1,1,-1,0,1,-1,0,0,1,0,0,0,0,0,0,0,1,0],[0,0,1,1,0,1,-1,-1,0,0,0,0,0,0,0,0,0,1],[0,0,1,1,-1,-1,0,-1,1,0,1,0,0,0,0,0,0,0],[-1,-1,1,0,0,0,1,-1,1,0,0,0,0,1,0,0,0,0],[0,1,-1,0,0,0,0,-1,1,1,0,0,1,1,1,1,0,0],[0,1,-1,-1,0,0,0,0,1,0,0,0,0,1,0,1,0,0],[0,-1,0,0,1,-1,1,0,1,1,0,1,1,0,0,0,1,0],[-1,0,0,0,1,1,0,-1,1,0,1,1,1,0,0,1,0,0],[1,-1,-1,1,-1,0,0,1,0,0,0,0,0,0,0,1,0,0],[-1,0,0,1,1,-1,-1,1,1,0,1,0,0,0,0,0,0,0],[-1,1,1,0,-1,0,0,-1,1,0,0,0,0,0,1,0,0,0],[0,0,1,0,-1,0,1,0,0,0,1,0,1,0,1,0,1,0],[1,0,1,-1,-1,0,1,-1,0,0,1,0,0,0,1,0,0,0],[0,0,1,0,0,-1,-1,1,1,0,0,0,1,0,0,0,0,0],[1,1,-1,-1,0,1,-1,1,0,0,0,0,0,1,0,0,0,0],[-1,1,-1,1,0,-1,0,0,1,0,0,0,0,1,0,1,1,0],[0,-1,-1,0,1,1,-1,1,0,1,0,0,0,0,0,0,0,0],[-1,1,-1,0,1,1,1,-1,0,0,0,0,1,0,0,0,0,0],[0,0,1,1,1,0,-1,-1,0,0,0,0,0,0,0,0,0,1],[-1,-1,0,0,0,1,0,0,1,0,0,1,0,0,0,0,0,0],[-1,1,0,-1,-1,1,1,0,1,0,0,1,0,0,0,0,1,0],[1,0,0,1,1,0,0,-1,-1,0,0,0,0,0,0,1,0,0],[-1,-1,1,0,0,0,1,1,-1,0,0,0,0,1,0,0,0,0],[0,0,1,-1,0,1,1,-1,-1,0,0,0,0,1,0,0,0,0],[0,-1,0,1,1,-1,-1,1,1,1,0,0,0,0,0,0,0,0],[1,-1,1,0,1,0,0,-1,-1,0,0,0,0,0,0,1,0,0],[-1,1,-1,1,0,0,-1,1,1,0,0,0,0,1,0,0,0,0],[1,0,0,0,1,-1,1,0,-1,0,0,1,0,0,0,0,0,0],[1,-1,1,0,1,-1,0,-1,0,0,0,0,1,0,0,1,0,1],[-1,1,1,1,0,-1,1,-1,0,0,0,0,0,1,0,0,0,0],[0,1,-1,1,1,0,1,-1,-1,0,0,0,0,0,1,0,0,0],[0,1,-1,1,1,0,1,-1,-1,0,0,0,0,0,1,0,0,0],[-1,1,-1,1,-1,-1,0,1,1,0,0,0,0,0,0,1,0,0],[-1,-1,0,0,0,1,0,1,0,0,0,1,1,1,0,1,0,1],[-1,0,0,1,0,1,-1,-1,1,0,1,1,0,1,0,0,0,0],[0,1,1,-1,1,-1,-1,0,1,1,0,0,0,0,0,0,0,0],[-1,0,0,1,1,0,0,0,0,0,0,0,0,0,1,0,0,0],[1,1,-1,1,-1,-1,0,-1,1,0,0,0,0,0,0,1,0,0],[-1,1,0,1,0,0,0,-1,0,0,0,0,0,0,0,0,0,1],[0,0,0,-1,-1,1,1,1,0,0,0,0,0,0,0,0,0,1],[0,0,0,-1,1,0,0,0,1,1,1,1,0,0,1,1,1,0],[-1,1,1,0,0,-1,-1,0,1,0,0,0,1,0,0,0,0,0],[-1,1,-1,1,0,-1,0,1,1,0,0,0,0,1,0,1,0,0],[0,1,0,0,-1,1,0,0,-1,1,0,1,0,0,0,1,1,0],[1,-1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0],[0,0,1,-1,0,0,1,1,-1,0,0,0,0,1,0,0,0,0],[-1,-1,1,-1,0,1,1,0,0,0,0,0,0,1,0,0,1,1],[0,0,0,1,1,0,-1,1,-1,1,1,1,0,0,1,0,0,0],[-1,0,1,0,0,0,1,1,-1,0,0,0,0,1,0,0,0,0],[1,0,-1,-1,0,0,1,1,0,0,0,0,0,0,0,0,0,1],[1,1,-1,-1,0,-1,0,1,1,0,0,0,0,1,0,0,0,0],[0,0,1,-1,0,0,0,1,0,0,0,0,0,1,0,0,0,0],[1,-1,0,1,-1,1,0,1,-1,0,0,0,0,0,0,1,0,0],[1,0,0,-1,-1,0,0,1,1,0,0,0,0,0,1,1,0,0],[1,0,0,-1,0,0,0,1,-1,0,0,0,0,0,1,0,0,0],[0,-1,0,1,0,1,0,1,-1,0,0,0,0,1,0,0,0,0],[-1,1,0,0,1,1,1,-1,-1,0,0,1,1,0,0,0,0,0],[0,-1,0,1,0,-1,1,1,0,1,0,1,0,1,0,0,0,1],[0,0,1,-1,0,-1,-1,1,1,1,1,0,0,1,0,0,0,0],[0,0,0,0,1,-1,0,0,1,1,1,1,1,0,0,1,1,0],[-1,1,-1,0,1,1,-1,0,0,0,0,0,1,0,0,0,0,0],[1,0,1,-1,0,-1,0,-1,1,0,0,0,0,1,0,0,0,0],[0,1,0,-1,0,0,-1,0,1,1,0,1,0,1,1,0,0,0],[0,1,-1,-1,1,1,0,0,-1,0,0,0,0,0,0,0,1,0],[1,-1,-1,0,1,1,0,1,-1,0,0,0,1,0,0,0,0,0],[0,-1,0,1,0,1,-1,-1,1,0,0,0,0,1,0,0,0,0],[-1,1,0,0,-1,-1,1,1,0,0,0,0,1,0,0,0,0,1],[1,0,1,1,-1,-1,-1,0,1,0,1,0,0,0,0,0,0,0],[0,1,0,0,1,-1,-1,0,0,0,0,0,0,0,0,0,1,0],[1,0,0,1,-1,1,0,-1,-1,0,1,0,0,0,0,1,0,0],[0,1,0,-1,0,-1,1,0,1,0,0,0,0,1,0,0,0,0],[-1,1,0,1,1,0,-1,-1,1,0,0,0,0,0,1,0,0,0],[1,0,0,0,0,1,-1,1,-1,0,1,0,0,1,0,0,0,0],[1,-1,-1,0,1,1,-1,1,0,0,0,0,1,0,0,0,0,1],[1,0,1,0,-1,1,0,-1,-1,0,1,0,0,0,0,1,0,0],[1,1,0,1,0,0,0,-1,-1,0,0,0,0,0,0,1,0,0],[-1,1,0,0,1,0,0,0,-1,0,0,0,0,0,0,0,1,0],[-1,0,1,-1,-1,1,1,1,0,0,0,0,0,0,0,0,0,1],[1,1,-1,1,-1,-1,0,0,1,0,0,0,0,0,0,1,0,0],[-1,0,1,-1,0,1,1,0,0,0,1,0,0,1,0,0,1,1],[1,-1,0,1,1,0,-1,-1,0,0,0,0,0,0,0,0,0,1],[0,-1,-1,1,0,1,-1,1,0,1,0,0,0,1,0,0,0,0],[0,0,0,0,1,-1,1,0,0,1,1,1,1,0,0,0,1,1],[0,-1,0,-1,1,0,1,0,1,1,0,1,0,0,1,0,1,0],[0,1,-1,1,-1,1,1,-1,-1,1,0,0,0,0,0,0,0,0],[0,-1,0,-1,1,1,1,-1,1,1,0,1,0,0,0,0,0,0],[1,0,0,0,-1,-1,1,1,-1,0,0,1,1,0,0,0,0,0],[0,-1,-1,0,1,0,0,0,1,1,0,0,0,0,0,0,0,0],[-1,1,-1,0,1,1,0,-1,1,0,0,0,1,0,0,0,0,0],[0,0,-1,1,0,-1,0,1,1,1,1,0,0,1,0,1,0,0],[1,1,0,-1,0,0,0,0,-1,0,0,1,0,0,0,0,0,0],[1,0,-1,-1,0,1,-1,0,1,0,0,0,0,1,0,0,0,0],[0,-1,-1,0,1,0,-1,1,1,1,0,0,0,0,0,0,0,0],[1,0,1,-1,0,1,0,-1,0,0,1,0,0,1,0,1,0,1],[0,1,-1,-1,0,1,1,1,-1,0,0,0,0,1,0,0,0,0],[0,0,-1,1,1,0,-1,0,1,1,1,0,0,0,1,0,1,0],[-1,1,-1,0,1,0,1,0,-1,0,0,0,0,0,1,0,0,0],[0,0,1,-1,0,-1,0,1,0,1,0,0,0,1,0,1,0,0],[-1,0,0,1,0,0,1,1,-1,0,1,1,0,1,1,0,0,0],[1,1,-1,0,1,0,0,0,-1,0,0,0,0,0,1,0,1,0],[-1,1,0,0,-1,0,0,0,1,0,0,0,1,0,0,1,0,0],[1,0,1,1,1,-1,-1,-1,0,0,0,0,0,0,0,0,0,1],[1,0,1,0,0,0,0,0,-1,0,1,0,1,1,1,1,1,0],[1,0,1,0,0,-1,-1,0,1,0,1,0,1,1,0,0,1,0],[-1,-1,1,1,0,0,1,0,0,0,0,0,0,1,0,0,0,0],[-1,1,1,1,1,-1,-1,-1,0,0,0,0,0,0,0,0,0,1],[0,0,0,-1,1,0,-1,1,0,1,0,0,0,0,0,0,0,0],[1,0,0,-1,0,1,-1,1,-1,0,1,1,0,1,0,0,0,0],[0,1,0,0,0,-1,0,0,1,0,0,0,0,1,0,0,0,0],[0,0,-1,1,1,0,-1,-1,1,1,1,0,0,0,1,0,0,0],[0,0,0,0,1,0,0,-1,1,1,1,1,1,0,1,1,0,0],[0,1,1,-1,0,0,0,-1,1,1,0,0,0,1,1,1,0,0],[1,1,-1,-1,0,0,1,1,-1,0,0,0,0,0,1,0,0,0],[0,1,-1,-1,0,1,-1,1,1,1,0,0,0,1,0,0,0,0],[-1,1,0,0,0,-1,1,0,0,0,0,0,0,1,0,0,0,1],[0,-1,0,0,1,0,1,-1,0,1,0,1,1,0,1,0,0,1],[1,0,-1,0,0,1,-1,1,0,0,0,0,0,1,0,0,0,0],[-1,0,0,-1,1,1,0,-1,1,0,0,1,0,0,0,1,0,0],[0,0,1,1,0,-1,-1,0,0,1,1,0,0,1,0,0,1,1],[0,0,0,0,1,0,-1,0,1,1,0,0,0,0,0,0,0,0],[-1,1,-1,0,1,1,0,-1,0,0,0,0,1,0,0,0,0,0],[-1,0,-1,1,1,0,1,-1,0,0,1,0,0,0,1,0,0,0],[0,0,0,1,1,-1,1,0,-1,0,0,1,0,0,0,0,0,0],[0,1,1,1,0,-1,-1,1,-1,1,0,0,0,1,0,0,0,0],[-1,-1,1,1,0,1,1,0,-1,0,0,0,0,1,0,0,0,0],[1,0,0,-1,0,0,0,1,0,0,0,0,0,1,0,0,0,0],[0,-1,0,1,0,1,1,-1,0,0,0,0,0,1,0,0,0,0],[0,0,1,-1,1,0,0,-1,1,1,1,0,0,0,1,1,0,0],[0,0,-1,0,1,0,0,1,-1,0,1,0,0,0,1,0,0,0],[0,-1,0,-1,0,1,-1,1,1,1,0,1,0,0,0,0,0,0],[-1,0,1,1,1,-1,-1,0,1,0,1,0,0,0,0,0,1,0],[-1,0,-1,1,-1,1,1,0,1,0,1,0,0,0,0,0,0,0],[0,0,-1,0,1,-1,0,0,1,1,0,0,0,0,0,0,0,0],[-1,-1,0,0,1,0,1,-1,1,0,0,1,0,0,0,0,0,0],[0,0,-1,1,0,0,1,-1,1,1,0,0,0,0,0,0,0,0],[-1,1,0,0,-1,1,-1,1,1,0,0,1,1,0,0,0,0,0],[1,1,0,-1,-1,1,0,0,-1,0,0,1,0,0,0,0,0,0],[0,0,0,1,-1,-1,1,-1,1,0,1,0,0,0,0,0,0,0],[-1,1,-1,1,-1,1,0,-1,1,0,0,0,0,0,0,1,0,0],[-1,1,0,0,1,-1,0,0,1,0,0,0,0,0,0,0,1,0],[0,0,1,0,0,0,-1,1,-1,1,0,0,0,0,0,0,0,0],[-1,1,0,1,1,0,-1,-1,1,0,0,0,0,0,1,0,0,0],[0,-1,1,-1,0,0,0,1,1,1,0,0,0,1,1,1,0,0],[1,0,1,-1,1,1,-1,-1,0,0,0,0,0,0,0,0,0,1],[1,1,-1,-1,0,1,-1,0,1,0,0,0,0,1,0,0,0,0],[-1,0,1,1,0,1,-1,1,-1,0,0,0,0,1,0,0,0,0],[-1,0,0,1,0,1,1,0,-1,0,0,0,0,1,0,0,0,0],[1,-1,0,0,0,-1,-1,1,1,0,0,0,0,1,0,0,0,0],[0,1,-1,-1,0,0,1,0,0,0,0,0,0,0,1,0,0,0],[1,0,1,0,-1,-1,1,0,0,0,0,0,1,0,0,0,0,0],[0,1,1,-1,1,-1,0,-1,0,1,0,0,0,0,0,1,0,1],[-1,1,-1,1,-1,0,0,1,1,0,0,0,0,0,0,1,0,0],[0,1,1,-1,0,-1,-1,1,0,1,0,0,0,1,0,0,0,0],[1,1,0,-1,0,-1,1,0,-1,0,0,1,0,1,0,0,0,0],[-1,1,-1,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0],[1,0,1,0,0,-1,-1,0,0,0,1,0,0,0,0,0,0,0],[-1,-1,0,1,1,0,0,1,0,0,0,1,0,0,0,0,0,0],[0,-1,1,-1,1,1,0,0,0,1,0,0,0,0,0,1,1,1],[1,0,-1,1,0,1,-1,-1,1,0,0,0,0,1,0,0,0,0],[-1,-1,0,-1,1,1,1,-1,1,0,0,1,0,0,0,0,0,0],[1,0,-1,0,0,1,-1,0,1,0,0,0,0,1,0,0,0,0],[1,1,-1,-1,0,0,0,0,0,0,0,0,0,1,1,0,1,1],[-1,0,0,-1,1,1,0,0,1,0,0,1,0,0,0,1,0,0],[0,-1,-1,0,0,1,1,-1,1,1,0,0,1,1,0,0,0,0],[-1,0,0,1,-1,1,1,-1,1,0,1,0,0,0,0,0,0,0],[0,1,0,1,0,1,-1,0,-1,0,0,0,0,1,0,0,1,0],[1,-1,0,-1,0,1,1,-1,0,0,0,0,0,1,0,0,0,0],[0,0,0,-1,1,0,1,1,-1,1,1,1,0,0,1,0,0,0],[0,0,0,1,1,0,0,-1,-1,0,0,0,0,0,1,1,0,0],[-1,1,1,-1,0,-1,0,1,0,0,0,0,0,1,0,1,0,0],[-1,-1,1,1,0,0,1,1,-1,0,0,0,0,1,0,0,0,0],[1,0,0,0,0,-1,1,0,0,0,1,1,1,1,0,0,1,1],[-1,1,-1,0,0,1,-1,1,0,0,0,0,1,1,0,0,0,0],[1,0,1,1,0,-1,-1,-1,0,0,1,0,0,0,0,0,0,1],[-1,-1,1,1,1,-1,-1,0,1,0,0,0,0,0,0,0,1,0],[1,0,0,-1,0,1,1,0,-1,0,1,1,0,1,0,0,0,0],[1,1,-1,1,-1,0,0,0,-1,0,0,0,0,0,1,1,0,0],[0,1,-1,-1,-1,1,0,1,0,1,0,0,0,0,0,1,0,1],[0,0,0,-1,0,1,-1,1,1,1,0,1,0,0,0,0,0,0],[1,1,-1,-1,1,1,-1,0,0,0,0,0,0,0,0,0,1,1],[0,-1,0,0,1,1,0,1,-1,0,0,0,1,0,0,0,0,0],[-1,-1,0,-1,1,0,1,1,0,0,0,1,0,0,0,0,0,0],[-1,1,0,1,1,0,1,-1,-1,0,0,1,0,0,1,0,0,0],[1,0,0,-1,0,0,-1,1,1,0,0,0,0,1,0,0,0,0],[-1,1,0,0,0,0,1,-1,1,0,0,1,0,1,1,0,0,0],[-1,1,1,-1,0,0,1,-1,0,0,0,0,0,1,0,0,0,0],[0,0,0,-1,1,1,0,-1,1,1,1,1,0,0,0,1,0,0],[-1,1,-1,1,1,0,-1,0,0,0,0,0,0,0,1,0,1,1],[-1,-1,1,1,-1,0,0,1,1,0,0,0,0,0,1,1,0,0],[1,-1,0,-1,0,0,-1,1,1,0,0,0,0,1,0,0,0,0],[0,1,0,1,0,1,-1,-1,0,0,0,0,0,1,0,0,0,1],[1,1,0,1,0,-1,0,-1,0,0,0,1,0,1,0,1,0,1],[1,1,0,-1,1,0,1,-1,-1,0,0,1,0,0,0,0,0,0],[-1,1,-1,0,-1,1,0,1,1,0,0,0,0,0,0,1,0,0],[1,0,-1,0,1,1,-1,1,-1,0,1,0,1,0,0,0,0,0],[-1,0,-1,1,-1,1,0,1,1,0,1,0,0,0,0,1,0,0],[0,-1,1,0,0,0,1,0,-1,0,0,0,0,1,0,0,0,0],[0,1,1,-1,-1,0,1,0,0,1,0,0,0,0,1,0,0,0],[0,1,0,-1,1,0,0,0,-1,0,0,0,0,0,0,0,1,0],[1,0,1,-1,-1,0,-1,1,1,0,0,0,0,0,1,0,0,0],[0,0,-1,0,-1,1,0,1,1,0,0,0,0,0,0,1,0,0],[1,0,1,-1,1,0,0,-1,-1,0,0,0,0,0,0,1,0,0],[0,1,0,1,0,-1,0,-1,0,0,0,0,0,0,0,0,0,1],[-1,0,1,0,1,0,0,0,-1,0,0,0,0,0,0,1,0,0],[0,1,-1,0,1,0,1,-1,0,1,0,0,1,0,1,0,0,1],[-1,0,-1,1,1,0,0,1,-1,0,1,0,0,0,1,0,0,0],[0,1,-1,0,0,1,0,1,-1,0,0,0,0,1,0,0,0,0],[1,-1,1,-1,1,1,0,-1,0,0,0,0,0,0,0,1,0,1],[-1,-1,0,0,1,0,0,1,1,0,0,1,0,0,0,1,0,0],[1,-1,1,0,-1,1,0,0,0,0,0,0,0,0,0,0,1,0],[1,1,0,0,-1,-1,0,-1,1,0,0,1,1,0,0,0,0,0],[0,0,0,1,-1,1,0,1,-1,1,0,1,0,0,0,1,0,0],[1,-1,1,1,0,-1,0,0,-1,0,0,0,0,0,0,1,0,0],[0,0,-1,0,1,1,-1,1,0,1,1,0,1,0,0,0,0,1],[1,-1,1,1,-1,-1,0,0,1,0,0,0,0,0,0,0,1,0],[-1,1,0,0,1,0,0,-1,1,0,0,1,1,0,1,1,0,0],[1,-1,-1,0,1,1,-1,1,-1,0,0,0,1,0,0,0,0,0],[1,0,1,0,0,0,0,-1,0,0,1,0,1,1,1,1,0,1],[1,1,-1,0,-1,-1,1,0,0,0,0,0,1,0,0,0,0,1],[0,0,1,0,-1,-1,1,1,-1,1,1,0,1,0,0,0,0,0],[-1,1,0,1,-1,-1,0,1,1,0,0,0,0,0,0,1,0,0],[1,-1,0,-1,0,0,1,1,-1,0,0,0,0,0,1,0,0,0],[0,1,1,1,-1,0,1,-1,-1,1,0,0,0,0,0,0,0,0],[0,1,0,1,0,0,-1,-1,0,0,0,1,0,1,0,0,0,1],[1,0,0,1,-1,0,0,1,-1,0,0,0,0,0,0,1,0,0],[-1,-1,1,0,0,0,1,1,0,0,0,0,1,1,1,0,0,1],[-1,0,1,0,-1,-1,0,1,1,0,0,0,1,0,0,0,0,0],[0,0,-1,0,1,0,0,1,0,0,1,0,0,0,0,0,0,0],[1,1,-1,0,0,1,-1,0,-1,0,0,0,1,1,0,0,1,0],[-1,0,0,-1,1,1,0,1,0,0,1,0,0,0,0,1,0,0],[-1,1,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0],[1,1,-1,1,0,0,-1,1,-1,0,0,0,0,1,1,0,0,0],[-1,1,0,-1,1,1,0,0,0,0,0,0,0,0,0,1,0,0],[0,1,-1,1,-1,-1,1,1,0,0,0,0,0,0,0,0,0,1],[-1,0,-1,0,1,1,0,1,0,0,1,0,0,0,0,0,0,0],[1,0,1,1,0,-1,-1,-1,1,0,1,0,0,1,0,0,0,0],[-1,1,1,-1,0,0,1,-1,1,0,0,0,0,1,1,0,0,0],[0,1,0,1,0,-1,-1,1,0,0,0,0,0,1,0,0,0,0],[0,1,0,1,1,-1,0,-1,0,0,0,0,0,0,0,0,0,1],[-1,-1,1,0,1,1,-1,1,0,0,0,0,1,0,0,0,0,0],[0,0,1,-1,0,1,1,-1,0,1,1,0,0,1,0,0,0,1],[1,0,-1,0,-1,-1,1,0,1,0,0,0,1,0,0,0,0,0],[0,-1,1,1,0,1,1,-1,-1,0,0,0,0,1,0,0,0,0],[0,0,-1,-1,0,1,1,-1,1,0,1,0,0,0,0,0,0,0],[0,-1,-1,1,1,0,1,-1,0,1,0,0,0,0,0,0,0,0],[0,0,0,-1,1,1,0,1,-1,0,1,0,0,0,0,0,0,0],[1,0,-1,0,-1,1,0,0,0,0,1,0,0,0,0,1,1,0],[0,0,-1,0,1,1,-1,1,0,1,1,0,1,0,0,0,0,1],[-1,0,-1,0,0,0,0,1,1,0,1,0,0,0,0,1,0,0],[0,1,0,0,-1,-1,1,-1,1,0,0,0,1,0,0,0,0,0],[-1,1,1,1,1,0,0,-1,-1,0,0,0,0,0,0,1,0,0],[0,-1,0,1,0,-1,1,1,0,1,0,1,0,1,0,0,0,1],[0,1,-1,-1,1,-1,1,-1,1,1,0,0,0,0,0,0,0,0],[1,0,0,1,-1,0,-1,-1,1,0,1,1,0,0,1,0,0,0],[-1,1,0,1,-1,1,0,0,0,0,0,1,0,0,0,1,0,1],[-1,1,1,0,0,0,0,-1,1,0,0,0,0,0,1,0,0,0],[1,-1,0,-1,-1,1,1,1,-1,0,0,1,0,0,0,0,0,0],[1,1,-1,-1,1,1,0,0,-1,0,0,0,0,0,0,0,1,0],[0,0,0,0,1,-1,-1,1,1,1,1,1,1,0,0,0,0,0],[-1,1,0,0,-1,1,-1,0,1,0,0,1,1,0,0,0,0,0],[1,-1,1,0,0,-1,1,-1,1,0,0,0,0,1,0,0,0,0],[0,1,1,-1,0,0,1,0,-1,1,0,0,0,1,1,0,1,0],[-1,0,0,1,0,-1,1,0,0,0,1,1,0,0,0,0,1,1],[0,0,1,1,0,0,0,-1,0,0,0,0,0,1,0,0,0,0],[1,1,-1,-1,0,0,0,1,-1,0,0,0,0,1,1,0,0,0],[-1,0,1,1,0,1,0,0,-1,0,0,0,0,1,0,0,0,0],[1,-1,1,0,-1,1,1,0,-1,0,0,0,0,0,0,0,1,0],[1,-1,0,0,0,0,0,-1,1,0,0,0,0,1,0,0,0,0],[0,0,0,1,0,-1,-1,1,1,1,1,0,0,1,0,0,0,0],[1,1,-1,0,0,1,0,-1,-1,0,0,0,0,0,0,1,0,0],[1,1,0,-1,-1,1,0,0,0,0,0,1,0,0,0,0,0,0],[0,1,-1,-1,-1,1,1,0,1,0,0,0,0,0,0,0,1,0],[-1,1,1,0,0,0,1,0,-1,0,0,0,0,1,0,0,0,0],[0,0,0,1,0,1,-1,0,-1,0,0,0,0,1,0,0,1,0],[1,0,-1,0,-1,-1,1,1,0,0,0,0,1,0,0,0,0,1],[1,1,0,-1,0,1,0,-1,0,0,0,1,0,0,0,0,0,0],[-1,-1,0,1,0,1,0,-1,1,0,0,1,0,1,0,0,0,0],[-1,1,-1,1,1,0,1,0,-1,0,0,0,0,0,1,0,0,0],[-1,-1,1,1,0,0,-1,1,1,0,0,0,0,0,1,0,0,0],[0,0,1,1,1,-1,-1,1,-1,0,1,0,0,0,0,0,0,0],[0,0,-1,1,1,-1,1,-1,1,1,0,0,0,0,0,0,0,0],[-1,1,1,1,0,1,-1,0,-1,0,0,0,0,1,0,0,1,0],[0,0,0,0,1,-1,1,-1,1,1,1,1,1,0,0,0,0,0],[0,-1,0,1,-1,0,1,1,-1,1,0,0,0,0,0,0,0,0],[-1,1,0,0,1,-1,1,-1,1,0,0,1,0,0,0,0,0,0],[1,0,1,0,0,0,-1,0,-1,0,0,0,0,0,0,0,1,0],[0,0,-1,1,1,-1,-1,1,1,1,1,0,0,0,0,0,0,0],[-1,0,0,0,-1,0,1,1,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,-1,1,0,0,-1,0,0,0,0,0,0,1,1,0],[1,0,-1,0,0,-1,0,1,1,0,1,0,1,1,0,1,0,0],[-1,-1,0,1,0,1,1,-1,0,0,0,1,0,1,0,0,0,0],[1,-1,0,1,1,-1,0,1,-1,0,0,1,0,0,0,0,0,0],[0,0,1,1,-1,-1,0,1,0,1,0,0,0,0,0,1,0,0],[1,-1,-1,0,0,1,0,1,0,0,0,0,1,1,0,1,0,1],[-1,1,1,1,0,-1,1,0,-1,0,0,0,0,1,0,0,0,0],[-1,0,0,0,-1,1,0,1,1,0,1,1,1,0,0,1,0,0],[0,1,-1,1,0,-1,-1,1,0,0,0,0,0,1,0,0,0,1],[0,-1,0,0,0,1,-1,1,1,0,0,1,0,0,0,0,0,0],[0,0,1,0,-1,-1,1,0,0,1,1,0,1,0,0,0,1,1],[1,-1,0,0,-1,1,0,0,1,0,0,1,0,0,0,0,1,0],[0,0,1,0,1,-1,-1,0,0,1,1,0,0,0,0,0,1,1],[-1,1,0,1,-1,1,-1,1,0,0,0,1,0,0,0,0,0,1],[0,1,0,0,-1,1,0,-1,1,0,0,1,0,0,0,0,0,0],[0,-1,-1,-1,0,1,0,1,1,1,0,0,0,0,0,1,0,0],[0,1,0,0,-1,0,1,1,-1,1,0,1,1,0,1,0,0,0],[0,0,-1,1,1,-1,1,-1,1,1,0,0,0,0,0,0,0,0],[-1,1,0,-1,0,1,0,-1,1,0,0,0,0,0,0,1,0,0],[-1,1,1,0,-1,-1,-1,1,1,0,0,0,1,0,0,0,0,0],[-1,1,-1,-1,0,1,0,1,1,0,0,0,0,0,0,1,0,0],[-1,0,1,0,0,1,1,-1,0,0,1,0,1,1,0,0,0,1],[1,-1,0,-1,0,1,-1,0,1,0,0,1,0,1,0,0,1,0],[1,1,-1,0,0,1,0,-1,-1,0,0,0,0,0,0,1,0,0],[-1,1,1,1,-1,-1,0,1,0,0,0,0,0,0,0,0,0,1],[0,1,-1,0,0,1,0,1,-1,0,0,0,0,1,0,0,0,0],[1,0,0,0,0,-1,-1,0,1,0,0,0,0,1,0,0,0,0],[-1,1,-1,1,-1,0,1,0,1,0,0,0,0,0,0,0,1,0],[1,0,1,-1,0,-1,1,1,-1,0,0,0,0,1,0,0,0,0],[0,1,1,0,-1,0,-1,0,1,1,0,0,1,0,1,0,1,0],[-1,0,-1,0,1,1,-1,1,1,0,1,0,1,0,0,0,0,0],[1,-1,1,-1,0,1,1,-1,-1,0,0,0,0,1,0,0,0,0],[1,0,1,0,1,-1,-1,1,-1,0,1,0,0,0,0,0,0,0],[-1,1,1,0,1,0,-1,-1,0,0,0,0,1,0,1,0,0,1],[0,1,1,0,0,-1,-1,0,0,1,0,0,0,0,0,0,0,0],[0,0,1,1,1,-1,-1,0,0,1,1,0,0,0,0,0,1,1],[1,0,0,1,0,0,-1,-1,1,0,0,0,0,1,0,0,0,0],[1,1,0,0,0,-1,1,0,-1,0,0,1,0,0,0,0,0,0],[0,-1,1,0,0,-1,0,0,1,0,0,0,0,1,0,0,0,0],[1,1,-1,-1,0,0,0,1,0,0,0,0,0,1,0,0,0,0],[1,-1,-1,1,-1,1,0,0,1,0,0,0,0,0,0,1,1,0],[0,1,1,-1,0,0,0,1,-1,1,0,0,0,1,1,1,0,0],[-1,0,1,-1,-1,0,0,1,1,0,0,0,0,0,1,1,0,0],[1,1,0,1,-1,0,0,-1,0,0,0,1,0,0,1,1,0,1],[0,0,-1,1,1,0,-1,1,0,1,1,0,0,0,1,0,0,1],[0,1,-1,1,-1,0,1,1,-1,1,0,0,0,0,1,0,0,0],[1,-1,-1,1,1,0,0,1,-1,0,0,0,0,0,1,0,0,0],[-1,0,0,0,1,1,-1,0,0,0,0,0,1,0,0,0,0,0],[0,0,-1,0,1,1,0,1,-1,1,1,0,1,0,0,1,0,0],[0,1,0,1,-1,-1,1,-1,0,1,0,0,0,0,0,0,0,0],[-1,1,-1,1,0,1,0,1,-1,0,0,0,0,1,0,0,0,0],[0,0,0,-1,0,1,0,1,0,0,0,1,0,0,0,0,0,1],[1,-1,-1,1,0,0,-1,1,1,0,0,0,0,1,0,0,0,0],[0,0,0,-1,1,0,1,0,-1,0,0,1,0,0,0,0,0,0],[-1,1,1,0,-1,0,1,-1,1,0,0,0,0,0,1,0,0,0],[-1,0,-1,1,1,0,1,0,-1,0,1,0,0,0,1,0,0,0],[1,0,-1,1,0,-1,0,1,0,0,0,0,0,0,0,1,0,1],[1,1,0,1,0,0,-1,0,-1,0,0,1,0,0,0,0,1,0],[-1,0,-1,1,0,0,1,-1,1,0,1,0,0,0,0,0,0,0],[0,-1,-1,1,0,0,0,1,0,1,0,0,0,1,1,1,0,1],[-1,0,1,0,0,-1,-1,1,1,0,0,0,1,0,0,0,0,0],[-1,1,-1,0,0,1,0,0,1,0,0,0,0,0,0,1,0,0],[0,-1,0,0,1,1,-1,0,1,1,0,1,1,0,0,0,1,0],[0,1,1,-1,0,-1,1,-1,1,0,0,0,0,1,0,0,0,0],[1,1,0,0,-1,0,-1,0,1,0,0,1,0,0,0,0,0,0],[0,1,0,1,0,-1,-1,-1,1,1,0,1,0,1,0,0,0,0],[-1,1,0,-1,0,0,0,0,1,0,0,0,0,1,1,1,0,0],[-1,-1,0,-1,0,1,0,1,1,0,0,1,0,0,0,1,0,0],[0,0,0,1,0,0,-1,1,-1,0,0,1,0,1,0,0,0,0],[1,0,0,-1,1,-1,1,1,-1,0,0,1,0,0,0,0,0,0],[-1,1,1,-1,1,1,0,0,-1,0,0,0,0,0,0,1,0,0],[0,1,1,0,-1,0,1,-1,0,1,0,0,0,0,0,0,0,0],[0,1,-1,-1,1,-1,1,0,1,1,0,0,0,0,0,0,1,0],[-1,0,0,1,1,0,-1,1,0,0,1,1,0,0,1,0,0,1],[-1,1,-1,-1,0,1,0,1,0,0,0,0,0,1,0,1,0,0],[0,1,0,0,-1,0,-1,0,1,1,0,1,1,0,1,0,0,0],[1,0,-1,0,1,0,1,-1,0,0,1,0,1,0,1,0,0,1],[1,0,-1,-1,-1,1,1,0,1,0,0,0,0,0,0,0,1,0],[1,0,0,0,0,1,-1,0,-1,0,0,1,0,1,0,0,1,0],[-1,1,0,1,0,1,-1,-1,0,0,0,0,0,1,0,0,0,1],[-1,-1,0,0,1,1,0,0,0,0,0,1,1,0,0,0,0,0],[0,-1,1,0,1,-1,0,-1,1,1,0,0,1,0,0,1,0,0],[0,-1,0,0,1,1,-1,0,0,0,0,0,1,0,0,0,0,0],[0,-1,1,1,-1,-1,1,1,0,1,0,0,0,0,0,0,0,1],[1,-1,1,0,0,1,0,-1,0,0,0,0,0,1,0,0,0,1],[-1,0,1,-1,1,0,0,1,-1,0,0,0,0,0,0,1,0,0],[1,-1,0,-1,0,0,1,0,0,0,0,0,0,1,0,0,0,0],[-1,0,0,-1,0,1,1,-1,1,0,0,1,0,0,0,0,0,0],[-1,1,1,0,-1,-1,0,0,1,0,0,0,1,0,0,0,0,0],[1,1,-1,1,1,0,-1,-1,0,0,0,0,0,0,0,0,0,1],[1,0,-1,-1,0,1,0,1,-1,0,1,0,0,1,0,1,0,0],[0,0,-1,-1,1,0,1,0,1,1,1,0,0,0,1,0,1,0],[-1,1,1,-1,-1,0,1,0,0,0,0,0,0,0,1,0,1,1],[-1,-1,0,1,1,0,0,1,-1,0,0,1,0,0,0,0,0,0],[1,1,-1,0,-1,0,0,0,1,0,0,0,1,0,1,1,0,0],[-1,0,1,0,0,1,-1,0,0,0,0,0,1,0,0,0,0,1],[0,0,-1,1,-1,0,1,0,0,1,0,0,0,0,0,0,0,0],[-1,-1,0,1,0,1,0,1,0,0,0,1,0,1,0,0,0,0],[-1,-1,0,0,1,-1,1,1,0,0,0,1,0,0,0,0,0,0],[-1,0,-1,-1,1,1,1,-1,1,0,1,0,0,0,0,0,0,0],[1,0,1,0,0,-1,-1,1,0,0,1,0,0,0,0,0,0,0],[0,1,-1,0,-1,1,1,-1,0,1,0,0,1,0,0,0,0,1],[-1,0,1,1,-1,0,-1,0,1,0,0,0,0,0,1,0,0,0],[1,-1,0,0,-1,-1,1,0,1,0,0,0,1,0,0,0,1,0],[-1,0,0,0,1,-1,1,1,-1,0,0,1,0,0,0,0,0,0],[0,0,-1,1,0,0,1,1,-1,1,0,0,0,0,1,0,0,0],[1,0,0,0,0,-1,1,1,-1,0,0,1,1,0,0,0,0,0],[0,-1,1,1,-1,-1,0,1,1,0,0,0,0,0,0,1,0,0],[0,-1,-1,1,1,0,1,0,0,1,0,0,0,0,0,0,0,0],[-1,1,0,0,0,0,-1,1,1,0,0,0,1,1,0,0,0,0],[-1,-1,1,0,0,0,1,0,1,0,0,0,1,1,1,0,1,0],[1,-1,-1,1,1,0,-1,1,0,0,0,0,0,0,1,0,0,1],[0,0,0,-1,1,0,0,1,-1,0,1,0,0,0,0,0,0,0],[-1,0,-1,1,1,-1,0,1,1,0,1,0,0,0,0,0,0,0],[1,-1,0,-1,0,0,1,0,0,0,0,0,0,1,0,0,0,0],[0,1,0,-1,1,-1,1,0,0,1,0,1,0,0,0,0,1,1],[0,1,-1,1,0,0,0,1,-1,0,0,0,0,1,1,0,0,0],[0,1,0,1,0,-1,1,0,-1,1,0,1,0,0,0,0,0,0],[-1,0,-1,1,-1,0,1,0,1,0,1,0,0,0,0,0,0,0],[0,1,0,0,-1,-1,1,1,0,0,0,0,1,0,0,0,0,1],[1,0,1,-1,-1,0,0,0,0,0,1,0,0,0,1,0,0,0],[-1,-1,0,1,0,1,1,1,-1,0,0,1,0,1,0,0,0,0],[0,1,0,-1,0,0,0,1,-1,0,0,0,0,1,0,0,0,0],[0,-1,1,1,1,0,0,0,-1,1,0,0,0,0,1,1,1,0],[0,1,1,0,1,-1,-1,0,0,1,0,0,1,0,0,0,1,1],[-1,-1,1,1,-1,1,1,0,0,0,0,0,0,0,0,0,1,1],[-1,0,0,0,-1,0,0,1,1,0,0,0,0,0,0,1,0,0],[0,-1,0,-1,0,1,1,1,0,0,0,0,0,0,0,0,0,1],[-1,1,1,0,0,0,0,1,-1,0,0,0,0,1,0,0,0,0],[0,1,1,0,-1,0,1,0,-1,1,0,0,0,0,0,0,0,0],[-1,1,0,1,1,-1,-1,-1,1,0,0,1,0,0,0,0,0,0],[0,1,1,-1,-1,0,0,1,0,1,0,0,0,0,1,0,0,0],[0,-1,-1,1,0,1,1,-1,0,1,0,0,0,1,0,0,0,0],[-1,0,1,-1,0,-1,1,0,1,0,0,0,0,1,0,0,0,0],[0,1,1,1,-1,0,1,-1,-1,1,0,0,0,0,0,0,0,0],[-1,1,0,0,0,-1,-1,1,1,0,0,0,1,1,0,0,0,0],[1,0,0,-1,1,-1,1,-1,0,0,1,1,0,0,0,0,0,1],[-1,0,-1,1,0,0,0,1,1,0,1,0,0,0,0,1,0,0],[-1,0,1,1,0,-1,1,-1,1,0,0,0,0,1,0,0,0,0],[1,-1,-1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,1,-1,1,-1,0,0,0,1,1,0,0,0,0,1,1],[0,0,0,1,-1,-1,1,1,0,1,1,1,0,0,0,0,0,1],[0,1,0,1,0,0,0,-1,0,1,0,1,0,0,0,0,0,0],[0,1,1,-1,0,0,-1,0,1,1,0,0,0,0,0,0,0,0],[-1,-1,0,1,-1,1,1,1,0,0,0,1,0,0,0,0,0,1],[1,1,0,-1,0,1,-1,0,-1,0,0,1,0,0,0,0,1,0],[1,1,-1,0,0,1,-1,-1,0,0,0,0,1,1,0,0,0,1],[1,0,0,-1,-1,0,-1,1,1,0,1,1,0,0,1,0,0,0],[1,-1,0,1,0,1,-1,1,-1,0,0,0,0,1,0,0,0,0],[0,-1,1,0,-1,0,0,1,0,0,0,0,1,0,1,1,0,1],[-1,1,0,1,0,0,1,-1,-1,0,0,1,0,1,1,0,0,0],[1,0,0,-1,0,-1,1,-1,1,0,0,0,0,1,0,0,0,0],[1,1,0,1,0,-1,-1,-1,1,0,0,1,0,1,0,0,0,0],[1,1,0,-1,0,0,-1,1,0,0,0,1,0,1,1,0,0,1],[1,0,-1,-1,-1,1,1,0,0,0,1,0,0,0,0,0,1,1],[-1,0,-1,0,1,0,1,0,0,0,1,0,0,0,1,0,0,1],[-1,0,0,0,1,0,1,-1,0,0,0,1,0,0,0,0,0,0],[1,-1,0,-1,0,0,1,0,1,0,0,1,0,1,1,0,1,0],[1,-1,0,0,1,-1,0,1,0,0,0,0,0,0,0,0,0,1],[-1,0,1,1,-1,1,1,-1,0,0,1,0,0,0,0,0,0,1],[1,0,1,-1,-1,0,1,0,0,0,1,0,0,0,1,0,0,0],[1,0,0,0,0,-1,-1,1,1,0,0,0,0,1,0,0,0,0],[0,0,1,1,-1,-1,0,-1,1,0,1,0,0,0,0,0,0,0],[0,0,0,1,-1,-1,0,1,1,0,0,0,0,0,0,1,0,0],[0,1,-1,-1,1,0,1,-1,1,1,0,0,0,0,0,0,0,0],[-1,0,0,0,1,-1,1,-1,1,0,0,1,0,0,0,0,0,0],[0,1,1,0,-1,-1,0,0,1,0,0,0,1,0,0,0,0,0],[0,1,0,0,-1,1,0,-1,0,0,0,0,0,0,0,1,0,1],[0,-1,-1,-1,1,1,1,0,0,1,0,0,0,0,0,0,0,0],[-1,1,0,-1,1,0,1,-1,1,0,0,1,0,0,0,0,0,0],[0,0,-1,1,0,1,-1,0,0,0,0,0,0,1,0,0,0,0],[0,0,-1,0,1,0,1,0,-1,1,1,0,0,0,1,0,0,0],[0,0,1,1,-1,-1,-1,1,1,1,1,0,0,0,0,0,0,0],[-1,-1,0,0,0,0,0,1,1,0,0,1,0,0,0,1,0,0],[0,0,-1,1,0,-1,-1,1,1,1,1,0,0,1,0,0,0,0],[1,0,0,-1,0,1,-1,1,-1,0,1,1,0,1,0,0,0,0],[0,1,0,0,1,0,-1,0,0,0,0,0,0,0,0,0,1,0],[0,1,0,1,0,-1,0,1,-1,0,0,1,0,1,0,0,0,0],[-1,1,0,-1,0,0,1,1,0,0,0,1,0,1,1,0,0,1],[1,0,1,-1,0,-1,1,-1,1,0,0,0,0,1,0,0,0,0],[-1,1,-1,0,-1,1,1,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,1,0,-1,0,-1,1,0,1,1,0,1,0,1,0,0],[1,-1,0,-1,1,1,-1,1,0,0,0,0,0,0,0,0,0,1],[1,1,0,-1,-1,0,1,-1,1,0,0,0,0,0,1,0,0,0],[1,-1,1,0,1,0,0,-1,0,0,0,0,1,0,1,1,0,1],[0,1,-1,0,0,-1,1,1,0,0,0,0,0,0,0,0,0,1],[1,1,0,-1,0,0,1,-1,0,0,0,1,0,0,0,0,0,0],[-1,1,1,-1,0,0,1,1,-1,0,0,0,0,1,0,0,0,0],[0,0,1,-1,1,1,0,0,-1,0,0,0,0,0,0,1,0,0],[0,1,1,-1,-1,0,0,1,-1,1,0,0,0,0,1,0,0,0],[-1,0,0,1,0,-1,0,1,1,0,0,0,0,0,0,1,0,0],[-1,0,1,0,1,0,0,1,-1,0,1,0,1,0,1,1,0,0],[0,0,-1,0,1,-1,1,0,1,1,1,0,1,0,0,0,1,0],[0,1,1,0,0,0,-1,0,-1,1,0,0,0,0,0,0,1,0],[-1,0,-1,0,1,-1,1,1,0,0,1,0,0,0,0,0,0,1],[1,0,1,-1,-1,1,0,1,-1,0,1,0,0,0,0,0,0,0],[0,0,-1,1,1,0,1,0,-1,0,0,0,0,0,1,0,0,0],[1,0,0,-1,-1,1,1,-1,1,0,1,0,0,0,0,0,0,0],[-1,0,1,1,0,-1,1,0,0,0,0,0,0,1,0,0,0,0],[0,1,1,-1,0,-1,0,0,1,1,0,0,0,1,0,0,0,0],[-1,-1,1,1,1,0,0,1,-1,0,0,0,0,0,1,1,0,0],[0,-1,0,-1,0,1,0,1,1,1,0,1,0,1,0,1,0,0],[1,1,0,-1,0,1,-1,0,0,0,0,1,0,1,0,0,1,1],[-1,1,1,1,-1,-1,0,-1,1,0,0,0,0,0,0,1,0,0],[-1,1,1,-1,1,0,0,-1,0,0,0,0,0,0,0,1,0,0],[0,-1,0,0,1,-1,0,1,1,1,0,1,1,0,0,1,0,0],[1,-1,-1,-1,1,0,1,1,0,0,0,0,0,0,0,0,0,1],[-1,-1,1,0,0,1,1,0,-1,0,0,0,0,1,0,0,0,0],[-1,0,1,0,1,0,-1,0,1,0,0,0,1,0,0,0,0,0],[-1,0,0,0,1,1,1,0,-1,0,1,1,1,0,0,0,1,0],[1,0,-1,0,-1,0,1,0,1,0,1,0,1,0,1,0,1,0],[-1,1,1,1,0,0,-1,-1,1,0,0,0,0,0,1,0,0,0],[0,-1,0,-1,1,0,0,1,1,1,0,1,0,0,1,1,0,0],[0,-1,1,1,-1,-1,1,0,0,1,0,0,0,0,0,0,1,0],[-1,1,-1,0,0,1,1,0,0,0,0,0,0,1,0,0,1,0],[0,1,1,-1,1,0,-1,-1,1,1,0,0,0,0,0,0,0,0],[0,0,0,1,0,-1,1,-1,0,1,0,0,0,0,0,0,0,0],[-1,-1,1,1,0,1,1,-1,-1,0,0,0,0,1,0,0,0,0],[0,1,1,-1,-1,1,1,0,-1,1,0,0,0,0,0,0,0,0],[0,1,0,-1,0,0,0,1,0,0,0,0,0,1,0,0,0,0],[-1,0,1,1,-1,-1,1,1,0,0,0,0,0,0,0,0,0,1],[1,-1,-1,-1,0,0,1,1,0,0,0,0,0,0,0,0,0,1],[1,1,-1,-1,0,0,1,-1,1,0,0,0,0,1,0,0,0,0],[0,-1,-1,0,-1,1,0,1,1,1,0,0,0,0,0,1,0,0],[0,1,1,1,-1,0,0,-1,-1,1,0,0,0,0,0,1,0,0],[1,0,1,1,0,0,-1,-1,0,0,1,0,0,0,0,0,0,1],[-1,1,1,0,0,0,-1,0,0,0,0,0,1,1,1,0,1,1],[1,0,1,1,-1,-1,-1,0,1,0,1,0,0,0,0,0,0,0],[1,0,0,-1,0,0,0,-1,1,0,0,0,0,1,0,0,0,0],[0,1,0,1,0,-1,1,-1,0,1,0,0,0,0,0,0,0,0],[0,0,1,1,0,1,0,-1,-1,0,0,0,0,1,0,1,0,0],[1,-1,-1,0,0,1,0,1,0,0,0,0,1,1,0,1,0,1],[-1,0,0,-1,1,1,0,1,-1,0,1,0,0,0,0,1,0,0],[-1,0,1,-1,-1,0,1,1,0,0,0,0,0,0,1,0,0,1],[-1,0,1,1,0,-1,1,-1,1,0,0,0,0,1,0,0,0,0],[0,1,1,-1,1,0,0,0,-1,1,0,0,0,0,1,1,1,0],[0,0,1,0,0,-1,0,0,1,0,0,0,0,1,0,0,0,0],[1,-1,-1,1,0,0,0,1,0,0,0,0,0,1,1,1,0,1],[-1,1,-1,1,-1,1,0,0,1,0,0,0,0,0,0,1,0,0],[0,1,-1,1,1,-1,-1,0,0,0,0,0,0,0,0,0,0,1],[0,0,-1,1,1,-1,0,-1,1,1,0,0,0,0,0,0,0,0],[0,0,-1,1,0,1,1,0,-1,1,1,0,0,1,0,0,1,0],[0,1,0,0,-1,0,-1,1,0,1,0,1,1,0,1,0,0,1],[1,1,-1,-1,0,1,1,-1,-1,0,0,0,0,1,0,0,0,0],[0,-1,-1,0,0,1,0,1,1,1,0,0,0,0,0,1,0,0],[0,1,0,-1,1,0,1,-1,0,0,0,1,0,0,0,0,0,0],[0,-1,1,0,-1,1,0,0,0,0,0,0,0,0,0,0,1,1],[1,-1,1,-1,0,0,0,0,1,0,0,0,0,1,1,1,1,0],[-1,-1,1,0,-1,0,0,1,1,0,0,0,1,0,1,1,0,0],[1,-1,1,1,-1,-1,-1,1,0,0,0,0,0,0,0,0,0,1],[0,0,0,1,0,1,0,0,-1,0,0,0,0,1,0,0,0,0],[-1,0,0,1,0,0,-1,1,1,0,0,1,0,0,0,0,0,0],[1,-1,1,0,0,0,0,-1,1,0,0,0,0,1,0,0,0,0],[0,0,-1,1,0,1,-1,-1,1,0,0,0,0,1,0,0,0,0],[0,0,0,-1,1,-1,1,1,0,1,1,1,0,0,0,0,0,1],[1,1,0,1,0,0,-1,-1,0,0,0,1,0,0,0,0,0,1],[0,0,1,0,1,-1,0,0,-1,0,0,0,0,0,0,1,0,0],[-1,1,1,-1,0,1,0,0,-1,0,0,0,0,1,0,1,1,0],[0,-1,-1,0,1,1,0,0,1,1,0,0,0,0,0,0,0,0],[-1,0,-1,1,0,1,1,1,-1,0,1,0,0,1,0,0,0,0],[1,1,-1,-1,0,1,0,-1,0,0,0,0,0,0,0,1,0,0],[1,1,0,0,-1,0,1,0,-1,0,0,1,1,0,1,0,1,0],[0,0,1,1,0,0,0,-1,0,0,0,0,0,1,0,0,0,0],[-1,1,0,1,0,-1,-1,1,0,0,0,0,0,1,0,0,0,0],[0,1,1,0,-1,1,0,-1,-1,1,0,0,0,0,0,1,0,0],[1,0,-1,1,0,-1,0,1,0,0,0,0,0,0,0,1,0,1],[-1,1,0,1,0,-1,1,0,0,0,0,0,0,0,0,0,0,1],[-1,1,1,0,-1,0,1,0,0,0,0,0,1,0,1,0,0,1],[-1,1,0,0,-1,0,1,1,0,0,0,0,0,0,0,0,0,1],[-1,0,-1,1,0,1,-1,1,1,0,1,0,0,1,0,0,0,0],[0,1,0,-1,0,1,-1,1,0,1,0,0,0,1,0,0,0,0],[0,0,0,0,0,-1,1,1,0,0,0,0,0,0,0,0,0,1],[-1,1,1,0,0,0,-1,0,1,0,0,0,1,0,0,0,0,0],[-1,0,0,0,1,1,0,-1,0,0,0,0,1,0,0,0,0,0],[0,-1,-1,1,-1,1,1,1,0,1,0,0,0,0,0,0,0,0],[-1,0,1,0,1,-1,0,0,1,0,0,0,0,0,0,1,0,0],[1,0,0,0,-1,1,-1,0,0,0,1,1,0,0,0,0,1,1],[-1,-1,1,0,0,-1,1,0,1,0,0,0,1,1,0,0,1,0],[1,-1,1,1,-1,1,0,0,-1,0,0,0,0,0,0,0,1,0],[1,0,0,0,-1,0,-1,1,0,0,0,1,1,0,1,0,0,0],[-1,1,1,1,-1,0,0,-1,0,0,0,0,0,0,0,0,0,1],[0,-1,0,0,-1,1,1,0,1,0,0,0,0,0,0,0,1,0],[0,0,-1,1,0,1,0,-1,1,0,0,0,0,1,0,0,0,0],[0,0,-1,-1,0,0,1,1,0,0,0,0,0,0,0,0,0,1],[1,-1,0,-1,1,1,-1,0,0,0,0,0,0,0,0,0,0,1],[0,1,1,0,1,-1,-1,-1,1,1,0,0,0,0,0,0,0,0],[1,-1,0,0,0,-1,1,-1,1,0,0,0,0,1,0,0,0,0],[-1,1,1,0,-1,-1,1,1,0,0,0,0,1,0,0,0,0,1],[1,0,-1,-1,0,1,0,1,0,0,0,0,0,1,0,0,0,1],[0,-1,0,0,0,-1,1,0,1,1,0,1,1,1,0,0,1,0],[-1,1,-1,1,0,1,0,-1,0,0,0,0,0,1,0,0,0,0],[-1,-1,0,0,0,1,1,1,0,0,0,1,0,0,0,0,0,1],[1,1,0,-1,1,-1,0,-1,0,0,0,1,0,0,0,1,0,1],[-1,0,0,-1,0,1,1,0,1,0,1,1,0,1,0,0,1,0],[0,-1,1,0,1,0,0,0,0,1,0,0,1,0,1,1,1,1],[0,-1,1,-1,1,-1,0,1,1,1,0,0,0,0,0,1,0,0],[-1,0,1,0,-1,1,1,0,0,0,0,0,0,0,0,0,0,1],[0,0,0,1,-1,1,0,0,-1,1,1,1,0,0,0,1,1,0],[0,1,-1,-1,1,1,1,-1,0,1,0,0,0,0,0,0,0,1],[0,1,1,0,-1,0,-1,1,-1,1,0,0,0,0,0,0,0,0],[-1,1,1,0,0,-1,0,1,0,0,0,0,0,1,0,0,0,0],[1,1,0,-1,-1,1,-1,0,0,0,0,1,0,0,0,0,0,0],[0,-1,0,1,1,-1,0,-1,1,1,0,0,0,0,0,0,0,0],[-1,1,-1,0,1,1,0,0,0,0,0,0,1,0,0,1,1,1],[1,1,0,-1,0,1,0,-1,-1,0,0,0,0,0,0,1,0,0],[-1,1,1,0,0,-1,0,1,-1,0,0,0,0,1,0,0,0,0],[-1,1,1,0,0,0,-1,1,0,0,0,0,1,1,0,0,0,0],[0,-1,0,0,0,1,0,1,0,0,0,0,0,0,0,1,0,1],[1,0,1,0,-1,-1,1,0,0,0,0,0,1,0,0,0,0,0],[1,-1,1,1,0,0,-1,-1,1,0,0,0,0,1,0,0,0,0],[0,-1,0,0,-1,1,0,1,1,1,0,1,1,0,0,1,0,0],[-1,1,0,-1,0,1,1,1,-1,0,0,0,0,1,0,0,0,0],[0,1,-1,1,1,-1,0,-1,0,0,0,0,0,0,0,0,0,1],[0,0,-1,0,-1,1,1,-1,1,0,1,0,0,0,0,0,0,0],[1,1,0,-1,-1,0,1,1,-1,0,0,0,0,0,1,0,0,0],[0,0,-1,1,0,1,0,-1,0,0,0,0,0,1,0,0,0,0],[1,-1,-1,1,0,1,-1,1,-1,0,0,0,0,1,0,0,0,0],[1,0,1,-1,0,0,1,-1,-1,0,1,0,0,1,1,0,0,0],[0,1,0,1,1,-1,0,0,-1,0,0,1,0,0,0,0,1,0],[0,0,1,0,1,-1,-1,-1,1,1,0,0,0,0,0,0,0,0],[-1,1,0,-1,1,-1,1,0,0,0,0,1,0,0,0,0,1,1],[0,1,-1,-1,-1,0,1,1,0,0,0,0,0,0,1,0,0,1],[1,1,0,1,1,-1,-1,-1,0,0,0,0,0,0,0,0,0,1],[1,-1,0,1,-1,0,-1,1,0,0,0,1,0,0,0,0,0,0],[-1,-1,1,1,0,1,1,-1,0,0,0,0,0,1,0,0,0,0],[1,0,0,0,1,1,-1,0,-1,0,0,0,0,0,0,0,1,0],[-1,-1,0,1,-1,1,1,0,1,0,0,1,0,0,0,0,1,0],[1,0,-1,0,1,0,0,1,-1,0,0,0,0,0,1,0,0,0],[-1,0,1,0,0,0,-1,1,1,0,0,0,1,0,0,0,0,0],[1,1,0,-1,0,0,1,0,-1,0,0,1,0,0,0,0,0,0],[0,1,1,0,-1,1,-1,0,0,1,0,0,1,0,0,0,1,1],[0,-1,1,0,0,1,0,1,-1,0,0,0,1,1,0,1,0,0],[0,0,0,1,-1,1,0,-1,0,1,1,1,0,0,0,1,0,1],[1,0,0,0,-1,0,0,-1,1,0,1,1,1,0,1,1,0,0],[0,0,1,0,0,-1,-1,1,0,0,0,0,1,0,0,0,0,0],[1,-1,0,1,-1,0,0,1,0,0,0,0,0,0,0,1,0,0],[-1,1,0,1,-1,0,-1,1,0,0,0,1,0,0,1,0,0,1],[-1,0,1,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0],[1,0,0,-1,1,0,1,0,-1,0,0,1,0,0,0,0,0,0],[-1,0,0,1,0,-1,0,1,0,0,0,1,0,0,0,0,0,1],[1,0,1,1,-1,0,0,-1,0,0,1,0,0,0,0,0,0,0],[1,0,1,-1,0,0,-1,1,-1,0,1,0,0,0,0,0,0,0],[0,0,1,1,0,-1,1,-1,0,1,1,0,0,1,0,0,0,1],[-1,-1,1,1,-1,0,1,0,0,0,0,0,0,0,1,0,1,1],[1,0,0,-1,1,0,1,-1,-1,0,0,1,0,0,0,0,0,0],[-1,0,0,0,1,0,0,1,-1,0,1,0,0,0,0,0,0,0],[1,0,0,1,0,1,0,-1,-1,0,0,0,0,0,0,1,0,0],[1,-1,-1,0,1,0,1,1,-1,0,0,0,0,0,1,0,0,0],[0,0,1,1,-1,0,-1,1,-1,1,0,0,0,0,0,0,0,0],[1,1,0,0,0,-1,1,-1,0,0,0,1,1,1,0,0,0,1],[0,0,1,1,0,-1,-1,1,-1,1,1,0,0,1,0,0,0,0],[-1,1,1,0,0,1,-1,0,0,0,0,0,1,0,0,0,0,1],[-1,0,0,-1,1,1,1,1,-1,0,1,1,0,0,0,0,0,0],[1,0,-1,1,-1,0,0,0,1,0,0,0,0,0,0,1,0,0],[0,1,-1,0,1,-1,0,0,1,1,0,0,1,0,0,1,1,0],[0,1,-1,0,-1,0,0,1,1,0,0,0,0,0,0,1,0,0],[0,1,0,1,0,-1,-1,0,1,1,0,0,0,1,0,0,0,0],[-1,1,-1,1,1,-1,1,0,0,0,0,0,0,0,0,0,0,1],[0,1,0,0,1,0,0,-1,0,1,0,1,0,0,0,1,0,1],[-1,-1,1,1,1,0,-1,-1,1,0,0,0,0,0,1,0,0,0],[1,-1,0,-1,0,1,0,1,0,0,0,0,0,0,0,0,0,1],[0,1,1,-1,0,1,-1,0,-1,1,0,0,0,0,0,0,1,0],[1,0,0,0,-1,-1,0,1,1,0,0,0,1,0,0,1,0,0],[1,-1,0,0,0,1,1,0,-1,0,0,0,1,0,0,0,0,0],[0,0,-1,1,-1,1,0,1,0,1,1,0,0,0,0,1,0,1],[-1,0,-1,0,1,1,0,0,0,0,1,0,1,0,0,0,0,0],[1,1,-1,0,0,-1,-1,1,0,0,0,0,0,1,0,0,0,1],[1,-1,0,-1,1,-1,0,1,0,0,0,0,0,0,0,0,0,1],[-1,1,1,-1,0,-1,0,1,1,0,0,0,0,1,0,1,0,0],[-1,0,-1,1,0,1,1,-1,1,0,1,0,0,0,0,0,0,0],[1,0,1,-1,0,1,1,-1,-1,0,1,0,0,1,0,0,0,0],[-1,1,1,-1,0,0,0,1,0,0,0,0,0,1,0,1,0,0],[1,1,0,0,1,0,0,-1,-1,0,0,1,0,0,0,1,0,0],[0,1,0,0,0,0,-1,1,0,0,0,0,0,1,0,0,0,0],[1,0,0,-1,1,-1,1,-1,0,0,1,1,0,0,0,0,0,1],[0,-1,1,0,1,1,-1,0,0,1,0,0,1,0,0,0,1,1],[0,1,1,1,-1,0,0,-1,0,1,0,0,0,0,0,0,0,0],[1,1,-1,-1,0,0,1,-1,0,0,0,0,0,0,1,0,0,0],[-1,-1,0,0,1,-1,1,0,1,0,0,1,0,0,0,0,0,0],[0,-1,1,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0],[0,-1,1,0,-1,-1,1,0,1,0,0,0,1,0,0,0,1,0],[0,0,-1,1,-1,1,1,0,-1,1,0,0,0,0,0,0,0,0],[0,0,1,1,0,-1,-1,0,1,1,1,0,0,1,0,0,0,0],[1,-1,1,0,1,0,-1,0,0,0,0,0,0,0,0,0,0,1],[-1,1,1,-1,0,-1,1,0,0,0,0,0,0,1,0,0,0,0],[1,0,0,0,-1,-1,1,1,0,0,0,0,1,0,0,0,0,0],[1,-1,1,-1,0,1,1,0,-1,0,0,0,0,1,0,0,0,0],[0,-1,1,-1,0,0,1,0,0,0,0,0,0,1,0,0,0,0],[0,-1,-1,1,1,-1,1,-1,1,1,0,0,0,0,0,0,0,0],[-1,0,0,1,1,0,1,-1,0,0,1,1,0,0,1,0,0,1],[0,1,-1,1,1,0,-1,-1,1,1,0,0,0,0,1,0,0,0],[0,1,1,-1,0,-1,-1,1,1,1,0,0,0,1,0,0,0,0],[0,0,1,0,-1,0,-1,1,1,0,0,0,0,0,1,0,0,0],[0,-1,-1,1,0,0,-1,1,1,1,0,0,0,1,1,0,0,0],[-1,0,0,0,0,0,1,-1,1,0,1,0,0,0,0,0,0,0],[-1,-1,1,1,0,0,1,1,-1,0,0,0,0,1,0,0,0,0],[-1,0,1,0,-1,0,-1,1,1,0,0,0,1,0,0,0,0,0],[0,-1,0,0,0,1,-1,0,1,0,0,1,0,0,0,0,0,0],[0,0,0,-1,1,1,-1,0,1,1,0,0,0,0,0,0,0,0],[0,1,-1,-1,1,1,1,0,-1,0,0,0,0,0,0,0,1,0],[1,1,0,-1,-1,0,-1,1,1,0,0,1,0,0,1,0,0,0],[1,-1,0,-1,0,1,1,0,0,0,0,0,0,1,0,0,0,1],[0,0,-1,1,-1,1,0,-1,1,1,1,0,0,0,0,1,0,0],[-1,0,1,1,1,0,-1,1,-1,0,1,0,0,0,1,0,0,0],[1,0,-1,0,-1,1,1,0,-1,0,0,0,1,0,0,0,0,0],[1,-1,-1,0,0,1,1,0,0,0,0,0,1,1,0,0,1,1],[-1,0,0,-1,1,1,0,0,1,0,0,1,0,0,0,1,0,0],[-1,0,0,0,0,1,-1,1,0,0,1,1,1,1,0,0,0,1],[0,1,-1,1,-1,1,0,-1,0,1,0,0,0,0,0,1,0,1],[0,-1,0,1,-1,1,0,0,1,0,0,1,0,0,0,0,1,0],[0,1,1,1,-1,-1,1,0,-1,1,0,0,0,0,0,0,0,0],[-1,1,-1,1,0,1,1,-1,0,0,0,0,0,1,0,0,0,0],[-1,0,0,1,1,-1,-1,0,1,0,1,1,0,0,0,0,1,0],[1,0,0,1,-1,-1,-1,1,1,0,0,1,0,0,0,0,0,0],[1,1,0,-1,1,1,-1,-1,0,0,0,0,0,0,0,0,0,1],[0,0,0,0,0,0,1,1,-1,0,0,1,0,0,1,0,0,0],[0,1,-1,1,-1,0,1,-1,0,1,0,0,0,0,0,0,0,0],[0,-1,-1,0,1,0,1,0,1,1,0,0,0,0,0,0,0,0],[0,1,1,-1,1,-1,0,0,0,1,0,0,0,0,0,1,1,1],[0,-1,-1,0,1,-1,1,0,1,1,0,0,0,0,0,0,0,0],[-1,1,1,0,0,1,1,-1,-1,0,0,0,0,1,0,0,0,0],[-1,-1,0,0,0,1,1,0,1,0,0,1,0,0,0,0,0,0],[1,-1,1,-1,0,0,0,1,-1,0,0,0,0,1,1,1,0,0],[0,-1,1,0,0,-1,0,1,0,0,0,0,1,1,0,1,0,1],[1,1,0,-1,0,1,-1,-1,0,0,0,1,0,0,0,0,0,1],[0,-1,1,1,1,0,0,-1,-1,0,0,0,0,0,0,1,0,0],[0,-1,-1,1,1,0,-1,1,1,1,0,0,0,0,0,0,0,0],[-1,1,-1,0,0,-1,1,0,1,0,0,0,0,0,0,0,1,0],[0,1,-1,0,0,0,1,0,-1,1,0,0,0,1,1,0,0,0],[0,0,0,1,0,-1,-1,1,1,1,1,0,0,1,0,0,0,0],[0,-1,1,0,1,-1,-1,0,1,1,0,0,0,0,0,0,0,0],[0,1,1,-1,1,0,-1,0,0,1,0,0,0,0,0,0,0,0],[1,-1,0,-1,0,1,-1,1,0,0,0,1,0,1,0,0,0,1],[0,1,-1,0,-1,1,0,1,0,1,0,0,0,0,0,1,0,1],[-1,0,0,1,0,-1,-1,1,1,0,0,1,0,0,0,0,0,0],[1,0,0,1,1,-1,0,-1,0,0,1,1,0,0,0,1,0,1],[0,-1,0,-1,0,1,1,1,-1,1,0,0,0,0,0,0,0,0],[0,-1,0,1,-1,1,1,0,0,1,0,0,0,0,0,0,1,0],[-1,1,0,0,1,0,-1,0,1,0,0,0,1,0,0,0,0,0],[1,0,0,-1,0,-1,1,1,0,0,0,0,0,1,0,0,0,1],[-1,1,0,1,0,0,-1,1,-1,0,0,0,0,1,0,0,0,0],[0,-1,1,1,1,0,-1,1,-1,0,0,0,0,0,1,0,0,0],[1,1,-1,-1,-1,0,0,1,1,0,0,0,0,0,1,1,0,0],[1,0,1,1,-1,-1,0,1,-1,0,1,0,0,0,0,1,0,0],[-1,1,1,0,1,0,0,-1,0,0,0,0,0,0,0,1,0,0],[1,0,0,0,-1,1,0,-1,0,0,1,1,0,0,0,1,0,1],[1,1,0,-1,1,0,-1,0,-1,0,0,0,0,0,0,0,1,0],[-1,0,-1,1,-1,1,1,1,0,0,1,0,0,0,0,0,0,1],[0,0,-1,0,0,1,1,0,0,1,0,0,1,1,0,0,0,0],[1,1,0,-1,1,0,0,0,-1,0,0,1,0,0,1,1,1,0],[0,1,-1,1,0,1,-1,0,-1,0,0,0,0,1,0,0,1,0],[-1,-1,1,1,1,0,-1,1,0,0,0,0,0,0,1,0,0,0],[1,0,-1,1,-1,1,0,-1,1,0,1,0,0,0,0,1,0,0],[-1,0,1,0,0,0,1,-1,1,0,1,0,1,1,1,0,0,0],[1,1,0,0,-1,-1,-1,1,1,0,0,1,1,0,0,0,0,0],[1,-1,1,-1,0,0,1,0,0,0,0,0,0,1,0,0,0,0],[-1,1,-1,0,-1,1,1,0,1,0,0,0,0,0,0,0,1,0],[1,1,-1,1,-1,0,0,0,0,0,0,0,0,0,0,1,0,0],[-1,0,-1,0,0,1,1,0,0,0,1,0,0,1,0,0,0,1],[0,1,-1,0,0,1,-1,0,1,1,0,0,1,1,0,0,0,0],[0,1,-1,-1,-1,0,1,1,0,0,0,0,0,0,1,0,0,1],[1,0,1,1,-1,-1,0,-1,1,0,1,0,0,0,0,0,0,0],[-1,0,0,-1,1,0,0,0,1,0,1,1,0,0,0,1,0,0],[-1,1,0,0,0,1,-1,0,1,0,0,1,1,0,0,0,0,0],[0,-1,-1,0,0,1,0,0,1,1,0,0,1,1,0,1,1,0],[1,0,-1,1,0,1,-1,0,-1,0,0,0,0,1,0,0,1,0],[1,-1,1,0,0,1,-1,-1,0,0,0,0,0,1,0,0,0,1],[0,1,-1,0,-1,1,0,0,0,1,0,0,0,0,0,1,0,1],[0,-1,-1,-1,0,1,1,1,0,1,0,0,0,0,0,0,0,0],[0,1,-1,0,0,0,1,-1,1,1,0,0,1,1,0,0,0,0],[-1,0,-1,0,0,1,0,1,1,0,1,0,0,0,0,1,0,0],[1,-1,-1,0,0,0,0,1,0,0,0,0,0,0,0,1,0,1],[-1,1,0,0,-1,0,0,1,0,0,0,1,1,0,1,1,0,1],[1,0,0,0,-1,0,-1,1,1,0,0,1,1,0,1,0,0,0],[0,0,-1,1,-1,0,1,-1,1,0,1,0,0,0,0,0,0,0],[-1,1,0,0,1,1,-1,-1,0,0,0,0,1,0,0,0,0,1],[0,-1,0,-1,1,0,0,1,0,1,0,0,0,0,0,0,0,0],[-1,0,-1,1,1,-1,1,1,0,0,1,0,0,0,0,0,0,1],[-1,1,0,1,0,1,1,-1,-1,0,0,0,0,1,0,0,0,0],[-1,0,1,0,1,1,-1,0,-1,0,0,0,1,0,0,0,1,0],[-1,1,1,1,1,-1,-1,0,0,0,0,0,0,0,0,0,1,0],[-1,0,0,1,-1,0,1,0,1,0,0,0,0,0,0,0,1,0],[0,0,0,-1,-1,1,-1,1,1,1,0,1,0,0,0,0,0,0],[-1,-1,1,1,1,-1,0,-1,1,0,0,0,0,0,0,1,0,0],[-1,0,1,1,1,0,-1,0,0,0,0,0,0,0,1,0,0,0],[-1,1,0,1,0,-1,0,1,0,0,0,0,0,1,0,0,0,0],[1,1,0,1,1,-1,0,-1,-1,0,0,1,0,0,0,1,0,0],[1,0,0,0,0,-1,1,0,-1,0,0,1,1,0,0,0,0,0],[0,0,0,0,0,-1,1,-1,1,0,0,0,0,1,0,0,0,0],[0,-1,-1,0,1,1,1,1,-1,1,0,0,0,0,0,0,0,0],[-1,-1,0,-1,1,1,1,1,0,0,0,1,0,0,0,0,0,0],[0,0,0,-1,1,1,-1,0,1,1,0,0,0,0,0,0,0,0],[1,-1,1,-1,-1,0,0,1,1,0,0,0,0,0,1,0,0,0],[1,0,1,-1,-1,1,0,-1,0,0,1,0,0,0,0,0,0,0],[-1,1,0,1,0,-1,0,1,0,0,0,0,0,1,0,0,0,0],[0,1,-1,1,0,0,0,-1,1,1,0,0,0,1,0,0,0,0],[-1,1,-1,1,0,1,0,-1,0,0,0,0,0,1,0,0,0,0],[0,0,1,1,-1,0,1,0,-1,1,0,0,0,0,0,0,0,0],[0,0,-1,0,1,1,1,-1,-1,0,0,0,1,0,0,0,0,0],[0,-1,-1,0,0,0,1,1,0,1,0,0,0,0,0,0,0,1],[-1,0,-1,1,0,1,1,-1,1,0,1,0,0,0,0,0,0,0],[-1,-1,1,-1,1,1,0,1,0,0,0,0,0,0,0,1,0,0],[-1,1,0,0,-1,0,1,1,0,0,0,0,0,0,0,0,0,1],[0,0,-1,1,0,-1,1,-1,1,1,0,0,0,0,0,0,0,0],[0,-1,0,0,0,1,1,1,-1,1,0,0,0,0,0,0,0,0],[0,-1,0,0,0,0,1,0,1,1,0,1,1,1,1,0,1,0],[-1,0,0,0,1,1,1,-1,0,0,1,1,1,0,0,0,0,1],[-1,0,0,1,-1,1,-1,0,1,0,0,1,0,0,0,0,0,0],[-1,-1,0,0,1,1,1,0,0,0,0,1,0,0,0,0,0,0],[-1,0,-1,0,0,1,1,1,0,0,1,0,0,0,0,0,0,1],[0,1,0,1,-1,1,-1,0,0,1,0,1,0,0,0,0,1,1],[0,0,-1,-1,0,1,1,0,1,0,0,0,0,0,0,0,1,0],[0,-1,0,0,1,1,0,1,-1,0,0,0,1,0,0,0,0,0],[0,1,1,1,-1,0,0,-1,0,1,0,0,0,0,0,0,0,0],[0,-1,1,0,-1,0,-1,1,1,0,0,0,0,0,1,0,0,0],[0,-1,1,-1,0,1,0,0,0,0,0,0,0,0,0,0,0,1],[0,0,1,0,1,0,-1,-1,0,1,0,0,1,0,0,0,0,1],[-1,0,0,-1,-1,1,1,1,0,0,0,0,0,0,0,0,0,1],[-1,0,1,-1,0,0,1,1,-1,0,0,0,0,1,0,0,0,0],[1,1,-1,-1,0,1,-1,0,1,0,0,0,0,1,0,0,0,0],[0,0,0,0,-1,1,1,-1,0,1,1,0,0,0,0,0,0,1],[1,0,-1,0,0,1,0,1,-1,0,0,0,1,1,0,0,0,0],[-1,1,0,0,1,-1,1,0,0,0,0,1,1,0,0,0,1,1],[1,0,0,1,-1,1,-1,1,-1,0,0,1,0,0,0,0,0,0],[0,1,1,1,-1,1,-1,-1,0,0,0,0,0,0,0,0,0,1],[0,1,-1,-1,0,0,1,-1,1,1,0,0,0,1,1,0,0,0],[1,-1,0,0,0,-1,1,0,1,0,0,1,1,1,0,0,1,0],[-1,1,1,0,-1,0,-1,1,0,0,0,0,1,0,1,0,0,1],[1,-1,0,0,-1,1,0,1,0,0,0,0,0,0,0,1,0,1],[1,-1,1,1,0,-1,0,0,0,0,0,0,0,0,0,1,0,0],[0,-1,1,0,0,-1,1,1,0,1,0,0,1,1,0,0,0,1],[0,1,-1,1,0,-1,0,1,0,0,0,0,0,1,0,0,0,1],[1,1,0,1,1,-1,-1,-1,0,0,0,0,0,0,0,0,0,1],[1,0,1,1,-1,0,-1,0,-1,0,0,0,0,0,0,0,1,0],[-1,-1,1,1,1,0,0,0,0,0,0,0,0,0,1,1,1,1],[1,0,0,1,-1,0,0,-1,0,0,1,0,0,0,0,1,0,0],[0,0,-1,0,1,-1,0,1,1,1,1,0,1,0,0,1,0,0],[-1,0,-1,0,1,1,1,-1,1,0,1,0,0,0,0,0,0,0],[1,0,1,-1,-1,0,0,0,1,0,0,0,0,0,1,0,0,0],[-1,1,-1,0,0,1,1,0,-1,0,0,0,0,1,0,0,0,0],[-1,-1,1,-1,1,-1,0,1,1,0,0,0,0,0,0,1,0,0],[1,-1,0,1,0,-1,0,0,1,0,0,1,0,1,0,1,1,0],[1,0,0,1,-1,1,-1,1,-1,0,0,1,0,0,0,0,0,0],[1,0,-1,-1,1,0,1,0,0,0,0,0,0,0,0,0,0,1],[0,1,0,-1,1,-1,1,-1,1,1,0,1,0,0,0,0,0,0],[-1,0,1,1,0,-1,1,1,-1,0,0,0,0,1,0,0,0,0],[-1,0,0,1,1,-1,0,1,0,0,1,0,0,0,0,0,0,0],[-1,1,1,1,-1,-1,1,0,0,0,0,0,0,0,0,0,0,1],[1,0,-1,0,-1,1,0,0,1,0,1,0,0,0,0,1,1,0],[-1,1,-1,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0],[0,0,0,-1,1,-1,1,1,0,1,1,1,0,0,0,0,0,1],[1,1,0,-1,0,1,-1,-1,1,0,0,1,0,1,0,0,0,0],[1,1,-1,1,1,-1,0,-1,0,0,0,0,0,0,0,0,0,1],[0,0,-1,0,1,1,-1,0,0,0,0,0,1,0,0,0,0,0],[1,-1,0,1,0,0,-1,0,0,0,0,0,0,1,1,0,1,1],[0,1,1,-1,0,-1,-1,0,1,1,0,0,0,1,0,0,0,0],[0,0,-1,1,1,0,-1,0,0,0,0,0,0,0,1,0,0,0],[0,1,0,1,-1,0,-1,0,0,1,0,1,0,0,0,0,1,1],[-1,1,1,0,-1,0,0,1,0,0,0,0,1,0,1,1,0,1],[0,1,0,-1,0,1,0,0,0,0,0,1,0,0,0,0,0,1],[1,0,1,0,-1,-1,0,0,0,0,1,0,1,0,0,0,0,0],[0,1,0,1,0,0,-1,0,-1,1,0,1,0,1,1,0,1,0],[1,0,-1,0,0,-1,1,-1,1,0,1,0,1,1,0,0,0,0],[-1,1,0,1,0,1,-1,-1,1,0,0,1,0,1,0,0,0,0],[0,1,1,0,1,-1,-1,0,0,1,0,0,1,0,0,0,1,1],[1,1,-1,-1,0,0,0,0,1,0,0,0,0,1,0,0,0,0],[0,0,0,-1,-1,1,1,0,1,1,1,1,0,0,0,0,1,0],[-1,1,1,1,0,-1,-1,1,0,0,0,0,0,1,0,0,0,0],[1,1,-1,1,0,-1,-1,0,1,0,0,0,0,1,0,0,0,0],[-1,1,1,0,0,-1,1,-1,1,0,0,0,0,1,0,0,0,0],[-1,-1,0,0,1,1,0,0,1,0,0,1,0,0,0,0,0,0],[1,0,0,-1,0,1,0,0,0,0,0,1,0,0,0,0,0,1],[-1,1,-1,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0],[0,0,1,1,0,-1,1,0,-1,1,1,0,0,1,0,0,1,0],[-1,1,0,0,0,1,1,0,-1,0,0,0,0,1,0,0,0,0],[0,0,-1,-1,1,0,-1,1,1,1,0,0,0,0,0,0,0,0],[0,-1,0,0,1,0,1,-1,1,1,0,1,1,0,1,0,0,0],[1,-1,1,-1,0,-1,1,0,1,0,0,0,0,1,0,0,0,0],[0,1,1,1,-1,-1,0,0,0,1,0,0,0,0,0,0,0,0],[1,-1,0,0,1,-1,-1,1,0,0,0,0,0,0,0,0,0,1],[-1,1,0,0,-1,0,0,1,1,0,0,0,0,0,0,1,0,0],[0,-1,1,1,0,-1,0,0,0,1,0,0,0,1,0,1,1,0],[1,-1,0,0,1,-1,0,1,-1,0,0,1,0,0,0,0,0,0],[-1,1,0,-1,1,1,1,-1,-1,0,0,1,0,0,0,0,0,0],[0,-1,0,-1,1,0,0,0,1,1,0,0,0,0,0,0,0,0],[0,1,-1,1,-1,-1,0,1,0,1,0,0,0,0,0,1,0,1],[0,0,1,-1,0,0,1,0,-1,0,0,0,0,1,0,0,0,0],[0,0,0,1,0,0,1,-1,0,1,1,1,0,1,1,0,0,1],[-1,0,1,1,0,0,-1,0,0,0,0,0,0,0,0,0,0,1],[1,1,0,1,-1,-1,0,-1,1,0,0,1,0,0,0,1,0,0],[-1,1,1,-1,-1,1,1,0,0,0,0,0,0,0,0,0,0,1],[-1,0,0,1,0,1,1,-1,0,0,0,0,0,1,0,0,0,0],[0,-1,0,0,1,-1,1,0,0,0,0,1,0,0,0,0,0,0],[0,1,-1,0,1,-1,1,-1,0,0,0,0,0,0,0,0,0,1],[0,-1,0,1,0,-1,1,0,1,1,0,1,0,1,0,0,1,0],[0,-1,0,0,1,-1,1,1,-1,0,0,1,0,0,0,0,0,0],[-1,0,1,-1,1,0,0,0,1,0,0,0,0,0,0,1,0,0],[-1,-1,0,0,0,1,1,1,-1,0,0,1,1,1,0,0,0,0],[-1,1,1,-1,0,1,0,1,-1,0,0,0,0,1,0,1,0,0],[0,1,1,1,0,-1,-1,0,0,1,0,0,0,0,0,0,0,0],[0,1,-1,-1,0,1,0,1,-1,0,0,0,0,1,0,0,0,0],[0,1,1,1,-1,-1,-1,-1,1,1,0,0,0,0,0,0,0,0],[0,1,0,1,-1,1,-1,-1,1,0,0,1,0,0,0,0,0,0],[0,1,-1,1,0,0,1,-1,0,1,0,0,0,0,0,0,0,0],[-1,1,0,1,0,1,-1,0,-1,0,0,0,0,1,0,0,1,0],[-1,0,1,1,0,1,0,-1,-1,0,0,0,0,1,0,1,0,0],[1,0,1,-1,1,0,-1,-1,0,0,0,0,0,0,0,0,0,1],[1,0,1,0,-1,-1,0,0,1,0,1,0,1,0,0,0,0,0],[0,1,-1,-1,0,0,1,1,0,1,0,0,0,1,1,0,0,1],[1,0,1,-1,0,-1,1,0,-1,0,0,0,0,1,0,0,0,0],[1,0,1,0,1,-1,-1,0,-1,0,0,0,0,0,0,0,1,0],[1,-1,0,-1,0,1,-1,1,0,0,0,1,0,1,0,0,0,1],[1,-1,0,0,-1,1,0,0,0,0,0,1,0,0,0,1,1,0],[0,0,1,1,-1,-1,0,0,1,1,1,0,0,0,0,1,1,0],[1,0,-1,-1,1,0,1,0,0,0,0,0,0,0,0,0,0,1],[-1,0,0,1,-1,0,1,0,1,0,0,0,0,0,0,0,1,0],[0,1,0,1,-1,0,-1,1,-1,1,0,1,0,0,1,0,0,0],[1,-1,0,0,-1,1,0,0,1,0,0,1,0,0,0,0,1,0],[1,-1,0,-1,0,0,1,0,1,0,0,1,0,1,1,0,1,0],[0,-1,0,1,-1,1,1,0,-1,1,0,0,0,0,0,0,1,0],[1,0,0,-1,-1,1,-1,1,1,0,0,1,0,0,0,0,0,0],[0,0,1,1,-1,0,1,-1,0,1,1,0,0,0,0,0,0,0],[-1,-1,1,1,0,0,0,1,-1,0,0,0,0,1,0,0,0,0],[1,0,1,-1,1,0,-1,1,-1,0,1,0,0,0,0,0,0,0],[-1,0,0,-1,1,1,1,0,0,0,0,1,0,0,0,0,0,0],[1,1,0,-1,-1,0,1,0,0,0,0,0,0,0,1,0,0,0],[0,0,-1,-1,1,0,0,0,1,1,0,0,0,0,0,0,0,0],[-1,1,-1,1,-1,0,1,0,0,0,0,0,0,0,0,0,0,1],[1,1,0,1,-1,-1,0,-1,1,0,0,1,0,0,0,1,0,0],[-1,-1,1,0,0,0,1,0,1,0,0,0,1,1,1,0,1,0],[1,1,0,1,-1,0,0,-1,-1,0,0,0,0,0,0,1,0,0],[0,0,-1,1,0,-1,1,-1,1,1,0,0,0,0,0,0,0,0],[-1,0,0,1,1,0,-1,1,0,0,1,1,0,0,1,0,0,1],[1,-1,1,1,1,-1,0,0,-1,0,0,0,0,0,0,1,0,0],[1,1,0,-1,0,0,-1,-1,1,0,0,1,0,1,1,0,0,0],[-1,1,1,0,1,0,0,-1,-1,0,0,0,0,0,0,1,0,0],[0,-1,1,0,-1,0,0,1,1,1,0,0,1,0,1,1,0,0],[1,1,-1,-1,0,0,-1,1,0,0,0,0,0,1,0,0,0,0],[0,1,-1,1,0,1,0,-1,-1,0,0,0,0,1,0,1,0,0],[0,1,-1,0,1,-1,1,-1,1,1,0,0,0,0,0,0,0,0],[1,-1,0,1,1,-1,0,0,-1,0,0,1,0,0,0,1,0,0],[0,-1,-1,1,1,0,1,1,-1,1,0,0,0,0,1,0,0,0],[0,-1,1,1,0,0,1,-1,0,0,0,0,0,1,0,0,0,0],[1,1,0,1,-1,-1,-1,1,0,0,0,1,0,0,0,0,0,0],[0,-1,-1,1,0,1,0,-1,1,1,0,0,0,1,0,0,0,0],[0,1,1,0,1,-1,-1,-1,1,1,0,0,0,0,0,0,0,0],[-1,0,1,1,0,1,-1,-1,0,0,0,0,0,0,0,0,0,1],[-1,-1,1,1,0,1,1,-1,0,0,0,0,0,1,0,0,0,0],[-1,-1,0,0,1,0,1,0,1,0,0,1,0,0,0,0,0,0],[0,0,1,0,1,-1,0,-1,0,0,0,0,0,0,0,1,0,0],[-1,1,0,1,0,-1,-1,1,1,0,0,0,0,1,0,0,0,0],[0,-1,1,1,1,0,0,-1,0,1,0,0,0,0,1,1,0,1],[-1,0,0,-1,0,0,0,1,1,0,0,0,0,0,0,1,0,0],[-1,1,-1,0,0,0,1,1,0,0,0,0,1,1,1,0,0,1],[0,1,-1,1,-1,1,1,0,-1,1,0,0,0,0,0,0,0,0],[-1,1,1,0,1,-1,-1,0,0,0,0,0,1,0,0,0,1,0],[1,0,0,0,-1,1,0,-1,1,0,1,1,0,0,0,0,0,0],[1,0,1,0,0,0,-1,1,-1,0,1,0,0,0,0,0,0,0],[1,1,0,-1,1,0,0,-1,-1,0,0,1,0,0,0,1,0,0],[1,0,1,-1,0,1,0,0,-1,0,1,0,0,0,0,0,0,0],[1,1,-1,-1,0,-1,1,0,1,0,0,0,0,1,0,0,0,0],[1,0,1,-1,0,-1,1,0,-1,0,0,0,0,1,0,0,0,0],[1,0,0,1,0,0,-1,0,0,0,0,0,0,0,0,0,1,1],[-1,1,0,-1,1,-1,0,0,1,0,0,0,0,0,0,1,0,0],[1,0,0,0,1,0,0,-1,0,0,1,1,1,0,1,1,0,1],[1,0,-1,0,1,0,1,-1,0,0,1,0,1,0,1,0,0,1],[1,0,-1,-1,0,1,0,1,-1,0,1,0,0,1,0,1,0,0],[1,0,-1,-1,1,0,1,1,-1,0,0,0,0,0,1,0,0,0],[-1,1,0,1,0,0,0,-1,1,0,0,1,0,1,1,0,0,0],[0,-1,-1,0,1,1,1,0,0,1,0,0,0,0,0,0,0,0],[0,1,0,0,-1,-1,0,0,1,0,0,1,1,0,0,1,0,0],[1,0,0,1,1,-1,-1,-1,0,0,0,0,0,0,0,0,0,1],[1,-1,-1,0,-1,0,1,0,1,0,0,0,0,0,0,0,1,0],[-1,1,0,0,0,-1,0,1,1,0,0,1,1,1,0,1,0,0],[-1,-1,0,1,1,0,1,-1,0,0,0,1,0,0,0,0,0,0],[-1,1,1,-1,-1,1,0,0,0,0,0,0,0,0,0,1,0,1],[1,0,-1,0,1,0,0,0,-1,0,0,0,0,0,1,1,1,0],[1,1,0,-1,1,-1,0,0,-1,0,0,1,0,0,0,0,0,0],[0,0,1,1,-1,1,-1,-1,0,0,1,0,0,0,0,0,0,1],[0,0,-1,0,-1,1,1,1,0,0,0,0,0,0,0,0,0,1],[-1,1,1,0,-1,0,-1,0,1,0,0,0,1,0,0,0,0,0],[1,-1,-1,1,0,0,0,1,0,0,0,0,0,1,1,1,0,1],[1,-1,1,0,1,0,0,-1,-1,0,0,0,0,0,0,1,0,0],[-1,-1,1,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0],[0,-1,0,0,0,1,0,1,0,0,0,0,0,0,0,1,0,1],[1,-1,0,-1,-1,1,0,0,1,0,0,1,0,0,0,0,1,0],[1,-1,1,0,1,0,-1,0,-1,0,0,0,0,0,0,0,1,0],[1,1,0,1,0,-1,-1,1,-1,0,0,1,0,0,0,0,0,0],[0,1,-1,1,0,1,-1,-1,1,0,0,0,0,1,0,0,0,0],[-1,1,-1,-1,0,1,1,-1,1,0,0,0,0,1,0,0,0,0],[-1,1,0,-1,0,0,0,1,1,0,0,0,0,0,0,1,0,0],[-1,0,1,1,-1,0,-1,1,1,0,0,0,0,0,1,0,0,0],[1,1,0,-1,-1,1,1,0,-1,0,0,1,0,0,0,0,0,0],[0,1,1,0,1,0,-1,0,-1,0,0,0,0,0,0,0,1,0],[0,-1,1,0,-1,1,-1,1,0,0,0,0,0,0,0,0,0,1],[1,0,-1,0,-1,1,1,1,-1,0,0,0,1,0,0,0,0,0],[-1,-1,1,1,0,-1,1,0,0,0,0,0,0,1,0,0,0,0],[1,0,1,-1,-1,1,-1,1,-1,0,1,0,0,0,0,0,0,0],[0,0,1,0,1,0,-1,0,0,1,0,0,0,0,0,0,0,1],[0,0,-1,1,0,1,0,1,-1,0,0,0,0,1,0,0,0,0],[0,1,0,-1,0,-1,0,1,0,0,0,0,0,1,0,0,0,0],[1,0,-1,0,0,0,1,-1,1,0,1,0,1,1,1,0,0,0],[1,0,-1,-1,1,1,-1,1,0,0,1,0,0,0,0,0,0,1],[1,-1,0,-1,1,0,-1,1,0,0,0,0,0,0,0,0,0,1],[1,0,1,1,0,-1,-1,-1,0,0,1,0,0,0,0,0,0,1],[-1,0,1,0,-1,1,1,-1,0,0,1,0,0,0,0,0,0,1],[1,-1,0,-1,1,1,1,-1,0,0,0,1,0,0,0,0,0,1],[1,-1,-1,1,1,-1,0,1,0,0,0,0,0,0,0,0,0,1],[-1,0,0,1,0,1,-1,0,1,0,1,1,0,1,0,0,1,0],[0,0,1,-1,0,0,0,0,1,1,1,0,0,1,1,1,1,0],[-1,1,1,1,1,-1,0,-1,-1,0,0,0,0,0,0,1,0,0],[-1,1,0,-1,1,0,1,0,0,0,0,1,0,0,1,0,1,1],[1,0,1,0,0,-1,-1,-1,1,0,1,0,1,1,0,0,0,0],[1,0,0,0,-1,1,0,1,-1,0,1,1,1,0,0,1,0,0],[-1,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0],[0,1,0,0,0,-1,1,1,-1,0,0,1,0,1,0,0,0,0],[-1,1,0,-1,0,-1,1,0,1,0,0,0,0,1,0,0,0,0],[0,1,0,0,1,0,1,-1,-1,0,0,1,0,0,0,0,0,0],[1,0,-1,-1,0,1,-1,0,1,0,0,0,0,1,0,0,0,0],[0,0,0,-1,1,0,1,-1,1,1,1,1,0,0,1,0,0,0],[0,1,-1,1,0,0,-1,1,-1,0,0,0,0,1,1,0,0,0],[0,-1,0,1,-1,1,-1,1,1,0,0,1,0,0,0,0,0,0],[0,1,-1,1,0,-1,1,-1,1,1,0,0,0,0,0,0,0,0],[0,1,0,1,-1,-1,1,1,-1,1,0,1,0,0,0,0,0,0],[0,1,-1,1,-1,0,1,-1,1,1,0,0,0,0,0,0,0,0],[0,-1,1,0,0,1,0,1,-1,0,0,0,1,1,0,1,0,0],[0,-1,0,1,1,-1,1,0,0,1,0,1,0,0,0,0,1,1],[0,1,-1,-1,1,0,1,-1,0,1,0,0,0,0,1,0,0,1],[1,-1,0,-1,-1,1,1,1,0,0,0,0,0,0,0,0,0,1],[-1,0,-1,0,1,1,0,1,-1,0,1,0,0,0,0,0,0,0],[-1,0,-1,1,1,0,1,-1,1,0,1,0,0,0,0,0,0,0],[1,1,-1,0,1,1,-1,-1,0,0,0,0,0,0,0,0,0,1],[0,0,-1,0,1,1,0,-1,0,0,0,0,1,0,0,0,0,0],[0,-1,1,0,1,-1,0,1,0,0,0,0,0,0,0,1,0,0],[0,-1,-1,1,1,-1,1,1,0,1,0,0,0,0,0,0,0,1],[1,-1,1,0,0,-1,0,1,-1,0,0,0,1,1,0,1,0,0],[0,0,-1,0,0,1,1,-1,1,0,1,0,0,0,0,0,0,0],[0,-1,1,1,-1,1,1,0,-1,1,0,0,0,0,0,0,1,0],[1,-1,0,-1,0,0,0,1,1,0,0,1,0,1,1,1,0,0],[-1,0,-1,-1,1,1,0,1,0,0,1,0,0,0,0,1,0,0],[1,1,0,-1,1,0,1,-1,-1,0,0,1,0,0,0,0,0,0],[1,-1,1,0,0,-1,-1,1,1,0,0,0,0,1,0,0,0,0],[0,0,0,0,1,1,-1,0,0,0,0,0,1,0,0,0,0,0],[1,0,0,1,0,1,-1,0,-1,0,0,0,0,1,0,0,1,0],[0,-1,-1,0,-1,1,1,0,1,1,0,0,0,0,0,0,1,0],[1,-1,1,0,0,-1,0,1,0,0,0,0,0,1,0,1,0,0],[0,0,0,1,1,0,0,-1,0,1,1,1,0,0,1,1,0,1],[1,1,0,-1,0,0,-1,1,0,0,0,1,0,1,1,0,0,1],[1,-1,-1,0,1,-1,0,1,0,0,0,0,0,0,0,0,0,1],[0,0,-1,-1,1,-1,0,1,1,1,1,0,0,0,0,1,0,0],[1,0,-1,1,1,-1,0,0,0,0,0,0,0,0,0,0,0,1],[0,1,0,-1,1,-1,0,0,1,1,0,1,0,0,0,1,1,0],[1,0,0,1,1,-1,-1,1,-1,0,0,1,0,0,0,0,0,0],[1,-1,0,1,-1,-1,0,0,1,0,0,0,0,0,0,1,1,0],[0,1,0,1,0,0,-1,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,1,1,0,-1,0,-1,0,0,0,0,0,1,0,1,0],[-1,-1,1,-1,1,0,0,1,0,0,0,0,0,0,0,1,0,0],[-1,1,0,-1,0,0,1,0,1,0,0,1,0,1,1,0,1,0],[0,1,-1,1,0,0,-1,-1,1,0,0,0,0,1,0,0,0,0],[1,0,1,0,0,-1,0,-1,1,0,1,0,1,1,0,1,0,0],[0,0,0,0,-1,0,-1,1,1,1,0,1,1,0,1,0,0,0],[1,-1,0,0,0,1,-1,0,1,0,0,1,1,1,0,0,1,0],[0,1,0,-1,-1,0,1,-1,1,0,0,0,0,0,1,0,0,0],[1,0,0,-1,-1,0,1,0,1,0,0,0,0,0,1,0,1,0],[-1,1,1,1,-1,-1,0,1,0,0,0,0,0,0,0,0,0,1],[1,0,-1,0,-1,1,0,0,0,0,1,0,0,0,0,1,1,0],[0,0,-1,1,-1,0,0,1,1,0,0,0,0,0,0,1,0,0],[1,-1,1,1,-1,0,0,1,-1,0,0,0,0,0,0,1,0,0],[0,0,-1,0,0,1,1,-1,1,0,1,0,0,0,0,0,0,0],[0,1,1,1,-1,-1,1,-1,0,1,0,0,0,0,0,0,0,0],[-1,-1,1,1,0,0,1,-1,0,0,0,0,0,1,0,0,0,0],[1,-1,0,0,0,1,0,1,-1,0,0,0,1,1,0,1,0,0],[0,0,0,0,-1,1,0,-1,1,0,1,1,0,0,0,0,0,0],[1,-1,0,0,1,0,0,1,-1,0,0,1,1,0,1,1,0,0],[-1,0,1,0,0,1,0,0,0,0,1,0,1,1,0,1,1,1],[-1,0,0,0,1,-1,0,1,1,0,1,1,1,0,0,1,0,0],[1,0,0,0,-1,-1,1,-1,1,0,1,0,1,0,0,0,0,0],[1,0,-1,0,0,0,0,1,-1,0,0,0,0,1,1,1,0,0],[1,0,-1,1,0,-1,-1,1,0,0,1,0,0,1,0,0,0,1],[1,1,0,1,0,-1,-1,0,0,0,0,1,0,0,0,0,0,0],[1,0,1,1,0,0,0,-1,-1,0,0,0,0,0,0,1,0,0],[0,1,1,1,-1,-1,1,-1,0,1,0,0,0,0,0,0,0,0],[-1,1,-1,1,0,0,0,1,0,0,0,0,0,1,0,0,0,0],[0,1,1,0,-1,0,-1,-1,1,1,0,0,1,0,1,0,0,0],[-1,1,-1,1,0,-1,1,0,1,0,0,0,0,0,0,0,1,0],[1,0,-1,0,-1,1,1,-1,1,0,1,0,0,0,0,0,0,0],[0,-1,-1,1,0,1,0,0,1,1,0,0,0,1,0,0,0,0],[1,0,-1,1,0,1,-1,0,0,0,0,0,0,1,0,0,0,0],[0,-1,1,0,0,1,-1,1,0,0,0,0,0,0,0,0,0,1],[1,0,1,0,1,0,-1,-1,0,0,0,0,0,0,0,0,0,1],[1,1,-1,-1,-1,1,0,0,0,0,0,0,0,0,0,1,0,0],[0,0,0,-1,-1,1,0,1,1,1,1,1,0,0,0,1,0,0],[-1,1,1,-1,1,0,0,-1,1,0,0,0,0,0,0,1,0,0],[0,-1,1,0,0,1,1,-1,0,0,0,0,0,1,0,0,0,0],[0,1,0,0,-1,-1,0,1,1,0,0,0,1,0,0,1,0,0],[-1,1,-1,-1,0,1,1,1,-1,0,0,0,0,1,0,0,0,0],[1,-1,1,-1,1,0,0,1,-1,0,0,0,0,0,0,1,0,0],[0,1,0,1,0,0,-1,-1,1,1,0,1,0,1,1,0,0,0],[0,0,1,-1,-1,1,0,1,-1,1,0,0,0,0,0,0,0,0],[1,0,0,-1,0,1,-1,1,0,0,1,1,0,1,0,0,0,1],[0,-1,-1,0,1,1,1,0,0,1,0,0,0,0,0,0,0,0],[-1,0,-1,-1,1,1,0,0,1,0,1,0,0,0,0,1,1,0],[1,1,0,-1,1,0,-1,0,0,0,0,1,0,0,1,0,1,1],[-1,1,1,0,1,-1,-1,0,1,0,0,0,1,0,0,0,0,0],[1,1,0,1,-1,0,-1,1,-1,0,0,1,0,0,0,0,0,0],[0,-1,-1,-1,1,1,0,0,1,1,0,0,0,0,0,0,0,0],[1,-1,0,-1,1,0,1,1,-1,0,0,1,0,0,0,0,0,0],[1,0,0,1,0,1,-1,-1,0,0,0,0,0,1,0,0,0,1],[0,1,1,-1,-1,1,1,-1,0,1,0,0,0,0,0,0,0,1],[0,1,-1,0,0,0,-1,0,1,1,0,0,1,1,0,0,0,0],[1,-1,1,0,-1,1,-1,1,0,0,0,0,0,0,0,0,0,1],[1,0,-1,-1,0,-1,1,0,1,0,0,0,0,1,0,0,0,0],[0,1,-1,1,-1,-1,1,0,0,0,0,0,0,0,0,0,0,1],[-1,1,1,0,0,1,1,-1,-1,0,0,0,0,1,0,0,0,0],[0,0,-1,1,-1,0,1,0,1,1,1,0,0,0,1,0,1,0],[1,-1,0,-1,1,0,1,1,-1,0,0,1,0,0,0,0,0,0],[1,1,0,-1,-1,1,-1,0,1,0,0,1,0,0,0,0,0,0],[0,-1,-1,1,-1,1,1,1,0,1,0,0,0,0,0,0,0,0],[-1,-1,0,0,1,1,1,-1,0,0,0,1,0,0,0,0,0,0],[0,-1,1,0,-1,0,1,0,1,0,0,0,0,0,0,0,1,0],[0,-1,1,0,0,1,-1,1,-1,1,0,0,0,0,0,0,0,0],[-1,1,1,1,-1,-1,-1,1,0,0,0,0,0,0,0,0,0,1],[1,0,0,1,0,-1,-1,0,1,0,0,0,0,1,0,0,0,0],[-1,-1,0,1,0,0,1,0,1,0,0,1,0,0,0,0,1,0],[0,1,1,-1,0,-1,-1,0,1,1,0,0,0,1,0,0,0,0],[1,-1,1,0,0,-1,-1,1,1,0,0,0,0,1,0,0,0,0],[1,-1,-1,1,0,-1,0,1,1,0,0,0,0,1,0,1,0,0],[-1,0,1,-1,0,0,1,-1,1,0,1,0,0,1,1,0,0,0],[-1,0,0,1,0,-1,-1,1,1,0,0,1,0,0,0,0,0,0],[0,1,0,-1,-1,1,0,1,0,1,0,0,0,0,0,1,0,0],[0,1,0,-1,0,0,1,-1,1,0,0,1,0,1,0,0,0,0],[0,0,0,-1,1,1,0,-1,1,1,1,1,0,0,0,1,0,0],[0,0,1,-1,-1,1,1,0,0,0,0,0,0,0,0,0,0,1],[1,-1,0,0,1,1,-1,0,0,0,0,1,1,0,0,0,1,1],[1,0,1,-1,1,0,-1,0,0,0,1,0,0,0,1,0,1,1],[0,1,-1,1,0,-1,1,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,-1,-1,1,-1,0,1,0,0,1,0,0,0,0,0,0],[-1,1,1,-1,1,1,0,-1,0,0,0,0,0,0,0,1,0,0],[-1,1,-1,0,0,0,1,0,1,0,0,0,0,0,0,0,1,0],[1,-1,0,0,0,1,-1,1,0,0,0,0,0,1,0,0,0,1],[0,0,0,1,0,1,-1,-1,1,1,1,1,0,1,0,0,0,0],[0,-1,1,0,0,1,-1,1,-1,1,0,0,0,0,0,0,0,0],[0,-1,1,1,-1,0,1,0,0,1,0,0,0,0,0,0,1,0],[1,0,1,0,1,-1,-1,0,0,0,1,0,1,0,0,0,1,1],[-1,0,1,0,1,1,0,-1,0,0,1,0,1,0,0,1,0,1],[-1,0,-1,-1,1,1,0,1,1,0,1,0,0,0,0,1,0,0],[1,1,0,0,0,-1,-1,1,0,0,0,1,1,1,0,0,0,1],[1,-1,-1,0,1,0,0,1,-1,0,0,0,0,0,1,0,0,0],[1,1,0,1,-1,1,0,-1,-1,0,0,0,0,0,0,1,0,0],[0,-1,1,1,1,-1,0,0,-1,0,0,0,0,0,0,1,0,0],[1,-1,-1,-1,0,1,0,1,1,0,0,0,0,1,0,1,0,0],[-1,0,0,1,-1,1,0,0,1,0,0,1,0,0,0,0,0,0],[1,1,-1,0,-1,1,0,1,-1,0,0,0,0,0,0,1,0,0],[0,1,1,0,1,0,0,-1,-1,0,0,0,0,0,0,1,0,0],[0,0,1,-1,-1,1,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,-1,-1,0,1,1,1,-1,0,1,0,0,1,0,0,0,0],[-1,1,1,0,0,-1,1,0,0,0,0,0,0,1,0,0,0,0],[-1,1,0,-1,0,1,0,0,1,0,0,0,0,0,0,1,0,0],[-1,-1,0,0,1,1,1,1,-1,0,0,1,0,0,0,0,0,0],[-1,1,1,0,-1,-1,-1,1,1,0,0,0,1,0,0,0,0,0],[0,1,-1,0,-1,1,1,1,-1,1,0,0,0,0,0,0,0,0],[-1,1,1,1,-1,0,0,0,0,0,0,0,0,0,0,0,0,1],[-1,1,0,-1,-1,1,1,0,0,0,0,0,0,0,0,0,0,1],[1,1,-1,0,0,0,0,1,-1,0,0,0,0,1,1,0,0,0],[1,0,-1,-1,-1,1,1,1,0,0,0,0,0,0,0,0,0,1],[-1,0,-1,0,1,1,1,-1,0,0,1,0,0,0,0,0,0,0],[-1,0,1,1,1,-1,0,1,-1,0,1,0,0,0,0,1,0,0],[1,1,0,0,-1,0,1,-1,-1,0,0,1,1,0,1,0,0,0],[0,1,0,-1,1,0,1,-1,0,0,0,1,0,0,0,0,0,0],[1,1,-1,1,0,0,-1,0,0,0,0,0,0,1,1,0,1,1],[1,-1,0,1,1,0,0,0,-1,0,0,1,0,0,1,1,1,0],[0,1,-1,0,-1,0,1,0,0,0,0,0,0,0,1,0,0,1],[0,0,1,1,-1,0,0,0,-1,1,1,0,0,0,0,1,1,0],[0,0,0,0,1,0,-1,1,-1,0,1,0,0,0,0,0,0,0],[0,1,1,1,0,-1,-1,0,-1,1,0,0,0,0,0,0,1,0],[0,1,0,0,-1,1,0,0,-1,1,0,1,0,0,0,1,1,0],[-1,1,-1,0,0,1,-1,0,1,0,0,0,1,1,0,0,1,0],[-1,0,1,-1,1,-1,0,1,1,0,0,0,0,0,0,1,0,0],[0,1,-1,1,0,0,0,-1,0,0,0,0,0,0,0,1,0,1],[0,1,-1,-1,1,1,0,0,-1,0,0,0,0,0,0,0,1,0],[0,0,1,-1,-1,1,1,0,0,0,0,0,0,0,0,0,0,1],[1,0,1,1,-1,-1,-1,1,0,0,1,0,0,0,0,0,0,0],[0,-1,0,1,0,1,0,1,-1,0,0,0,0,1,0,0,0,0],[-1,1,-1,0,1,1,1,-1,0,0,0,0,1,0,0,0,0,0],[1,1,-1,-1,0,1,0,0,-1,0,0,0,0,0,0,1,0,0],[-1,-1,0,0,0,1,0,1,1,0,0,1,0,0,0,0,0,0],[-1,1,-1,1,0,0,1,-1,0,0,0,0,0,0,0,0,0,1],[-1,-1,0,1,0,1,1,-1,1,0,0,1,0,1,0,0,0,0],[0,-1,1,0,-1,1,1,0,-1,1,0,0,1,0,0,0,1,0],[0,1,0,-1,1,1,-1,0,0,1,0,0,0,0,0,0,1,0],[0,1,0,1,-1,0,1,0,-1,1,0,0,0,0,0,0,0,0],[0,0,-1,1,-1,1,1,-1,0,1,1,0,0,0,0,0,0,0],[0,1,0,1,1,0,0,-1,-1,0,0,0,0,0,1,1,0,0],[1,0,0,0,1,-1,-1,1,-1,0,0,1,0,0,0,0,0,0],[-1,-1,0,-1,1,1,1,1,0,0,0,1,0,0,0,0,0,0],[0,1,0,1,1,-1,1,-1,-1,0,0,1,0,0,0,0,0,0],[0,0,0,1,0,-1,1,1,-1,1,0,1,0,0,0,0,0,0],[0,1,-1,1,1,0,0,-1,-1,0,0,0,0,0,1,1,0,0],[1,-1,-1,1,0,0,-1,0,1,0,0,0,0,1,0,0,0,0],[0,1,0,-1,0,-1,0,1,1,0,0,0,0,1,0,0,0,0],[1,-1,1,1,0,-1,0,0,0,0,0,0,0,0,0,1,0,0],[1,1,-1,1,1,0,-1,-1,0,0,0,0,0,0,0,0,0,1],[1,0,-1,1,1,0,-1,0,0,0,1,0,0,0,1,0,1,1],[-1,0,1,-1,0,1,1,1,-1,0,0,0,0,1,0,0,0,0],[1,1,-1,0,0,0,-1,0,0,0,0,0,0,1,1,0,1,1],[-1,1,-1,-1,1,0,0,0,1,0,0,0,0,0,0,1,0,0],[1,0,-1,1,0,-1,-1,1,1,0,0,0,0,1,0,0,0,0],[-1,-1,1,1,1,-1,0,1,-1,0,0,0,0,0,0,1,0,0],[1,0,0,-1,-1,1,1,0,0,0,1,1,0,0,0,0,1,1],[1,1,0,0,-1,-1,0,1,-1,0,0,1,1,0,0,0,0,0],[0,0,1,-1,0,-1,1,-1,1,0,0,0,0,1,0,0,0,0],[0,-1,-1,1,0,1,0,0,1,1,0,0,0,1,0,0,0,0],[0,1,0,1,-1,-1,-1,0,1,0,0,1,0,0,0,0,0,0],[1,1,0,0,-1,0,-1,1,0,0,0,1,0,0,0,0,0,0],[-1,1,0,1,1,0,0,0,-1,0,0,1,0,0,1,1,1,0],[1,0,-1,1,-1,-1,0,0,1,0,0,0,0,0,0,1,0,0],[0,-1,-1,1,1,-1,-1,1,1,1,0,0,0,0,0,0,0,0],[0,0,0,0,-1,1,1,0,0,0,1,1,0,0,0,0,1,1],[1,-1,0,1,0,1,-1,-1,0,0,0,0,0,1,0,0,0,1],[1,0,1,-1,0,0,1,0,-1,0,1,0,0,1,1,0,1,0],[1,1,0,-1,-1,1,-1,0,1,0,0,1,0,0,0,0,0,0],[1,-1,1,-1,1,1,-1,-1,0,0,0,0,0,0,0,0,0,1],[0,-1,0,1,1,-1,-1,1,0,0,0,1,0,0,0,0,0,0],[0,0,-1,1,1,-1,0,0,1,1,0,0,0,0,0,0,0,0],[-1,1,1,-1,-1,0,0,0,1,0,0,0,0,0,1,1,0,0],[1,-1,1,1,0,-1,-1,1,0,0,0,0,0,1,0,0,0,1],[0,1,-1,-1,-1,1,1,1,0,0,0,0,0,0,0,0,0,1],[1,0,0,1,-1,1,-1,-1,1,0,1,1,0,0,0,0,0,0],[0,-1,1,0,1,-1,-1,1,1,1,0,0,0,0,0,0,0,0],[1,1,-1,-1,-1,1,0,1,0,0,0,0,0,0,0,1,0,0],[0,1,1,-1,1,1,-1,-1,0,1,0,0,0,0,0,0,0,1],[1,1,-1,0,0,0,-1,1,-1,0,0,0,0,1,1,0,0,0],[0,0,0,1,0,1,-1,1,-1,0,0,0,0,1,0,0,0,0],[-1,-1,0,1,0,1,-1,1,0,0,0,1,0,1,0,0,0,0],[0,-1,1,-1,1,0,0,1,-1,0,0,0,0,0,0,1,0,0],[1,1,0,-1,0,0,1,-1,0,0,0,1,0,0,0,0,0,0],[-1,0,0,-1,0,1,0,0,1,0,0,1,0,0,0,1,0,0],[0,1,0,1,-1,1,-1,1,-1,1,0,1,0,0,0,0,0,0],[0,0,-1,-1,0,1,0,1,1,0,0,0,0,0,0,1,0,0],[-1,1,-1,1,0,0,1,1,-1,0,0,0,0,1,1,0,0,0],[-1,0,-1,-1,1,1,0,0,1,0,1,0,0,0,0,1,1,0],[-1,0,-1,1,1,0,0,0,0,0,1,0,0,0,1,0,0,0],[1,1,-1,-1,1,0,0,0,0,0,0,0,0,0,1,1,1,1],[0,0,-1,0,1,-1,1,1,0,0,0,0,0,0,0,0,0,1],[1,0,1,-1,0,0,0,0,0,0,1,0,0,1,1,1,1,1],[1,0,-1,0,0,0,1,1,-1,0,0,0,0,0,1,0,0,0],[-1,0,1,1,0,0,1,0,-1,0,0,0,0,1,0,0,0,0],[-1,0,0,1,-1,0,0,1,1,0,0,0,0,0,0,1,0,0],[0,0,0,1,1,0,1,-1,-1,1,1,1,0,0,1,0,0,0],[0,-1,1,1,1,-1,0,-1,1,1,0,0,0,0,0,1,0,0],[-1,1,1,-1,0,-1,1,1,0,0,0,0,0,1,0,0,0,0],[1,1,0,0,-1,-1,0,0,1,0,0,1,1,0,0,0,0,0],[0,1,-1,0,-1,1,1,0,0,1,0,0,1,0,0,0,1,1],[-1,0,-1,0,1,1,0,-1,1,0,1,0,1,0,0,0,0,0],[-1,1,1,1,0,1,0,-1,-1,0,0,0,0,1,0,1,0,0],[1,0,-1,1,1,0,0,-1,0,0,1,0,0,0,1,1,0,1],[1,-1,-1,1,0,1,-1,0,1,0,0,0,0,1,0,0,0,0],[1,1,-1,0,0,0,1,-1,0,0,0,0,1,0,0,0,0,0],[-1,0,1,-1,0,-1,1,1,0,0,0,0,0,1,0,0,0,0],[-1,1,1,1,0,0,0,-1,0,0,0,0,0,0,0,0,0,1],[0,1,0,0,1,-1,0,-1,0,0,0,0,0,0,0,0,0,1],[1,0,0,1,1,-1,0,-1,0,0,1,1,0,0,0,1,0,1],[1,1,-1,-1,-1,0,0,1,0,0,0,0,0,0,1,1,0,1],[1,0,-1,0,0,0,-1,1,1,0,0,0,0,1,0,0,0,0],[1,0,0,0,-1,1,1,0,-1,0,0,0,1,0,0,0,0,0],[0,-1,1,-1,0,1,0,1,0,0,0,0,0,0,0,0,0,1],[-1,1,0,1,0,-1,1,0,-1,0,0,1,0,1,0,0,1,0],[0,-1,0,0,1,-1,1,0,1,1,0,1,1,0,0,0,1,0],[1,1,-1,0,0,-1,0,-1,1,0,0,0,0,1,0,0,0,0],[0,1,0,1,-1,-1,0,0,1,1,0,0,0,0,0,1,0,0],[-1,0,1,1,1,-1,0,0,0,0,0,0,0,0,0,1,0,0],[-1,0,0,0,0,-1,1,1,0,0,0,0,0,0,0,0,0,1],[-1,0,1,0,0,-1,1,0,1,0,1,0,1,1,0,0,1,0],[1,0,-1,1,1,0,0,0,-1,0,0,0,0,0,1,0,0,0],[-1,-1,0,0,0,1,0,1,1,0,0,1,0,0,0,0,0,0],[0,-1,1,1,1,-1,0,1,-1,0,0,0,0,0,0,1,0,0],[-1,1,-1,0,1,1,0,0,0,0,0,0,1,0,0,1,1,1],[0,0,-1,0,0,1,1,1,-1,1,0,0,0,0,0,0,0,0],[-1,0,-1,1,0,1,0,0,1,0,1,0,0,1,0,0,0,0],[0,-1,0,0,1,0,-1,1,1,1,0,0,0,0,0,0,0,0],[0,0,1,1,-1,-1,0,1,-1,1,0,0,0,0,0,0,0,0],[0,1,0,-1,0,-1,1,1,0,0,0,0,0,1,0,0,0,0],[0,1,0,1,-1,-1,1,0,0,1,0,0,0,0,0,0,0,0],[-1,0,0,1,1,-1,1,-1,1,0,0,1,0,0,0,0,0,0],[-1,0,-1,1,0,1,0,-1,1,0,1,0,0,1,0,0,0,0],[1,-1,-1,-1,1,1,0,1,0,0,0,0,0,0,0,0,0,1],[1,1,-1,1,0,-1,-1,1,0,0,0,0,0,1,0,0,0,1],[0,1,1,0,-1,0,1,0,-1,1,0,0,0,0,0,0,0,0],[1,-1,0,0,0,0,1,1,-1,0,0,0,1,0,0,0,0,0],[0,1,1,-1,-1,0,1,0,-1,1,0,0,0,0,1,0,0,0],[0,0,0,-1,1,0,0,-1,1,1,0,0,0,0,0,0,0,0],[0,-1,-1,0,1,1,0,0,0,1,0,0,0,0,0,0,0,0],[-1,-1,0,1,0,0,0,1,0,0,0,1,0,1,0,0,0,1],[-1,0,-1,1,0,1,0,1,0,0,1,0,0,1,0,0,0,0],[0,1,-1,1,-1,0,0,1,0,1,0,0,0,0,1,1,0,1],[0,0,1,0,0,0,0,-1,1,1,1,0,1,1,1,1,0,0],[1,-1,0,0,-1,0,0,1,1,0,0,0,0,0,0,1,0,0],[1,1,0,-1,-1,0,1,-1,0,0,0,0,0,0,1,0,0,0],[-1,1,-1,0,0,1,1,0,0,0,0,0,0,1,0,0,1,0],[0,1,1,-1,-1,0,1,0,-1,1,0,0,0,0,1,0,0,0],[0,1,1,0,0,-1,1,-1,0,1,0,0,1,1,0,0,0,1],[-1,0,1,1,-1,0,0,1,0,0,0,0,0,0,0,0,0,1],[-1,-1,0,0,1,0,1,0,1,0,0,1,0,0,0,0,0,0],[0,1,-1,-1,0,1,0,1,-1,0,0,0,0,1,0,0,0,0],[0,0,-1,-1,-1,1,1,1,0,0,0,0,0,0,0,0,0,1],[1,0,0,1,-1,-1,0,0,0,0,0,0,0,0,0,1,0,0],[0,-1,0,1,1,0,-1,-1,1,1,0,1,0,0,1,0,0,0],[-1,1,1,0,1,0,-1,0,-1,0,0,0,1,0,0,0,1,0],[1,-1,-1,0,0,1,-1,1,0,0,0,0,0,1,0,0,0,0],[0,1,0,0,0,-1,1,-1,1,1,0,0,0,1,0,0,0,0],[1,-1,0,0,1,0,-1,1,0,0,0,0,0,0,0,0,0,1],[0,1,0,1,-1,-1,-1,1,1,0,0,1,0,0,0,0,0,0],[0,-1,1,0,0,0,-1,1,1,0,0,0,0,0,1,0,0,0],[1,1,-1,0,1,-1,1,-1,0,0,0,0,0,0,0,0,0,1],[-1,0,-1,1,0,0,1,0,1,0,1,0,0,0,0,0,0,0],[1,1,0,0,-1,0,1,-1,0,0,0,1,1,0,1,0,0,1],[1,-1,0,0,1,0,1,-1,-1,0,0,1,1,0,1,0,0,0],[1,-1,0,-1,0,1,1,0,-1,0,0,1,0,1,0,0,1,0],[0,-1,1,1,0,-1,0,1,0,0,0,0,0,0,0,1,0,0],[1,0,1,-1,0,0,0,0,-1,0,1,0,0,0,0,0,0,0],[-1,0,0,-1,1,0,1,1,0,0,1,1,0,0,1,0,0,1],[-1,0,1,0,-1,0,1,1,0,0,0,0,0,0,0,0,0,1],[-1,1,0,0,1,-1,0,0,1,0,0,0,0,0,0,0,1,0],[0,1,1,-1,0,0,1,-1,0,1,0,0,0,1,1,0,0,1],[0,1,-1,1,-1,0,0,1,0,1,0,0,0,0,1,1,0,1],[-1,1,-1,0,0,0,0,1,1,0,0,0,1,1,1,1,0,0],[1,0,1,1,1,-1,0,-1,-1,0,0,0,0,0,0,1,0,0],[1,0,1,0,0,1,-1,-1,0,0,0,0,0,0,0,0,0,1],[-1,0,0,1,1,0,0,-1,1,0,0,0,0,0,1,0,0,0],[0,0,1,-1,0,1,1,0,-1,0,0,0,0,1,0,0,0,0],[0,-1,0,1,0,1,-1,1,-1,0,0,0,0,1,0,0,0,0],[0,0,1,-1,0,1,-1,1,0,1,0,0,0,0,0,0,0,0],[0,1,1,-1,0,0,0,0,-1,1,0,0,0,0,0,0,0,0],[-1,0,1,1,0,0,0,1,-1,0,0,0,0,1,0,0,0,0],[1,-1,0,1,1,-1,0,0,0,0,0,1,0,0,0,1,1,1],[0,1,-1,0,-1,1,0,-1,1,0,0,0,0,0,0,1,0,0],[-1,0,-1,0,1,0,-1,1,1,0,1,0,1,0,0,0,0,0],[-1,1,0,1,-1,1,0,0,0,0,0,1,0,0,0,1,0,1],[1,-1,0,0,0,0,1,1,-1,0,0,0,1,0,0,0,0,0],[-1,0,0,-1,1,-1,1,1,0,0,1,1,0,0,0,0,0,1],[1,1,-1,1,1,-1,0,-1,0,0,0,0,0,0,0,0,0,1],[-1,-1,0,0,-1,1,1,0,1,0,0,1,0,0,0,0,1,0],[0,1,1,-1,1,-1,0,-1,1,1,0,0,0,0,0,1,0,0],[0,-1,-1,-1,1,1,1,0,1,1,0,0,0,0,0,0,0,0],[-1,1,-1,0,-1,1,0,1,1,0,0,0,0,0,0,1,0,0],[-1,0,1,-1,1,1,0,0,0,0,0,0,0,0,0,1,0,0],[-1,0,0,0,0,1,1,1,-1,0,1,1,0,1,0,0,0,0],[1,0,0,-1,0,1,0,-1,1,0,1,1,0,1,0,1,0,0],[0,-1,1,1,-1,0,0,0,0,1,0,0,0,0,0,0,1,1],[0,1,-1,1,0,1,1,-1,-1,1,0,0,0,1,0,0,0,0],[-1,1,1,-1,0,0,0,1,0,0,0,0,0,1,0,1,0,0],[0,-1,-1,1,0,1,0,1,0,1,0,0,0,1,0,0,0,0],[-1,1,0,0,1,-1,1,0,0,0,0,1,1,0,0,0,1,1],[0,0,1,-1,1,-1,0,0,1,1,1,0,0,0,0,1,1,0],[-1,1,0,-1,1,-1,1,0,1,0,0,1,0,0,0,0,1,0],[-1,0,0,-1,1,1,1,0,0,0,0,1,0,0,0,0,0,0],[-1,0,0,0,-1,1,1,1,0,0,0,0,0,0,0,0,0,1],[0,0,1,1,1,-1,0,-1,-1,0,0,0,0,0,0,1,0,0],[0,-1,-1,0,1,1,1,-1,1,1,0,0,0,0,0,0,0,0],[-1,1,1,1,1,-1,-1,0,0,0,0,0,0,0,0,0,1,0],[0,-1,-1,1,-1,0,0,1,1,1,0,0,0,0,0,1,0,0],[0,-1,1,1,-1,0,0,0,1,0,0,0,0,0,0,0,1,0],[1,0,-1,0,0,1,-1,0,1,0,0,0,0,1,0,0,0,0],[-1,1,1,0,0,-1,0,0,0,0,0,0,1,1,0,1,1,0],[-1,0,1,0,1,0,-1,-1,1,0,0,0,1,0,0,0,0,0],[0,-1,1,-1,-1,0,1,0,1,0,0,0,0,0,1,0,1,0],[-1,-1,1,1,0,1,0,0,-1,0,0,0,0,1,0,0,0,0],[-1,-1,1,0,1,1,0,1,-1,0,0,0,1,0,0,1,0,0],[-1,1,1,-1,-1,1,0,1,0,0,0,0,0,0,0,1,0,1],[0,-1,1,1,0,0,-1,0,0,0,0,0,0,0,0,0,1,0],[0,-1,-1,0,1,0,1,-1,1,1,0,0,0,0,0,0,0,0],[0,1,0,1,-1,-1,0,0,0,0,0,1,0,0,0,0,0,1],[-1,1,0,0,0,-1,1,1,0,0,0,1,1,1,0,0,0,1],[-1,1,-1,0,0,1,1,0,-1,0,0,0,0,1,0,0,0,0],[0,0,0,-1,-1,0,1,1,0,0,0,0,0,0,1,0,0,1],[0,-1,1,1,0,1,0,-1,-1,0,0,0,0,1,0,1,0,0],[0,0,-1,1,1,-1,0,1,0,0,1,0,0,0,0,0,0,1],[0,1,-1,1,-1,0,0,0,0,1,0,0,0,0,1,1,0,1],[0,1,-1,0,-1,0,1,0,1,0,0,0,0,0,0,0,1,0],[0,0,1,-1,0,0,-1,1,0,1,0,0,0,1,1,0,0,0],[0,-1,1,0,0,0,-1,1,1,0,0,0,0,0,1,0,0,0],[1,1,0,-1,1,0,0,-1,0,0,0,1,0,0,1,1,0,1],[1,1,-1,0,-1,1,0,-1,0,0,0,0,0,0,0,1,0,0],[1,0,1,-1,1,1,0,-1,-1,0,0,0,0,0,0,1,0,0],[0,-1,-1,1,0,0,0,1,1,1,0,0,0,0,0,1,0,0],[-1,1,1,1,-1,0,-1,-1,1,0,0,0,0,0,1,0,0,0],[0,-1,0,-1,1,1,1,-1,0,0,0,1,0,0,0,0,0,0],[1,1,-1,1,0,0,-1,-1,1,0,0,0,0,1,0,0,0,0],[1,-1,0,1,0,0,-1,-1,1,0,0,0,0,1,0,0,0,0],[1,0,1,-1,-1,0,1,1,-1,0,0,0,0,0,1,0,0,0],[-1,1,1,0,1,1,-1,-1,0,0,0,0,1,0,0,0,0,1],[-1,-1,1,1,0,-1,1,0,0,0,0,0,0,1,0,0,0,0],[-1,1,1,1,0,0,0,-1,0,0,0,0,0,0,0,0,0,1],[0,1,1,-1,0,0,0,0,0,1,0,0,0,0,0,0,0,0],[0,0,1,0,1,0,-1,1,-1,0,1,0,0,0,0,0,0,0],[0,-1,0,1,0,1,1,-1,0,0,0,0,0,1,0,0,0,0],[0,-1,-1,1,1,0,1,0,-1,1,0,0,0,0,1,0,0,0],[-1,-1,0,0,1,-1,1,0,1,0,0,1,0,0,0,0,0,0],[0,0,0,-1,1,-1,1,-1,1,1,1,1,0,0,0,0,0,0],[1,0,0,1,-1,1,-1,-1,0,0,1,1,0,0,0,0,0,1],[-1,1,1,-1,0,1,1,-1,0,0,0,0,0,1,0,0,0,1],[1,0,0,-1,0,1,-1,0,1,0,1,1,0,1,0,0,1,0],[0,0,1,1,-1,-1,1,-1,0,1,1,0,0,0,0,0,0,0],[0,1,0,1,1,-1,0,-1,-1,1,0,1,0,0,0,1,0,0],[1,1,0,-1,-1,1,1,-1,0,0,0,1,0,0,0,0,0,0],[-1,-1,1,0,0,1,1,1,-1,0,0,0,0,1,0,0,0,0],[0,0,1,1,-1,0,1,0,-1,1,0,0,0,0,0,0,0,0],[-1,0,1,1,0,-1,-1,1,1,0,1,0,0,1,0,0,0,0],[1,0,0,0,1,-1,0,1,-1,0,0,1,0,0,0,0,0,0],[0,-1,-1,1,0,1,0,1,0,1,0,0,0,1,0,0,0,0],[-1,1,-1,-1,1,1,0,-1,1,0,0,0,0,0,0,1,0,0],[1,0,-1,-1,0,1,-1,1,1,0,0,0,0,1,0,0,0,0],[0,1,0,1,1,-1,-1,-1,1,1,0,0,0,0,0,0,0,0],[1,1,0,-1,-1,1,0,-1,1,0,0,1,0,0,0,0,0,0],[0,-1,1,1,-1,-1,0,1,1,0,0,0,0,0,0,1,0,0],[0,1,-1,0,-1,1,0,0,1,0,0,0,0,0,0,1,0,0],[0,1,-1,0,0,0,-1,1,1,0,0,0,0,1,0,0,0,0],[0,-1,1,0,1,1,0,0,-1,1,0,0,1,0,0,1,1,0],[0,0,0,-1,1,0,1,1,-1,1,1,1,0,0,1,0,0,0],[-1,1,-1,1,-1,1,0,1,0,0,0,0,0,0,0,1,0,1],[1,0,0,-1,0,1,1,-1,0,0,0,1,0,1,0,0,0,0],[1,-1,0,0,-1,1,1,1,-1,0,0,0,1,0,0,0,0,0],[1,0,0,-1,1,-1,-1,1,0,0,1,1,0,0,0,0,0,1],[1,0,0,-1,-1,1,-1,1,0,0,0,1,0,0,0,0,0,0],[-1,1,-1,0,0,1,0,1,-1,0,0,0,0,1,0,0,0,0],[1,1,-1,0,-1,0,1,0,0,0,0,0,1,0,0,0,0,0],[0,1,0,0,-1,1,1,-1,0,1,0,1,0,0,0,0,0,0],[1,-1,0,1,0,1,0,-1,0,0,0,0,0,1,0,0,0,0],[-1,0,0,0,1,1,0,-1,1,0,1,1,1,0,0,1,0,0],[0,-1,1,1,1,-1,-1,0,0,1,0,0,0,0,0,0,1,1],[-1,1,0,1,1,-1,-1,0,1,0,0,0,0,0,0,0,1,0],[1,-1,1,1,0,-1,0,-1,1,0,0,0,0,1,0,0,0,0],[0,1,1,-1,-1,1,0,0,-1,1,0,0,0,0,0,0,0,0],[1,-1,0,1,-1,-1,0,1,1,0,0,0,0,0,0,1,0,0],[1,1,-1,1,0,0,-1,1,-1,0,0,0,0,1,1,0,0,0],[-1,-1,0,1,0,0,0,1,1,0,0,1,0,0,0,0,0,0],[1,-1,1,0,0,0,1,-1,0,0,0,0,0,1,0,0,0,0],[0,0,1,1,-1,-1,1,0,0,1,0,0,0,0,0,0,0,0],[1,0,1,0,-1,0,0,-1,1,0,1,0,0,0,0,0,0,0],[0,1,-1,1,1,0,-1,0,0,1,0,0,0,0,1,0,1,1],[-1,1,-1,1,0,1,-1,1,0,0,0,0,0,1,0,0,0,0],[-1,1,0,-1,0,0,1,1,-1,0,0,0,0,1,0,0,0,0],[0,1,0,-1,0,1,-1,1,0,1,0,0,0,1,0,0,0,0],[-1,-1,0,1,1,-1,1,1,0,0,0,1,0,0,0,0,0,0],[0,1,-1,1,-1,-1,0,1,1,0,0,0,0,0,0,1,0,0],[-1,1,1,1,-1,0,1,-1,0,0,0,0,0,0,0,0,0,1],[-1,1,0,-1,0,1,1,-1,1,0,0,1,0,0,0,0,0,0],[-1,1,-1,1,-1,1,0,0,1,0,0,0,0,0,0,1,0,0],[0,1,0,-1,0,1,0,-1,0,0,0,0,0,0,0,1,0,0],[1,-1,1,1,0,0,0,0,-1,0,0,0,0,0,0,1,0,0],[1,-1,1,-1,0,1,0,0,0,0,0,0,0,0,0,0,0,1],[1,1,-1,0,0,0,0,-1,0,0,0,0,1,0,1,1,0,1],[0,1,0,1,0,-1,0,0,-1,1,0,1,0,1,0,1,1,0],[1,0,0,0,-1,0,-1,0,1,0,1,1,1,0,1,0,1,0],[-1,1,0,1,1,-1,-1,0,1,0,0,0,0,0,0,0,1,0],[0,-1,0,1,1,0,-1,1,-1,0,0,0,0,0,1,0,0,0],[0,0,1,-1,1,0,0,1,-1,1,1,0,0,0,1,1,0,0],[0,1,-1,1,0,-1,0,-1,1,1,0,0,0,1,0,1,0,0],[0,-1,0,1,0,1,1,0,-1,1,0,1,0,1,0,0,1,0],[0,1,-1,1,0,-1,0,-1,1,1,0,0,0,1,0,1,0,0],[0,1,0,-1,-1,1,0,1,-1,1,0,1,0,0,0,1,0,0],[-1,-1,1,0,1,0,0,1,-1,0,0,0,0,0,0,1,0,0],[-1,-1,1,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0],[1,-1,-1,-1,0,1,1,1,0,0,0,0,0,0,0,0,0,1],[1,1,0,1,-1,0,-1,-1,1,0,0,1,0,0,0,0,0,0],[1,-1,-1,0,1,0,1,1,-1,0,0,0,0,0,1,0,0,0],[1,0,0,1,0,-1,0,1,-1,0,0,1,0,0,0,0,0,0],[1,1,0,-1,1,-1,1,0,-1,0,0,1,0,0,0,0,0,0],[1,-1,0,-1,1,1,-1,1,-1,0,0,1,0,0,0,0,0,0],[-1,1,0,0,0,-1,1,1,0,0,0,1,1,1,0,0,0,1],[0,0,1,0,0,-1,1,-1,1,0,0,0,0,1,0,0,0,0],[1,0,0,0,-1,1,0,0,-1,0,0,0,0,0,0,1,1,0],[-1,0,1,1,1,-1,0,-1,1,0,0,0,0,0,0,1,0,0],[1,0,0,0,-1,0,0,1,-1,0,0,1,0,0,1,0,0,0],[0,1,-1,0,-1,1,0,0,1,0,0,0,0,0,0,1,0,0],[-1,1,0,1,1,-1,1,0,-1,0,0,1,0,0,0,0,0,0],[-1,1,0,-1,-1,1,0,1,1,0,0,0,0,0,0,1,0,0],[0,1,0,1,-1,-1,1,-1,1,1,0,0,0,0,0,0,0,0],[-1,1,1,0,1,-1,-1,-1,1,0,0,0,1,0,0,0,0,0],[0,1,1,-1,1,0,0,0,-1,1,0,0,0,0,1,1,1,0],[0,1,0,1,1,0,0,-1,-1,0,0,0,0,0,1,1,0,0],[0,1,1,0,-1,0,-1,-1,1,1,0,0,1,0,1,0,0,0],[1,0,1,-1,1,1,-1,0,-1,0,0,0,0,0,0,0,1,0],[0,1,0,1,0,0,1,-1,-1,1,0,1,0,1,1,0,0,0],[0,1,0,0,0,0,-1,-1,1,1,0,1,0,0,0,0,0,0],[-1,1,1,0,0,0,-1,0,1,0,0,0,1,0,0,0,0,0],[1,0,0,1,1,-1,0,0,-1,0,0,1,0,0,0,1,0,0],[1,1,-1,1,0,-1,0,0,0,0,0,0,0,0,0,1,0,1],[1,1,0,1,-1,0,0,-1,0,0,0,1,0,0,1,1,0,1],[1,-1,1,1,1,0,-1,-1,0,0,0,0,0,0,0,0,0,1],[0,1,0,1,0,-1,1,-1,-1,1,0,1,0,0,0,0,0,0],[0,1,1,-1,0,-1,1,0,0,0,0,0,0,1,0,0,0,0],[-1,0,1,-1,1,0,0,1,-1,0,0,0,0,0,0,1,0,0],[-1,-1,0,-1,1,0,0,1,1,0,0,1,0,0,0,1,0,0],[1,0,-1,1,0,1,0,-1,0,0,1,0,0,1,0,1,0,1],[-1,0,0,1,1,-1,1,-1,1,0,0,1,0,0,0,0,0,0],[0,1,-1,-1,1,1,0,-1,0,0,0,0,0,0,0,1,0,0],[0,0,0,0,-1,1,1,0,0,0,1,1,0,0,0,0,1,1],[1,1,-1,0,-1,0,0,1,-1,0,0,0,1,0,1,1,0,0],[-1,-1,0,1,1,0,1,0,-1,0,0,1,0,0,0,0,0,0],[1,-1,-1,0,0,1,0,1,-1,0,0,0,1,1,0,1,0,0],[0,0,0,1,0,-1,-1,1,0,0,0,1,0,0,0,0,0,0],[0,0,1,-1,1,-1,0,0,1,1,1,0,0,0,0,1,1,0],[1,1,0,-1,0,-1,1,-1,1,0,0,0,0,1,0,0,0,0],[0,0,1,0,0,-1,0,1,0,0,0,0,0,1,0,0,0,0],[-1,0,-1,0,1,0,0,1,1,0,1,0,0,0,0,0,0,0],[1,-1,-1,0,1,0,1,0,0,0,0,0,1,0,1,0,1,1],[-1,0,0,1,0,-1,0,1,0,0,0,1,0,0,0,0,0,1],[1,1,0,-1,0,-1,1,-1,1,0,0,0,0,1,0,0,0,0],[0,0,-1,1,-1,1,1,-1,1,0,1,0,0,0,0,0,0,0],[-1,-1,1,1,1,0,-1,1,0,0,0,0,0,0,1,0,0,0],[1,1,-1,-1,0,-1,1,1,0,0,0,0,0,1,0,0,0,1],[-1,-1,1,-1,0,1,1,1,0,0,0,0,0,1,0,0,0,1],[0,1,-1,1,1,-1,0,0,0,0,0,0,0,0,0,0,0,1],[0,1,0,-1,1,0,1,0,-1,1,0,1,0,0,1,0,1,0],[-1,0,0,-1,1,0,0,1,0,0,1,0,0,0,0,1,0,0],[1,-1,1,-1,0,0,-1,1,1,0,0,0,0,1,1,0,0,0],[-1,1,0,0,1,0,-1,0,0,0,0,0,1,0,0,0,1,0],[0,1,1,-1,1,0,0,-1,0,1,0,0,0,0,1,1,0,1],[1,0,-1,0,-1,1,0,1,0,0,0,0,0,0,0,1,0,0],[1,-1,0,1,0,-1,-1,1,1,0,0,0,0,1,0,0,0,0],[1,1,0,-1,0,0,-1,-1,1,0,0,1,0,1,1,0,0,0],[0,0,-1,1,-1,1,1,-1,1,0,1,0,0,0,0,0,0,0],[1,0,-1,1,0,0,0,-1,0,0,0,0,0,0,0,1,0,0],[-1,0,-1,0,1,1,0,1,-1,0,1,0,0,0,0,0,0,0],[0,1,-1,-1,1,1,-1,-1,1,1,0,0,0,0,0,0,0,0],[-1,0,1,-1,1,1,0,1,-1,0,0,0,0,0,0,1,0,0],[0,0,0,1,1,-1,1,-1,0,1,1,1,0,0,0,0,0,1],[0,0,-1,0,-1,0,1,0,1,0,0,0,0,0,0,0,1,0],[1,0,0,-1,-1,1,1,1,-1,0,1,1,0,0,0,0,0,0],[0,0,1,0,-1,-1,0,1,1,0,0,0,1,0,0,0,0,0],[-1,0,0,0,1,0,-1,1,1,0,1,0,1,0,0,0,0,0],[1,0,-1,1,0,1,0,0,-1,0,1,0,0,1,0,1,1,0],[1,0,0,-1,1,1,1,-1,-1,0,0,1,0,0,0,0,0,0],[1,1,0,0,-1,1,0,-1,0,0,0,1,0,0,0,0,0,0],[1,-1,0,1,-1,0,-1,1,1,0,0,1,0,0,0,0,0,0],[1,-1,-1,-1,0,1,1,0,1,0,0,0,0,1,0,0,1,0],[0,-1,1,1,1,-1,-1,1,-1,1,0,0,0,0,0,0,0,0],[-1,1,1,-1,-1,0,0,1,0,0,0,0,0,0,1,1,0,1],[1,1,-1,0,0,0,1,0,-1,0,0,0,0,0,1,0,0,0],[1,-1,0,1,1,0,-1,0,0,0,0,1,0,0,1,0,1,1],[1,-1,1,1,-1,0,-1,1,0,0,0,0,0,0,1,0,0,1],[1,-1,-1,1,0,1,-1,0,1,0,0,0,0,1,0,0,0,0],[1,-1,0,1,1,0,0,-1,0,0,0,1,0,0,1,1,0,1],[0,0,-1,1,0,0,-1,0,1,1,1,0,0,1,0,0,0,0],[1,0,1,0,0,-1,0,1,-1,0,1,0,1,1,0,1,0,0],[1,-1,1,0,1,-1,-1,1,0,0,0,0,0,0,0,0,0,1],[1,-1,-1,0,0,-1,1,0,1,0,0,0,1,1,0,0,1,0],[0,0,1,0,-1,-1,0,0,1,0,1,0,1,0,0,0,1,0],[1,-1,-1,1,0,0,0,0,1,0,0,0,0,1,1,1,1,0],[0,0,0,-1,0,1,1,-1,0,0,1,1,0,1,0,0,0,1],[0,0,1,-1,0,0,1,1,-1,0,0,0,0,1,0,0,0,0],[1,-1,-1,0,1,1,1,-1,0,0,0,0,1,0,0,0,0,1],[1,-1,0,-1,0,1,1,0,0,0,0,0,0,1,0,0,0,1],[1,-1,0,0,1,0,1,-1,0,0,0,1,1,0,1,0,0,1],[1,0,1,0,-1,1,-1,0,-1,0,0,0,0,0,0,0,1,0],[1,1,0,-1,-1,1,-1,1,0,0,0,1,0,0,0,0,0,0],[1,0,1,1,-1,1,-1,0,-1,0,0,0,0,0,0,0,1,0],[0,0,-1,1,0,1,0,1,-1,0,0,0,0,1,0,0,0,0],[0,-1,1,0,1,0,0,-1,1,1,0,0,1,0,1,1,0,0],[-1,1,0,1,1,0,-1,-1,0,0,0,0,0,0,0,0,0,1],[0,1,-1,1,0,1,-1,-1,0,0,0,0,0,1,0,0,0,1],[1,1,-1,0,-1,1,0,-1,1,0,0,0,0,0,0,1,0,0],[-1,1,1,1,-1,-1,0,0,0,0,0,0,0,0,0,0,0,1],[0,-1,0,1,0,1,-1,-1,1,0,0,0,0,1,0,0,0,0],[1,0,0,0,-1,-1,1,1,0,0,0,0,1,0,0,0,0,0],[-1,0,-1,0,1,1,1,0,0,0,1,0,0,0,0,0,0,0],[0,1,0,0,0,1,0,0,-1,0,0,0,0,0,0,1,0,0],[-1,-1,0,1,0,1,1,0,0,0,0,1,0,1,0,0,0,0],[-1,1,-1,1,0,-1,1,0,0,0,0,0,0,0,0,0,0,1],[-1,0,1,0,1,-1,0,0,1,0,0,0,0,0,0,1,0,0],[0,0,-1,1,0,0,1,1,-1,1,0,0,0,0,1,0,0,0],[-1,-1,0,1,0,-1,1,1,0,0,0,1,0,0,0,0,0,1],[0,-1,1,0,0,-1,0,1,1,0,0,0,0,0,0,1,0,0],[-1,1,1,1,0,-1,0,0,-1,0,0,0,0,1,0,1,1,0],[1,1,-1,1,-1,0,0,-1,1,0,0,0,0,0,0,1,0,0],[-1,0,-1,1,1,-1,1,0,1,0,1,0,0,0,0,0,0,0],[1,0,1,1,0,-1,-1,0,0,0,1,0,0,0,0,0,0,0],[-1,0,0,1,1,0,0,1,-1,0,1,1,0,0,1,1,0,0],[1,1,0,0,-1,0,1,-1,0,0,0,1,1,0,1,0,0,1],[-1,1,0,1,0,0,1,0,-1,0,0,1,0,1,1,0,0,0],[-1,-1,1,1,1,-1,0,1,0,0,0,0,0,0,0,1,0,0],[-1,-1,1,0,1,1,0,0,0,0,0,0,1,0,0,1,1,1],[1,0,1,1,-1,0,0,-1,0,0,1,0,0,0,0,0,0,0],[1,1,-1,-1,-1,1,0,0,1,0,0,0,0,0,0,1,0,0],[1,1,0,0,0,1,0,-1,-1,0,0,0,0,0,0,1,0,0],[1,0,0,0,-1,1,-1,0,1,0,0,1,0,0,0,0,0,0],[0,1,0,0,1,0,-1,-1,1,1,0,0,0,0,0,0,0,0],[-1,0,-1,0,0,1,0,1,1,0,1,0,0,0,0,1,0,0],[1,0,-1,0,0,-1,0,1,0,0,0,0,1,1,0,1,0,1],[1,0,1,-1,0,0,-1,1,0,0,1,0,0,1,1,0,0,1],[1,0,0,1,1,-1,-1,0,-1,0,1,1,0,0,0,0,1,0],[1,0,0,-1,-1,0,1,1,0,0,0,0,0,0,1,0,0,0],[0,1,1,0,-1,1,1,-1,-1,1,0,0,0,0,0,0,0,0],[0,1,0,0,-1,-1,1,1,-1,1,0,1,1,0,0,0,0,0],[-1,-1,0,1,1,0,-1,0,1,0,0,1,0,0,0,0,0,0],[-1,1,1,0,-1,-1,0,1,0,0,0,0,1,0,0,1,0,1],[-1,0,0,-1,1,0,0,1,1,0,0,0,0,0,0,1,0,0],[1,1,-1,1,0,-1,0,-1,1,0,0,0,0,1,0,1,0,0],[1,-1,1,-1,1,1,0,0,-1,0,0,0,0,0,0,1,0,0],[-1,1,1,-1,-1,0,0,1,1,0,0,0,0,0,1,1,0,0],[0,-1,1,-1,0,0,1,-1,1,0,0,0,0,1,0,0,0,0],[1,0,1,0,1,0,-1,0,-1,0,0,0,0,0,0,0,1,0],[1,-1,1,0,0,1,-1,1,-1,0,0,0,1,1,0,0,0,0],[-1,1,0,1,-1,0,0,0,1,0,0,1,0,0,1,1,1,0],[0,-1,1,-1,0,1,0,1,0,0,0,0,0,0,0,0,0,1],[1,1,0,-1,1,-1,1,-1,0,0,0,1,0,0,0,0,0,1],[1,1,-1,-1,0,1,1,0,-1,0,0,0,0,1,0,0,1,0],[1,-1,1,-1,0,0,0,0,0,0,0,0,0,1,0,0,0,0],[-1,-1,0,0,0,1,1,0,1,0,0,1,0,0,0,0,0,0],[0,1,0,0,-1,1,0,-1,1,0,0,1,0,0,0,0,0,0],[0,0,0,-1,1,-1,1,-1,1,1,1,1,0,0,0,0,0,0],[0,1,1,0,-1,-1,0,0,0,1,0,0,1,0,0,0,0,0],[0,1,-1,1,0,0,-1,0,1,0,0,0,0,1,0,0,0,0],[1,0,-1,-1,-1,1,1,0,1,0,0,0,0,0,0,0,1,0],[1,-1,0,0,1,-1,1,0,0,0,0,1,1,0,0,0,1,1],[0,1,1,-1,0,-1,1,-1,1,0,0,0,0,1,0,0,0,0],[-1,1,-1,-1,1,1,0,0,1,0,0,0,0,0,0,1,0,0],[-1,0,1,0,1,1,0,-1,0,0,1,0,1,0,0,1,0,1],[1,-1,0,1,0,-1,0,0,0,0,0,0,0,0,0,1,0,0],[1,0,-1,1,0,0,-1,-1,1,0,0,0,0,1,0,0,0,0],[0,0,1,-1,0,-1,0,1,1,0,0,0,0,1,0,1,0,0],[0,-1,-1,0,1,1,-1,0,1,1,0,0,0,0,0,0,0,0],[1,0,1,-1,0,-1,0,1,-1,0,0,0,0,1,0,0,0,0],[1,0,-1,1,1,-1,-1,1,0,0,0,0,0,0,0,0,0,1],[1,1,-1,0,0,1,-1,-1,1,0,0,0,0,1,0,0,0,0],[0,0,-1,0,0,-1,1,1,0,0,0,0,0,0,0,0,0,1],[-1,-1,1,-1,0,0,1,1,0,0,0,0,0,1,1,0,0,1],[0,1,1,-1,0,1,0,0,-1,1,0,0,0,0,0,0,0,0],[0,1,1,-1,1,0,-1,0,0,1,0,0,0,0,0,0,0,0],[0,1,-1,0,1,0,1,-1,-1,0,0,0,0,0,1,0,0,0],[-1,1,-1,1,0,0,1,-1,1,0,0,0,0,1,1,0,0,0],[-1,0,0,0,1,1,0,1,-1,0,1,1,1,0,0,1,0,0],[0,1,-1,0,0,1,1,-1,0,1,0,0,1,1,0,0,0,0],[0,0,-1,-1,1,1,1,0,-1,1,1,0,0,0,0,0,1,0],[0,1,0,-1,1,1,-1,-1,1,1,0,0,0,0,0,0,0,0],[0,1,1,0,-1,-1,1,-1,1,0,0,0,1,0,0,0,0,0],[0,0,1,0,0,1,-1,0,-1,1,1,0,1,1,0,0,1,0],[0,0,-1,1,0,0,-1,1,1,1,1,0,0,1,0,0,0,0],[0,1,1,-1,1,-1,0,-1,1,1,0,0,0,0,0,1,0,0],[0,1,1,-1,0,1,0,-1,0,1,0,0,0,1,0,1,0,1],[0,1,0,-1,1,0,0,-1,1,1,0,0,0,0,0,0,0,0],[1,0,-1,1,1,-1,0,-1,0,0,0,0,0,0,0,0,0,1],[1,0,0,1,1,-1,0,0,-1,0,0,1,0,0,0,1,0,0],[0,1,1,1,-1,0,-1,-1,1,1,0,0,0,0,1,0,0,0],[1,-1,1,1,0,-1,-1,0,1,0,0,0,0,1,0,0,0,0],[0,-1,0,0,0,1,0,-1,1,0,0,1,0,1,0,0,0,0],[0,-1,-1,1,1,0,1,0,0,1,0,0,0,0,0,0,0,0],[0,0,0,-1,0,0,1,-1,1,0,0,0,0,1,0,0,0,0],[0,0,1,0,-1,1,1,0,-1,1,1,0,0,0,0,0,1,0],[-1,0,1,1,-1,-1,0,1,1,0,0,0,0,0,0,1,0,0],[1,-1,-1,0,1,-1,1,1,0,0,0,0,0,0,0,0,0,1],[0,0,-1,1,1,-1,0,1,0,0,1,0,0,0,0,0,0,1],[0,1,1,0,-1,-1,1,0,0,1,0,0,1,0,0,0,0,0],[0,1,1,1,-1,-1,-1,0,0,1,0,0,0,0,0,0,0,0],[1,1,-1,-1,0,1,1,-1,0,0,0,0,0,1,0,0,0,1],[0,-1,0,0,1,1,-1,1,0,0,0,0,1,0,0,0,0,0],[0,-1,-1,0,0,1,-1,1,1,1,0,0,1,1,0,0,0,0],[0,-1,1,1,0,-1,1,-1,1,0,0,0,0,1,0,0,0,0],[0,1,1,-1,0,1,1,-1,-1,1,0,0,0,1,0,0,0,0],[1,0,1,-1,-1,1,0,0,0,0,1,0,0,0,0,1,1,1],[-1,1,0,-1,0,1,0,1,-1,0,0,0,0,1,0,1,0,0],[1,1,-1,0,0,1,0,-1,0,0,0,0,0,0,0,1,0,0],[0,-1,0,-1,-1,1,1,0,1,0,0,0,0,0,0,0,1,0],[1,-1,-1,1,0,1,0,-1,1,0,0,0,0,1,0,0,0,0],[0,1,-1,0,0,0,1,1,-1,0,0,0,0,1,1,0,0,0],[0,1,1,-1,-1,1,0,1,-1,1,0,0,0,0,0,0,0,0],[0,0,-1,1,1,0,-1,1,0,1,1,0,0,0,1,0,0,1],[1,-1,1,0,-1,-1,0,1,1,0,0,0,1,0,0,0,0,0],[0,1,0,0,1,-1,0,-1,1,1,0,0,0,0,0,0,0,0],[1,0,0,0,-1,0,-1,1,1,0,0,1,1,0,1,0,0,0],[1,-1,1,1,-1,0,-1,0,1,0,0,0,0,0,0,0,1,0],[0,0,0,-1,0,1,-1,0,1,1,0,1,0,0,0,0,0,0],[1,0,-1,0,1,1,0,0,-1,0,0,0,1,0,0,0,0,0],[1,0,-1,0,1,1,0,-1,-1,0,0,0,0,0,0,1,0,0],[-1,1,1,0,0,1,0,-1,0,0,0,0,0,0,0,0,0,1],[-1,-1,0,1,1,0,1,1,-1,0,0,1,0,0,0,0,0,0],[1,0,0,1,0,-1,-1,0,1,0,0,0,0,1,0,0,0,0],[-1,0,0,1,1,-1,0,1,0,0,1,0,0,0,0,0,0,0],[1,-1,-1,-1,1,-1,1,1,0,0,0,0,0,0,0,0,0,1],[1,1,-1,-1,-1,0,1,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,-1,-1,1,1,1,-1,1,0,0,0,0,0,0,0,0],[1,-1,0,1,-1,1,-1,1,0,0,0,1,0,0,0,0,0,0],[0,0,1,-1,-1,1,1,0,-1,1,1,0,0,0,0,0,1,0],[0,1,0,-1,-1,1,1,0,-1,1,0,0,0,0,0,0,0,0],[1,0,0,-1,-1,1,1,-1,1,0,1,0,0,0,0,0,0,0],[0,0,0,1,-1,0,1,-1,1,0,1,0,0,0,0,0,0,0],[-1,0,1,1,0,-1,-1,1,0,0,1,0,0,1,0,0,0,1],[0,1,0,1,0,1,0,-1,-1,0,0,0,0,1,0,1,0,0],[1,-1,1,-1,-1,0,1,0,1,0,0,0,0,0,1,0,1,0],[1,0,0,-1,1,-1,1,0,0,0,1,1,0,0,0,0,1,1],[0,1,-1,-1,1,0,0,0,0,0,0,0,0,0,0,0,1,0],[0,1,-1,0,0,1,-1,0,1,1,0,0,1,1,0,0,0,0],[0,-1,1,-1,0,0,0,0,1,1,0,0,0,1,1,1,1,0],[1,1,-1,-1,1,1,0,-1,0,0,0,0,0,0,0,0,0,1],[0,1,1,1,-1,-1,-1,1,0,1,0,0,0,0,0,0,0,0],[0,1,-1,1,0,0,-1,1,0,0,0,0,0,1,0,0,0,0],[-1,-1,0,1,1,0,1,0,-1,0,0,1,0,0,0,0,0,0],[-1,1,1,0,0,-1,0,1,0,0,0,0,0,1,0,0,0,0],[-1,1,-1,1,0,1,-1,0,1,0,0,0,0,1,0,0,0,0],[-1,1,1,-1,0,1,1,0,-1,0,0,0,0,1,0,0,0,0],[-1,1,1,0,0,0,0,-1,1,0,0,0,0,0,1,0,0,0],[0,1,-1,1,1,-1,0,0,0,0,0,0,0,0,0,0,0,1],[-1,1,0,0,1,0,-1,-1,1,0,0,0,1,0,0,0,0,0],[0,-1,-1,1,-1,1,0,0,1,1,0,0,0,0,0,1,1,0],[-1,1,1,0,1,-1,0,0,0,0,0,0,1,0,0,1,1,1],[-1,1,1,0,0,1,-1,1,-1,0,0,0,1,1,0,0,0,0],[-1,0,1,0,0,0,-1,1,1,0,0,0,1,0,0,0,0,0],[1,0,-1,1,0,1,-1,0,0,0,0,0,0,1,0,0,0,0],[0,-1,0,-1,1,-1,1,0,1,1,0,1,0,0,0,0,1,0],[1,1,0,-1,0,-1,1,1,-1,0,0,1,0,1,0,0,0,0],[-1,0,0,1,0,1,-1,1,0,0,0,0,0,1,0,0,0,0],[1,-1,-1,0,0,-1,0,1,1,0,0,0,1,1,0,1,0,0],[0,1,0,0,1,0,-1,-1,0,1,0,0,1,0,0,0,0,1],[1,-1,1,0,-1,0,-1,1,1,0,0,0,0,0,1,0,0,0],[-1,1,-1,0,1,0,-1,0,1,0,0,0,1,0,0,0,0,0],[1,0,-1,1,-1,1,0,0,0,0,0,0,0,0,0,1,0,0],[0,-1,0,0,1,1,1,0,-1,1,0,1,1,0,0,0,1,0],[-1,1,0,-1,0,1,0,1,0,0,0,0,0,1,0,1,0,0],[1,1,0,1,-1,-1,-1,-1,1,0,0,1,0,0,0,0,0,0],[0,1,1,0,0,-1,1,0,-1,1,0,0,1,1,0,0,1,0],[1,-1,0,1,-1,0,-1,1,0,0,0,1,0,0,0,0,0,0],[0,0,1,-1,0,1,0,-1,0,0,0,0,0,0,0,0,0,1],[0,0,1,0,1,-1,0,-1,1,1,1,0,1,0,0,1,0,0],[-1,1,-1,0,-1,1,0,0,1,0,0,0,0,0,0,1,0,0],[1,1,0,-1,0,-1,-1,1,1,0,0,0,0,1,0,0,0,0],[1,-1,1,0,1,1,0,-1,-1,0,0,0,0,0,0,1,0,0],[1,-1,-1,0,0,0,-1,1,1,0,0,0,0,1,0,0,0,0],[0,1,1,-1,0,0,-1,-1,1,1,0,0,0,0,0,0,0,0],[-1,-1,0,0,1,1,-1,1,0,0,0,1,1,0,0,0,0,0],[0,1,-1,1,0,-1,-1,1,1,0,0,0,0,1,0,0,0,0],[0,0,0,-1,1,0,1,-1,0,0,0,1,0,0,0,0,0,0],[0,1,1,-1,-1,1,0,-1,0,1,0,0,0,0,0,1,0,1],[-1,0,1,-1,0,0,0,0,1,0,0,0,0,0,1,1,0,0],[1,0,0,-1,1,0,1,-1,0,0,1,1,0,0,1,0,0,1],[-1,0,0,0,1,-1,1,-1,1,0,0,1,0,0,0,0,0,0],[-1,0,-1,0,1,0,0,0,1,0,1,0,1,0,0,1,0,0],[1,1,-1,-1,-1,1,0,1,0,0,0,0,0,0,0,1,0,0],[0,0,1,1,-1,0,0,-1,1,0,1,0,0,0,0,0,0,0],[1,-1,1,1,0,1,-1,0,-1,0,0,0,0,0,0,0,1,0],[1,-1,0,1,-1,1,0,0,0,0,0,0,0,0,0,1,1,0],[1,1,0,1,0,-1,-1,1,-1,0,0,1,0,0,0,0,0,0],[1,-1,0,1,1,-1,0,0,0,0,0,1,0,0,0,1,1,1],[1,0,1,-1,0,0,-1,0,1,0,1,0,0,1,1,0,1,0],[1,-1,1,0,-1,0,-1,1,0,0,0,0,1,0,1,0,0,1],[1,-1,0,1,0,0,0,0,-1,0,0,0,0,0,0,1,0,0],[1,-1,1,-1,0,0,0,0,0,0,0,0,0,1,0,0,0,0],[-1,0,0,1,1,0,1,0,-1,0,1,1,0,0,1,0,1,0],[-1,1,-1,0,1,1,-1,0,1,0,0,0,1,0,0,0,0,0],[0,0,-1,1,-1,1,1,1,-1,1,0,0,0,0,0,0,0,0],[1,-1,0,0,0,-1,1,0,0,0,0,1,1,1,0,0,1,1],[1,-1,-1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,1],[0,-1,1,-1,0,1,1,1,-1,0,0,0,0,1,0,0,0,0],[0,1,1,0,1,0,-1,0,-1,0,0,0,0,0,0,0,1,0],[-1,0,1,-1,-1,0,0,1,1,0,0,0,0,0,1,1,0,0],[0,-1,1,-1,-1,0,1,1,0,0,0,0,0,0,1,0,0,1],[-1,0,0,-1,1,1,1,-1,1,0,0,1,0,0,0,0,0,0],[1,-1,1,1,0,1,0,-1,-1,0,0,0,0,1,0,1,0,0],[-1,1,0,-1,0,0,0,1,1,0,0,0,0,0,0,1,0,0],[0,-1,1,1,0,1,1,-1,-1,0,0,0,0,1,0,0,0,0],[0,-1,0,1,-1,1,-1,1,0,1,0,1,0,0,0,0,0,1],[1,1,0,0,1,-1,1,-1,-1,0,0,1,0,0,0,0,0,0],[1,0,1,-1,0,1,1,-1,-1,0,1,0,0,1,0,0,0,0],[1,-1,0,-1,0,1,1,1,-1,0,0,1,0,1,0,0,0,0],[0,1,1,1,-1,0,-1,-1,0,0,0,0,0,0,0,0,0,1],[0,-1,0,-1,1,1,1,-1,1,1,0,1,0,0,0,0,0,0],[-1,1,-1,1,0,-1,0,1,0,0,0,0,0,1,0,0,0,1],[1,1,-1,0,1,1,0,-1,-1,0,0,0,0,0,0,1,0,0],[1,1,-1,1,0,0,-1,-1,0,0,0,0,0,1,1,0,0,1],[0,1,-1,1,-1,1,0,1,-1,1,0,0,0,0,0,1,0,0],[1,1,0,-1,-1,0,1,0,0,0,0,0,0,0,1,0,0,0],[-1,1,1,-1,0,-1,1,0,1,0,0,0,0,1,0,0,0,0],[-1,-1,1,0,1,0,0,0,1,0,0,0,1,0,1,1,1,0],[1,1,-1,0,1,-1,0,0,0,0,0,0,0,0,0,0,0,1],[-1,0,1,1,0,0,0,1,-1,0,0,0,0,1,0,0,0,0],[1,0,0,-1,-1,0,0,0,1,0,1,1,0,0,1,1,1,0],[1,-1,1,1,-1,1,-1,0,0,0,0,0,0,0,0,0,1,0],[-1,1,1,0,0,-1,-1,1,1,0,0,0,1,0,0,0,0,0],[0,1,0,-1,0,1,1,-1,0,0,0,1,0,0,0,0,0,0],[-1,-1,1,0,1,0,-1,1,0,0,0,0,1,0,0,0,0,0],[0,0,-1,1,-1,0,1,1,0,1,1,0,0,0,1,0,0,1],[-1,1,-1,1,1,0,0,0,-1,0,0,0,0,0,1,0,0,0],[1,1,0,0,-1,-1,1,1,-1,0,0,1,1,0,0,0,0,0],[1,1,0,-1,-1,1,0,0,0,0,0,1,0,0,0,0,0,0],[0,1,0,1,-1,-1,1,0,0,1,0,0,0,0,0,0,0,0],[0,0,1,-1,1,-1,-1,0,1,1,0,0,0,0,0,0,0,0],[1,1,-1,1,-1,-1,0,1,0,0,0,0,0,0,0,1,0,1],[1,0,1,0,1,-1,0,-1,0,0,1,0,1,0,0,1,0,1],[1,0,1,0,-1,0,-1,0,1,0,1,0,1,0,1,0,1,0],[-1,1,-1,1,0,-1,1,1,0,0,0,0,0,0,0,0,0,1],[0,0,0,0,1,1,0,0,-1,0,0,0,1,0,0,0,0,0],[1,-1,1,1,-1,0,0,1,-1,0,0,0,0,0,0,1,0,0],[0,1,0,0,1,-1,-1,0,1,1,0,1,1,0,0,0,1,0],[0,1,0,1,-1,0,0,-1,1,1,0,1,0,0,0,0,0,0],[1,1,-1,0,0,1,-1,0,0,0,0,0,0,1,0,0,1,1],[0,0,-1,1,-1,0,1,-1,1,0,1,0,0,0,0,0,0,0],[1,0,1,0,-1,-1,0,1,0,0,0,0,1,0,0,0,0,0],[0,-1,1,1,0,1,0,0,-1,0,0,0,0,1,0,0,0,0],[-1,1,1,1,-1,1,-1,-1,0,0,0,0,0,0,0,0,0,1],[-1,0,-1,0,0,1,1,1,-1,0,1,0,1,1,0,0,0,0],[1,-1,1,-1,0,1,-1,1,-1,0,0,0,0,1,0,0,0,0],[-1,1,-1,0,1,1,0,0,-1,0,0,0,1,0,0,1,1,0],[-1,1,1,1,-1,0,0,-1,1,0,0,0,0,0,1,0,0,0],[0,-1,1,1,-1,-1,1,0,1,0,0,0,0,0,0,0,1,0],[0,1,-1,0,1,1,0,-1,-1,0,0,0,0,0,0,1,0,0],[0,-1,0,0,-1,1,0,1,0,1,0,1,0,0,0,0,0,0],[0,0,0,1,1,0,-1,-1,1,1,1,1,0,0,1,0,0,0],[0,-1,0,0,-1,1,-1,1,1,0,0,1,0,0,0,0,0,0],[0,1,-1,0,1,-1,1,0,0,0,0,0,0,0,0,0,0,1],[1,1,-1,1,0,0,-1,0,0,0,0,0,0,1,1,0,1,1],[0,0,-1,-1,1,0,1,0,1,1,1,0,0,0,1,0,1,0],[0,-1,-1,0,1,0,0,1,1,1,0,0,0,0,0,0,0,0],[0,1,1,-1,-1,0,-1,1,1,1,0,0,0,0,1,0,0,0],[0,-1,0,1,-1,1,-1,0,1,0,0,1,0,0,0,0,1,0],[-1,0,1,-1,0,1,0,1,-1,0,1,0,0,1,0,1,0,0],[0,0,-1,0,1,0,-1,1,1,1,1,0,1,0,1,0,0,0],[0,1,1,-1,-1,0,1,-1,1,0,0,0,0,0,1,0,0,0],[0,0,1,0,-1,1,0,1,-1,1,0,0,0,0,0,0,0,0],[0,-1,1,1,0,0,0,1,-1,0,0,0,0,1,0,1,0,0],[0,1,0,0,1,1,0,-1,-1,0,0,0,0,0,0,1,0,0],[-1,1,0,1,-1,1,-1,0,1,0,0,1,0,0,0,0,0,0],[1,-1,-1,0,-1,1,0,0,1,0,0,0,1,0,0,1,1,0],[1,0,0,-1,1,-1,1,0,0,0,1,1,0,0,0,0,1,1],[-1,1,0,1,0,0,1,-1,0,0,0,1,0,1,1,0,0,0],[1,-1,1,0,-1,-1,1,1,0,0,0,0,1,0,0,0,0,0],[-1,0,1,-1,0,0,0,1,1,0,0,0,0,0,0,1,0,0],[0,0,-1,1,0,1,-1,0,1,0,0,0,0,1,0,0,0,0],[1,1,0,-1,0,0,0,-1,0,0,0,1,0,0,0,0,0,0],[0,-1,-1,1,0,1,1,1,-1,1,0,0,0,0,0,0,0,0],[0,1,-1,0,1,1,-1,0,-1,0,0,0,0,0,0,0,1,0],[1,1,-1,0,-1,-1,1,1,0,0,0,0,1,0,0,0,0,1],[-1,1,-1,1,0,0,-1,0,1,0,0,0,0,1,0,0,0,0],[-1,-1,0,1,0,1,0,0,1,0,0,1,0,0,0,0,0,0],[1,1,-1,1,1,0,0,-1,-1,0,0,0,0,0,1,1,0,0],[-1,-1,0,1,0,1,1,1,-1,0,0,1,0,1,0,0,0,0],[-1,1,1,-1,1,0,0,0,0,0,0,0,0,0,0,1,0,0],[0,0,1,1,-1,1,0,0,-1,1,1,0,0,0,0,1,1,0],[-1,0,0,0,1,1,-1,1,-1,0,0,0,1,0,0,0,0,0],[0,0,-1,1,-1,1,0,0,1,1,1,0,0,0,0,1,1,0],[0,1,0,1,0,0,-1,1,-1,0,0,0,0,1,0,0,0,0],[-1,1,0,0,1,0,-1,0,1,0,0,0,1,0,0,0,0,0],[-1,1,-1,1,0,0,0,0,1,0,0,0,0,1,0,0,1,0],[1,-1,0,0,-1,1,-1,1,1,0,0,1,0,0,0,0,0,0],[1,0,1,-1,-1,0,0,1,-1,0,0,0,0,0,1,0,0,0],[-1,1,-1,0,1,-1,1,0,1,0,0,0,0,0,0,0,1,0],[-1,0,1,1,1,0,-1,-1,1,0,0,0,0,0,1,0,0,0],[1,0,0,1,-1,0,-1,0,1,0,1,1,0,0,0,0,1,0],[0,0,0,-1,1,-1,0,0,1,1,1,1,0,0,0,1,1,0],[-1,0,1,0,0,1,1,-1,0,0,1,0,1,1,0,0,0,1],[1,-1,1,-1,1,-1,0,1,0,0,0,0,0,0,0,1,0,1],[1,-1,0,0,-1,0,1,1,0,0,0,1,1,0,1,0,0,1],[1,-1,0,0,0,0,1,0,-1,0,0,0,1,0,0,0,0,0],[0,-1,0,-1,1,1,1,-1,0,0,0,1,0,0,0,0,0,0],[1,1,0,-1,0,-1,1,1,-1,0,0,1,0,1,0,0,0,0],[-1,-1,1,1,0,1,1,0,-1,0,0,0,0,1,0,0,0,0],[0,0,0,1,1,-1,0,0,0,1,0,1,0,0,0,1,0,1],[0,0,1,0,1,-1,-1,0,1,1,0,0,0,0,0,0,0,0],[1,1,-1,-1,0,0,0,0,1,0,0,0,0,1,0,0,0,0],[0,-1,0,1,0,-1,1,0,1,1,0,1,0,1,0,0,1,0],[-1,0,0,1,-1,0,1,1,0,0,0,0,0,0,0,0,0,1],[1,0,0,-1,1,1,1,-1,-1,0,0,1,0,0,0,0,0,0],[-1,1,1,-1,1,0,0,-1,1,0,0,0,0,0,0,1,0,0],[0,0,0,-1,0,1,1,1,-1,0,1,1,0,1,0,0,0,0],[0,1,0,0,-1,0,1,-1,1,1,0,1,1,0,1,0,0,0],[-1,-1,1,0,0,1,1,-1,0,0,0,0,0,1,0,0,0,0],[-1,-1,1,1,0,1,0,0,0,0,0,0,0,1,0,1,1,1],[1,0,0,0,0,1,0,0,-1,0,0,0,1,1,0,1,0,0],[0,1,-1,1,0,1,0,-1,0,0,0,0,0,1,0,0,0,0],[1,0,1,-1,0,1,0,0,-1,0,1,0,0,0,0,0,0,0],[1,1,-1,-1,0,1,0,1,-1,0,0,0,0,1,0,0,0,0],[0,-1,0,-1,1,1,-1,1,1,1,0,0,0,0,0,0,0,0],[1,0,1,-1,0,-1,1,-1,0,0,0,0,0,1,0,0,0,0],[-1,0,0,1,1,0,-1,0,1,0,0,0,0,0,1,0,0,0],[1,-1,0,-1,0,0,1,1,0,0,0,0,0,0,0,0,0,1],[1,0,-1,0,-1,0,0,1,1,0,0,0,0,0,0,1,0,0],[0,1,0,1,1,0,-1,0,-1,0,0,0,0,0,0,0,1,0],[1,0,0,0,0,1,0,-1,0,0,0,0,0,1,0,0,0,0],[-1,1,-1,-1,0,0,1,0,1,0,0,0,0,0,0,0,1,0],[0,1,0,-1,0,1,-1,0,0,1,0,1,0,1,0,0,1,1],[-1,1,-1,-1,0,1,1,1,0,0,0,0,0,1,0,0,0,1],[-1,-1,0,1,0,0,1,0,1,0,0,1,0,0,0,0,1,0],[-1,1,1,1,0,1,-1,-1,0,0,0,0,0,0,0,0,0,1],[1,0,-1,1,-1,0,0,1,0,0,0,0,0,0,0,1,0,0],[1,-1,0,-1,1,1,0,0,0,0,0,0,0,0,0,0,0,1],[0,-1,-1,0,0,1,1,0,1,1,0,0,0,0,0,0,1,0],[-1,-1,0,0,-1,1,1,1,0,0,0,1,0,0,0,0,0,1],[0,-1,1,1,0,0,1,-1,-1,0,0,0,0,1,0,0,0,0],[0,-1,-1,-1,1,1,1,1,0,1,0,0,0,0,0,0,0,0],[0,0,1,1,-1,-1,1,1,-1,1,0,0,0,0,0,0,0,0],[0,1,1,0,-1,-1,0,0,1,0,0,0,1,0,0,0,0,0],[1,-1,0,1,-1,0,0,0,1,0,0,0,0,0,0,1,1,0],[1,-1,1,0,1,0,0,0,-1,0,0,0,0,0,0,1,0,0],[1,0,1,-1,1,-1,-1,1,0,0,1,0,0,0,0,0,0,1],[0,1,-1,-1,0,1,0,1,0,0,0,0,0,1,0,0,0,0],[0,1,1,0,-1,1,1,-1,-1,1,0,0,0,0,0,0,0,0],[0,1,1,1,0,-1,-1,1,-1,1,0,0,0,1,0,0,0,0],[0,0,1,0,1,1,-1,0,-1,0,0,0,1,0,0,0,1,0],[0,0,1,0,0,-1,1,1,-1,0,0,0,0,1,0,0,0,0],[0,0,-1,-1,1,1,0,0,0,1,0,0,0,0,0,0,0,0],[1,1,-1,-1,1,1,-1,0,0,0,0,0,0,0,0,0,1,1],[1,-1,0,1,-1,1,-1,0,1,0,0,1,0,0,0,0,1,0],[-1,1,0,0,1,1,0,-1,0,0,0,0,1,0,0,0,0,0],[0,1,0,0,-1,-1,1,0,1,0,0,0,1,0,0,0,0,0],[-1,0,0,0,0,1,1,-1,0,0,1,0,0,1,0,0,0,0],[1,0,-1,0,0,1,-1,1,0,0,0,0,0,1,0,0,0,0],[0,1,1,-1,0,0,1,0,-1,1,0,0,0,1,1,0,1,0],[-1,-1,1,0,-1,1,1,1,0,0,0,0,0,0,0,0,0,1],[-1,-1,0,1,0,1,0,-1,1,0,0,1,0,1,0,0,0,0],[1,0,0,-1,1,0,1,0,-1,0,0,1,0,0,0,0,0,0],[1,0,-1,-1,1,1,-1,1,-1,0,1,0,0,0,0,0,0,0],[1,-1,1,-1,0,0,1,-1,1,0,0,0,0,1,0,0,0,0],[1,0,0,-1,0,0,1,-1,1,0,0,0,0,1,0,0,0,0],[-1,-1,0,0,1,1,1,-1,1,0,0,1,0,0,0,0,0,0],[-1,0,0,0,1,0,1,1,-1,0,1,1,1,0,1,0,0,0],[0,-1,1,-1,-1,0,1,1,0,0,0,0,0,0,1,0,0,1],[0,0,1,0,-1,1,1,-1,0,0,1,0,0,0,0,0,0,1],[1,1,-1,-1,1,1,0,0,-1,0,0,0,0,0,0,0,1,0],[0,-1,-1,1,1,-1,1,0,0,1,0,0,0,0,0,0,0,1],[1,0,1,-1,-1,0,0,1,0,0,0,0,0,0,1,0,0,0],[0,-1,1,-1,0,1,1,0,0,1,0,0,0,1,0,0,1,1],[0,1,1,-1,-1,0,0,-1,1,0,0,0,0,0,1,0,0,0],[-1,-1,1,0,-1,1,1,0,0,0,0,0,0,0,0,0,1,1],[1,-1,0,-1,-1,1,1,0,0,0,0,0,0,0,0,0,1,0],[0,1,0,-1,1,1,0,-1,0,0,0,0,0,0,0,1,0,0],[1,1,0,-1,0,0,-1,0,1,0,0,1,0,1,1,0,1,0],[-1,-1,1,0,1,1,-1,1,0,0,0,0,1,0,0,0,0,0],[1,-1,1,1,1,-1,-1,0,0,0,0,0,0,0,0,0,0,1],[-1,1,1,0,1,1,0,-1,-1,0,0,0,0,0,0,1,0,0],[-1,1,1,1,0,0,-1,0,0,0,0,0,0,0,0,0,0,1],[-1,1,1,0,0,1,0,0,-1,0,0,0,1,1,0,1,1,0],[-1,0,-1,1,1,0,0,1,0,0,1,0,0,0,0,0,0,0],[0,1,1,1,0,-1,-1,-1,1,1,0,0,0,0,0,0,0,0],[0,-1,-1,0,1,1,1,-1,0,1,0,0,0,0,0,0,0,0],[0,0,-1,1,-1,1,0,0,0,1,1,0,0,0,0,1,1,1],[0,0,-1,1,-1,1,0,1,0,1,1,0,0,0,0,1,0,1],[-1,1,-1,0,1,0,0,0,1,0,0,0,0,0,0,0,1,0],[0,-1,1,-1,0,0,1,1,0,1,0,0,0,1,1,0,0,1],[0,-1,0,1,-1,1,1,1,-1,1,0,0,0,0,0,0,0,0],[-1,1,0,-1,1,0,0,-1,1,0,0,0,0,0,0,1,0,0],[0,0,0,0,1,1,1,-1,-1,1,1,1,1,0,0,0,0,0],[1,-1,1,-1,0,1,1,-1,0,0,0,0,0,1,0,0,0,0],[0,0,0,1,0,1,1,-1,-1,1,1,1,0,1,0,0,0,0],[-1,1,-1,1,0,0,0,1,-1,0,0,0,0,1,1,0,0,0],[0,1,-1,0,0,1,1,0,-1,0,0,0,1,1,0,0,0,0],[0,1,-1,0,0,1,0,-1,1,1,0,0,1,1,0,0,0,0],[-1,0,0,-1,1,1,1,-1,0,0,0,1,0,0,0,0,0,0],[-1,-1,0,1,1,0,0,0,1,0,0,1,0,0,0,0,0,0],[1,1,0,0,1,0,0,-1,-1,0,0,1,0,0,0,1,0,0],[1,-1,0,1,0,-1,-1,0,1,0,0,0,0,1,0,0,0,0],[1,1,-1,0,0,1,-1,0,0,0,0,0,0,1,0,0,1,1],[1,0,1,-1,-1,0,0,0,1,0,0,0,0,0,1,0,0,0],[-1,1,1,0,0,0,0,-1,0,0,0,0,1,0,1,1,0,1],[1,0,0,-1,0,0,-1,1,1,0,0,0,0,1,0,0,0,0],[1,-1,1,-1,1,1,0,0,-1,0,0,0,0,0,0,1,0,0],[0,1,1,0,-1,-1,1,1,-1,1,0,0,1,0,0,0,0,0],[-1,1,1,1,1,-1,0,-1,0,0,0,0,0,0,0,1,0,0],[0,1,-1,-1,0,0,1,1,-1,0,0,0,0,1,1,0,0,0],[-1,-1,0,0,1,1,1,0,-1,0,0,1,0,0,0,0,0,0],[0,-1,0,1,-1,1,0,0,1,0,0,1,0,0,0,0,1,0],[0,1,-1,1,0,1,-1,-1,1,0,0,0,0,1,0,0,0,0],[0,1,1,-1,-1,0,-1,1,1,1,0,0,0,0,1,0,0,0],[1,1,0,0,-1,-1,1,-1,1,0,0,0,1,0,0,0,0,0],[0,-1,0,0,-1,1,0,1,1,1,0,1,1,0,0,1,0,0],[0,1,1,-1,0,0,0,1,-1,1,0,0,0,1,1,1,0,0],[1,-1,1,0,0,1,1,-1,-1,0,0,0,0,1,0,0,0,0],[1,0,-1,-1,0,-1,1,1,0,0,0,0,0,1,0,0,0,1],[1,-1,1,-1,0,0,0,1,-1,0,0,0,0,1,1,1,0,0],[0,0,-1,1,1,-1,-1,1,0,0,1,0,0,0,0,0,0,1],[1,0,0,-1,1,1,0,0,-1,0,1,1,0,0,0,1,1,0],[0,1,0,-1,1,0,-1,0,1,1,0,0,0,0,0,0,0,0],[1,1,0,1,-1,0,-1,-1,1,0,0,1,0,0,0,0,0,0],[1,0,-1,0,1,1,-1,1,-1,0,1,0,1,0,0,0,0,0],[-1,1,1,0,0,1,-1,0,-1,0,0,0,1,1,0,0,1,0],[0,1,-1,1,-1,1,0,1,-1,1,0,0,0,0,0,1,0,0],[0,1,-1,-1,1,0,1,0,0,0,0,0,0,0,0,0,1,0],[-1,0,1,1,0,0,-1,0,1,0,0,0,0,0,1,0,0,0],[-1,0,-1,1,1,-1,0,1,1,0,1,0,0,0,0,0,0,0],[1,-1,1,1,0,0,0,0,-1,0,0,0,0,0,0,1,0,0],[1,0,1,1,-1,0,0,-1,-1,0,1,0,0,0,0,1,0,0],[1,0,-1,-1,0,1,0,1,0,0,0,0,0,1,0,0,0,1],[1,0,0,0,0,1,1,-1,-1,0,1,1,1,1,0,0,0,0],[1,-1,1,1,1,0,-1,-1,0,0,0,0,0,0,0,0,0,1],[1,1,0,-1,-1,1,0,-1,0,0,0,1,0,0,0,0,0,0],[1,0,0,0,-1,0,1,1,-1,0,0,0,1,0,0,0,0,0],[1,0,-1,0,-1,1,0,-1,1,0,1,0,1,0,0,1,0,0],[1,1,0,0,-1,-1,1,0,0,0,0,0,1,0,0,0,0,0],[1,-1,0,0,-1,0,1,0,1,0,0,0,0,0,0,0,1,0],[-1,1,0,-1,0,0,1,-1,1,0,0,1,0,1,1,0,0,0],[1,0,0,1,-1,-1,0,-1,1,0,1,0,0,0,0,1,0,0],[-1,1,1,0,1,0,-1,-1,1,0,0,0,1,0,0,0,0,0],[1,0,0,0,-1,-1,1,0,1,0,0,0,1,0,0,0,0,0],[1,-1,-1,0,1,1,0,-1,0,0,0,0,1,0,0,1,0,1],[1,0,0,1,-1,1,0,0,-1,0,0,0,0,0,0,1,0,0],[0,0,-1,1,1,0,0,-1,1,1,1,0,0,0,1,1,0,0],[-1,1,0,1,0,-1,1,-1,1,0,0,1,0,1,0,0,0,0],[-1,1,0,0,1,0,1,0,-1,0,0,1,1,0,1,0,1,0],[0,-1,1,1,0,1,-1,1,-1,0,0,0,0,1,0,0,0,0],[0,0,1,0,1,0,-1,0,-1,1,0,0,1,0,0,0,1,0],[-1,1,1,-1,1,0,0,0,0,0,0,0,0,0,0,1,0,0],[0,1,-1,0,1,1,0,-1,0,0,0,0,1,0,0,0,0,0],[0,1,0,1,-1,-1,1,-1,1,1,0,0,0,0,0,0,0,0],[-1,1,-1,0,0,1,1,-1,1,0,0,0,1,1,0,0,0,0],[0,0,1,-1,-1,0,1,-1,1,0,1,0,0,0,1,0,0,0],[-1,1,-1,-1,1,0,1,0,1,0,0,0,0,0,0,0,1,0],[1,0,1,-1,-1,1,-1,1,-1,0,1,0,0,0,0,0,0,0],[0,0,1,1,0,1,-1,-1,0,0,0,0,0,0,0,0,0,1],[-1,0,1,1,-1,-1,0,0,1,0,1,0,0,0,0,1,1,0],[-1,1,-1,-1,0,1,0,1,0,0,0,0,0,1,0,1,0,0],[0,1,-1,0,0,-1,-1,1,1,0,0,0,0,1,0,0,0,0],[-1,0,1,0,0,-1,1,-1,1,0,0,0,0,1,0,0,0,0],[1,1,0,-1,-1,1,1,-1,0,0,0,1,0,0,0,0,0,0],[1,0,1,0,-1,0,-1,0,1,0,1,0,1,0,1,0,1,0],[1,1,0,0,-1,1,0,0,-1,0,0,1,0,0,0,0,0,0],[0,1,0,0,0,1,-1,-1,1,1,0,1,1,1,0,0,0,0],[-1,0,1,1,-1,0,1,-1,1,0,1,0,0,0,0,0,0,0],[1,0,0,1,-1,1,-1,0,0,0,1,1,0,0,0,0,1,1],[-1,1,0,0,1,0,1,-1,0,0,0,1,0,0,0,0,0,0],[-1,1,1,0,-1,-1,1,0,0,0,0,0,1,0,0,0,1,1],[1,0,-1,1,0,1,-1,1,-1,0,0,0,0,1,0,0,0,0],[0,1,1,-1,0,1,0,-1,0,1,0,0,0,1,0,1,0,1],[1,1,0,0,-1,1,-1,0,0,0,0,1,0,0,0,0,0,0],[-1,0,1,1,0,1,-1,0,0,0,1,0,0,1,0,0,1,1],[-1,1,0,-1,1,1,1,-1,0,0,0,1,0,0,0,0,0,0],[0,-1,0,1,0,0,1,1,-1,1,0,0,0,0,0,0,0,0],[-1,1,-1,1,1,-1,0,0,1,0,0,0,0,0,0,0,1,0],[1,-1,0,0,-1,1,-1,1,0,0,0,1,0,0,0,0,0,0],[-1,1,0,-1,1,1,1,-1,0,0,0,1,0,0,0,0,0,0],[0,1,0,1,-1,-1,1,0,-1,1,0,1,0,0,0,0,0,0],[-1,0,0,1,0,1,0,1,-1,0,0,0,0,1,0,0,0,0],[-1,0,-1,0,0,1,1,-1,1,0,1,0,0,0,0,0,0,0],[-1,0,1,0,-1,0,1,1,0,0,0,0,0,0,0,0,0,1],[-1,0,1,0,-1,1,0,1,0,0,0,0,0,0,0,0,0,1],[1,-1,1,0,-1,1,0,1,-1,0,0,0,1,0,0,1,0,0],[0,0,1,1,0,0,1,-1,-1,1,1,0,0,1,1,0,0,0],[1,1,0,-1,-1,0,0,1,-1,0,0,1,0,0,1,0,0,0],[-1,1,0,0,-1,-1,1,1,0,0,0,0,1,0,0,0,0,1],[-1,1,1,-1,-1,0,1,1,0,0,0,0,0,0,1,0,0,1],[0,1,1,0,-1,-1,-1,0,1,0,0,0,1,0,0,0,0,0],[-1,0,1,0,1,-1,0,1,0,0,1,0,1,0,0,1,0,1],[0,-1,0,0,1,0,-1,1,1,1,0,0,0,0,0,0,0,0],[0,1,-1,0,-1,0,0,0,1,0,0,0,1,0,1,1,0,0],[1,1,0,1,0,-1,-1,-1,0,0,0,1,0,0,0,0,0,1],[0,-1,1,0,-1,0,1,1,-1,1,0,0,1,0,1,0,0,0],[-1,0,1,-1,1,-1,0,0,1,0,0,0,0,0,0,1,0,0],[0,-1,1,1,0,0,-1,0,1,0,0,0,0,0,1,0,0,0],[-1,0,1,-1,1,0,0,1,0,0,0,0,0,0,0,1,0,0],[-1,1,0,1,-1,0,-1,1,0,0,0,1,0,0,1,0,0,1],[-1,0,-1,1,1,-1,1,0,1,0,1,0,0,0,0,0,0,0],[0,0,0,1,-1,-1,1,1,0,1,1,1,0,0,0,0,0,1],[1,1,0,0,-1,0,-1,1,-1,0,0,1,0,0,0,0,0,0],[0,-1,-1,1,-1,1,0,1,1,1,0,0,0,0,0,1,0,0],[0,0,-1,0,1,1,-1,0,1,1,1,0,1,0,0,0,1,0],[0,-1,1,1,0,1,0,-1,-1,0,0,0,0,1,0,1,0,0],[0,1,0,1,1,0,-1,-1,0,0,0,0,0,0,0,0,0,1],[1,0,1,1,-1,-1,-1,0,0,0,1,0,0,0,0,0,0,0],[0,-1,0,1,-1,1,-1,0,1,0,0,1,0,0,0,0,1,0],[-1,1,1,1,1,-1,0,0,-1,0,0,0,0,0,0,1,1,0],[0,-1,-1,1,1,0,-1,1,1,1,0,0,0,0,0,0,0,0],[1,1,-1,0,0,-1,1,-1,1,0,0,0,1,1,0,0,0,0],[-1,0,0,-1,1,0,1,-1,1,0,0,1,0,0,0,0,0,0],[-1,0,0,1,0,-1,1,0,1,0,0,0,0,0,0,0,1,0],[0,-1,0,1,0,1,1,-1,-1,0,0,0,0,1,0,0,0,0],[0,0,1,-1,0,-1,1,1,0,0,0,0,0,1,0,0,0,0],[-1,0,1,0,1,1,0,0,-1,0,1,0,1,0,0,1,1,0],[1,0,-1,-1,1,-1,1,1,0,0,0,0,0,0,0,0,0,1],[-1,0,1,0,0,-1,0,1,1,0,0,0,0,0,0,1,0,0],[0,1,1,0,-1,1,0,-1,0,1,0,0,1,0,0,1,0,1],[-1,1,1,-1,0,-1,1,1,0,0,0,0,0,1,0,0,0,0],[0,-1,0,1,1,-1,0,0,1,1,0,0,0,0,0,0,0,0],[0,-1,0,-1,1,1,0,-1,1,1,0,1,0,0,0,1,0,0],[0,1,0,0,0,1,-1,1,-1,0,0,0,0,1,0,0,0,0],[1,0,1,-1,1,0,-1,0,0,0,1,0,0,0,1,0,1,1],[0,1,-1,-1,1,-1,1,0,0,0,0,0,0,0,0,0,0,1],[0,-1,-1,1,0,1,-1,0,1,1,0,0,0,1,0,0,0,0],[0,1,0,-1,0,-1,0,1,1,0,0,0,0,1,0,0,0,0],[-1,1,1,0,0,0,0,1,-1,0,0,0,0,1,0,0,0,0],[0,1,-1,1,-1,0,1,1,-1,1,0,0,0,0,1,0,0,0],[1,0,-1,-1,-1,1,0,1,0,0,0,0,0,0,0,1,0,0],[-1,1,1,-1,-1,0,0,1,1,0,0,0,0,0,1,1,0,0],[-1,1,0,0,-1,1,0,1,0,0,0,1,1,0,0,1,0,1],[-1,0,-1,-1,1,1,1,0,1,0,1,0,0,0,0,0,0,0],[1,1,0,1,-1,0,-1,1,-1,0,0,1,0,0,0,0,0,0],[-1,1,-1,0,0,1,1,1,-1,0,0,0,0,1,0,0,0,0],[0,-1,1,0,-1,1,1,1,-1,1,0,0,0,0,0,0,0,0],[1,-1,-1,1,-1,1,0,1,0,0,0,0,0,0,0,1,0,0],[1,1,0,0,0,0,-1,-1,1,0,0,1,1,1,1,0,0,0],[0,-1,0,-1,1,1,0,0,1,1,0,1,0,0,0,1,1,0],[0,0,0,-1,1,1,1,-1,0,0,0,1,0,0,0,0,0,0],[1,-1,-1,1,0,0,0,0,0,0,0,0,0,1,1,1,1,1],[0,1,1,0,-1,1,-1,-1,0,0,0,0,0,0,0,0,0,1],[-1,0,-1,1,0,-1,1,0,1,0,1,0,0,0,0,0,0,0],[-1,0,1,0,0,0,1,1,-1,0,0,0,0,1,0,0,0,0],[1,0,1,0,0,1,-1,0,-1,0,0,0,0,0,0,0,1,0],[0,1,1,-1,1,-1,0,0,0,1,0,0,0,0,0,1,1,1],[-1,-1,0,1,1,-1,1,0,1,0,0,1,0,0,0,0,0,0],[-1,-1,0,-1,1,1,0,1,0,0,0,1,0,0,0,1,0,1],[0,-1,1,0,1,0,0,1,-1,0,0,0,0,0,0,1,0,0],[1,1,0,-1,0,1,0,0,-1,0,0,1,0,0,0,0,0,0],[0,1,0,1,0,-1,0,-1,1,1,0,0,0,0,0,0,0,0],[-1,1,1,0,0,-1,1,1,-1,0,0,0,0,1,0,0,0,0],[1,1,0,1,0,0,-1,0,-1,0,0,1,0,0,0,0,1,0],[-1,1,-1,0,1,0,1,-1,1,0,0,0,1,0,1,0,0,0],[1,1,-1,0,-1,1,0,0,0,0,0,0,0,0,0,1,0,0],[-1,-1,0,1,1,0,1,1,-1,0,0,1,0,0,0,0,0,0],[1,-1,0,1,0,0,0,-1,1,0,0,0,0,1,0,0,0,0],[-1,1,1,0,-1,-1,1,0,1,0,0,0,1,0,0,0,0,0],[1,0,0,1,-1,0,-1,0,1,0,1,1,0,0,0,0,1,0],[1,1,-1,-1,1,1,0,-1,0,0,0,0,0,0,0,0,0,1],[0,1,0,1,0,0,-1,-1,1,1,0,1,0,1,1,0,0,0],[0,-1,0,-1,1,0,1,1,0,1,0,1,0,0,1,0,0,1],[0,-1,1,1,-1,0,1,0,-1,1,0,0,0,0,0,0,1,0],[0,0,-1,-1,0,0,1,1,0,0,0,0,0,0,0,0,0,1],[-1,0,-1,1,1,0,-1,1,1,0,1,0,0,0,0,0,0,0],[-1,1,0,0,1,1,0,0,-1,0,0,1,1,0,0,1,1,0],[-1,0,0,1,0,0,0,0,1,0,0,1,0,1,1,0,0,0],[0,1,0,0,-1,1,-1,1,-1,1,0,1,1,0,0,0,0,0],[1,0,1,-1,1,1,-1,-1,0,0,0,0,0,0,0,0,0,1],[0,1,-1,-1,1,0,1,0,-1,0,0,0,0,0,1,0,0,0],[1,0,0,0,1,0,-1,1,-1,0,1,0,0,0,0,0,0,0],[-1,0,1,1,0,0,-1,0,1,0,0,0,0,0,1,0,0,0],[0,1,0,0,-1,1,-1,1,0,1,0,1,1,0,0,0,0,1],[-1,-1,1,1,0,1,0,1,-1,0,0,0,0,1,0,0,0,0],[1,-1,1,0,-1,0,0,1,-1,0,0,0,1,0,1,1,0,0],[0,0,1,-1,1,1,0,0,-1,0,0,0,0,0,0,1,0,0],[1,1,-1,0,0,1,-1,1,-1,0,0,0,0,1,0,0,0,0],[0,0,0,1,1,-1,0,-1,1,1,0,0,0,0,0,0,0,0],[-1,1,1,0,0,-1,1,-1,0,0,0,0,0,1,0,0,0,0],[0,0,-1,0,0,1,1,-1,0,0,1,0,0,0,0,0,0,0],[0,0,-1,1,1,0,0,1,-1,0,0,0,0,0,1,0,0,0],[0,0,1,0,1,0,-1,-1,1,1,1,0,1,0,1,0,0,0],[-1,1,0,1,-1,0,-1,0,1,0,0,1,0,0,0,0,0,0],[0,1,0,-1,0,1,0,1,-1,0,0,0,0,1,0,0,0,0],[0,1,-1,0,-1,0,1,1,-1,1,0,0,1,0,1,0,0,0],[-1,1,0,0,0,1,1,-1,0,0,0,1,0,1,0,0,0,0],[1,0,0,-1,0,1,0,1,-1,0,1,1,0,1,0,0,0,0],[-1,0,0,-1,0,1,0,1,1,0,0,0,0,0,0,1,0,0],[-1,0,-1,0,-1,1,0,1,1,0,1,0,0,0,0,1,0,0],[0,1,0,1,-1,0,0,1,-1,1,0,1,0,0,1,1,0,0],[1,0,-1,1,-1,1,0,0,0,0,0,0,0,0,0,1,0,0],[0,0,1,-1,-1,1,-1,1,0,1,0,0,0,0,0,0,0,0],[1,0,0,1,1,-1,-1,1,-1,0,0,1,0,0,0,0,0,0],[1,1,0,0,-1,1,-1,1,-1,0,0,1,0,0,0,0,0,0],[-1,0,1,0,0,1,-1,1,0,0,0,0,1,0,0,0,0,1],[-1,0,1,1,0,1,-1,0,0,0,1,0,0,1,0,0,1,1],[0,1,0,-1,-1,1,0,0,1,0,0,1,0,0,0,0,0,0],[1,0,1,1,0,-1,0,-1,0,0,1,0,0,1,0,1,0,1],[1,0,-1,1,-1,-1,0,1,0,0,0,0,0,0,0,1,0,1],[1,0,1,1,1,-1,0,-1,-1,0,0,0,0,0,0,1,0,0],[1,-1,1,0,0,0,0,-1,1,0,0,0,0,1,0,0,0,0],[0,-1,1,0,1,1,0,-1,-1,0,0,0,0,0,0,1,0,0],[1,-1,-1,1,0,1,0,1,-1,0,0,0,0,1,0,1,0,0],[0,-1,0,1,-1,1,1,0,0,1,0,0,0,0,0,0,1,0],[0,1,1,1,-1,0,-1,1,-1,1,0,0,0,0,0,0,0,0],[1,-1,-1,1,0,1,0,0,0,0,0,0,0,1,0,1,1,1],[1,0,1,-1,1,0,-1,0,-1,0,0,0,0,0,0,0,1,0],[-1,-1,1,1,-1,0,-1,1,1,0,0,0,0,0,1,0,0,0],[-1,-1,1,0,1,-1,0,1,1,0,0,0,0,0,0,1,0,0],[-1,1,1,0,1,1,-1,0,-1,0,0,0,1,0,0,0,1,0],[0,-1,1,0,1,1,0,0,-1,1,0,0,1,0,0,1,1,0],[-1,1,1,1,0,-1,0,1,-1,0,0,0,0,1,0,0,0,0],[-1,0,1,0,1,1,-1,-1,0,0,0,0,1,0,0,0,0,1],[0,0,1,1,1,-1,-1,1,-1,0,1,0,0,0,0,0,0,0],[-1,-1,1,0,1,0,-1,1,1,0,0,0,1,0,0,0,0,0],[0,-1,1,0,1,-1,-1,1,1,1,0,0,0,0,0,0,0,0],[0,-1,1,1,-1,1,0,1,-1,1,0,0,0,0,0,0,0,0],[1,0,0,-1,0,0,1,1,-1,0,0,0,0,0,1,0,0,0],[-1,1,0,0,0,0,-1,1,1,0,0,0,1,1,0,0,0,0],[1,0,1,-1,0,0,0,1,-1,0,1,0,0,0,0,0,0,0],[0,0,0,1,0,-1,1,1,-1,1,0,1,0,0,0,0,0,0],[0,1,0,0,1,1,-1,0,-1,0,0,0,0,0,0,0,1,0],[-1,0,0,1,0,1,-1,1,0,0,0,0,0,1,0,0,0,0],[0,0,-1,0,1,1,-1,0,1,1,1,0,1,0,0,0,1,0],[1,1,-1,-1,0,0,0,1,0,0,0,0,0,1,0,0,0,0],[-1,-1,0,0,-1,1,1,1,0,0,0,1,0,0,0,0,0,1],[0,-1,1,-1,0,0,1,0,1,1,0,0,0,1,1,0,1,0],[1,0,1,-1,0,1,0,-1,-1,0,1,0,0,0,0,1,0,0],[0,1,-1,0,-1,0,1,0,1,0,0,0,0,0,0,0,1,0],[-1,1,0,1,0,0,-1,1,0,0,0,0,0,1,0,0,0,0],[0,0,1,0,1,0,-1,1,-1,0,1,0,0,0,0,0,0,0],[1,-1,1,-1,-1,0,0,0,1,0,0,0,0,0,1,0,1,0],[-1,1,-1,0,0,0,1,1,-1,0,0,0,0,1,1,0,0,0],[0,0,1,1,0,-1,0,1,-1,1,1,0,0,1,0,1,0,0],[-1,1,1,0,0,0,1,-1,-1,0,0,0,0,1,0,0,0,0],[1,1,0,-1,0,-1,0,0,1,0,0,0,0,1,0,0,0,0],[0,-1,1,-1,-1,0,1,0,1,0,0,0,0,0,1,0,1,0],[1,-1,0,1,-1,1,-1,1,0,0,0,1,0,0,0,0,0,0],[-1,0,1,-1,1,-1,0,1,0,0,0,0,0,0,0,1,0,0],[0,1,0,1,1,-1,-1,-1,0,0,0,0,0,0,0,0,0,1],[0,-1,0,1,0,-1,1,1,-1,1,0,1,0,0,0,0,0,0],[-1,1,-1,1,1,-1,0,0,0,0,0,0,0,0,0,0,0,1],[1,-1,-1,1,-1,1,0,0,0,0,0,0,0,0,0,1,1,0],[-1,1,0,0,1,0,-1,-1,1,0,0,0,1,0,0,0,0,0],[1,1,-1,0,1,1,0,-1,-1,0,0,0,0,0,0,1,0,0],[-1,1,1,-1,0,1,0,1,-1,0,0,0,0,1,0,1,0,0],[0,1,-1,-1,0,0,0,1,0,0,0,0,0,1,0,0,0,0],[1,1,-1,1,0,0,-1,-1,1,0,0,0,0,1,0,0,0,0],[0,0,1,1,1,-1,-1,0,-1,0,0,0,0,0,0,0,1,0],[0,1,-1,1,-1,-1,1,0,0,0,0,0,0,0,0,0,0,1],[0,0,-1,-1,1,0,0,1,1,1,1,0,0,0,1,1,0,0],[-1,0,0,-1,1,-1,1,0,1,0,1,1,0,0,0,0,1,0],[1,0,1,-1,0,0,-1,1,0,0,1,0,0,1,1,0,0,1],[-1,0,0,-1,1,0,1,1,-1,0,1,1,0,0,1,0,0,0],[1,-1,0,1,-1,0,0,1,0,0,0,0,0,0,0,1,0,0],[-1,0,-1,1,-1,1,1,1,0,0,1,0,0,0,0,0,0,1],[-1,1,0,-1,0,1,1,0,-1,0,0,0,0,1,0,0,0,0],[1,-1,1,-1,-1,0,0,1,1,0,0,0,0,0,1,0,0,0],[-1,1,1,-1,1,1,0,-1,0,0,0,0,0,0,0,1,0,0],[0,1,1,-1,0,1,-1,1,-1,1,0,0,0,0,0,0,0,0],[-1,0,1,0,-1,0,0,1,1,0,1,0,1,0,1,1,0,0],[1,-1,0,-1,1,0,1,0,0,0,0,1,0,0,1,0,1,1],[0,1,1,-1,0,0,-1,-1,1,1,0,0,0,0,0,0,0,0],[-1,1,1,1,-1,1,0,-1,0,0,0,0,0,0,0,0,0,1],[0,1,1,1,0,-1,1,-1,-1,1,0,0,0,1,0,0,0,0],[0,0,-1,0,1,0,1,-1,1,1,0,0,0,0,0,0,0,0],[1,1,-1,1,-1,1,0,0,-1,0,0,0,0,0,0,1,0,0],[-1,0,0,1,0,1,0,1,-1,0,0,0,0,1,0,0,0,0],[1,0,1,1,0,-1,-1,1,-1,0,1,0,0,0,0,0,0,0],[0,-1,0,-1,0,1,0,1,1,1,0,1,0,1,0,1,0,0],[1,0,0,0,1,-1,-1,1,0,0,1,1,1,0,0,0,0,1],[0,0,-1,1,-1,-1,1,1,0,0,0,0,0,0,0,0,0,1],[-1,1,-1,1,-1,0,0,1,1,0,0,0,0,0,0,1,0,0],[-1,1,-1,0,1,0,1,0,0,0,0,0,0,0,0,0,1,0],[0,0,1,1,0,0,1,-1,-1,1,1,0,0,1,1,0,0,0],[0,-1,1,-1,-1,1,1,1,0,0,0,0,0,0,0,0,0,1],[-1,1,-1,0,1,1,1,0,-1,0,0,0,1,0,0,0,1,0],[-1,-1,1,0,1,0,0,1,0,0,0,0,0,0,0,1,0,0],[0,0,1,0,1,0,-1,-1,1,1,1,0,1,0,1,0,0,0],[1,1,-1,-1,0,1,0,-1,1,0,0,0,0,1,0,0,0,0],[1,0,1,0,-1,-1,-1,1,1,0,0,0,1,0,0,0,0,0],[0,0,0,-1,0,1,-1,1,1,1,0,1,0,0,0,0,0,0],[0,1,0,-1,1,1,-1,0,-1,1,0,0,0,0,0,0,1,0],[1,0,-1,0,0,1,1,-1,0,0,0,0,1,0,0,0,0,0],[-1,-1,0,0,1,1,-1,1,1,0,0,1,1,0,0,0,0,0],[-1,-1,0,1,-1,1,0,1,1,0,0,1,0,0,0,0,0,0],[-1,1,1,0,-1,-1,0,1,1,0,0,0,1,0,0,0,0,0],[-1,1,1,1,1,-1,0,0,-1,0,0,0,0,0,0,1,1,0],[1,0,0,0,1,-1,1,-1,0,0,1,1,1,0,0,0,0,1],[-1,1,-1,0,0,1,-1,1,0,0,0,0,1,1,0,0,0,0],[1,-1,1,0,0,0,0,1,-1,0,0,0,1,1,0,1,0,0],[0,1,0,1,-1,0,-1,1,-1,1,0,1,0,0,1,0,0,0],[1,-1,1,0,0,-1,1,1,-1,0,0,0,1,1,0,0,0,0],[0,-1,1,-1,1,1,0,0,-1,0,0,0,0,0,0,1,0,0],[0,1,0,-1,-1,1,1,-1,1,0,0,1,0,0,0,0,0,0],[1,-1,1,0,0,0,-1,1,0,0,0,0,0,1,1,0,0,1],[1,1,0,-1,-1,0,1,1,-1,0,0,0,0,0,1,0,0,0],[0,-1,1,0,0,0,1,-1,1,0,0,0,0,1,0,0,0,0],[-1,1,0,1,0,0,1,-1,0,0,0,1,0,1,1,0,0,0],[0,-1,1,0,0,-1,1,0,1,1,0,0,1,1,0,0,1,0],[-1,0,0,0,1,1,1,-1,-1,0,1,1,1,0,0,0,0,0],[1,1,0,1,1,-1,-1,0,-1,0,0,1,0,0,0,0,1,0],[-1,-1,1,1,-1,0,0,1,0,0,0,0,0,0,0,0,0,1],[1,-1,0,0,0,-1,1,0,1,0,0,1,1,1,0,0,1,0],[-1,1,0,-1,1,1,0,-1,1,0,0,0,0,0,0,1,0,0],[0,-1,-1,0,0,1,1,-1,1,1,0,0,1,1,0,0,0,0],[0,0,1,-1,-1,0,-1,1,1,1,0,0,0,0,1,0,0,0],[1,0,0,0,-1,-1,-1,1,1,0,1,1,1,0,0,0,0,0],[1,-1,1,0,0,-1,1,0,0,0,0,0,1,1,0,0,1,1],[0,1,1,-1,0,-1,-1,1,1,1,0,0,0,1,0,0,0,0],[1,1,0,0,-1,1,0,-1,0,0,0,1,0,0,0,0,0,0],[0,0,0,-1,-1,1,0,1,1,1,1,1,0,0,0,1,0,0],[-1,1,1,1,0,0,0,0,-1,0,0,0,0,1,0,1,1,0],[-1,0,0,0,1,-1,1,0,1,0,1,1,1,0,0,0,1,0],[0,0,-1,0,-1,1,1,0,1,0,0,0,0,0,0,0,1,0],[1,1,0,-1,0,-1,1,0,0,0,0,1,0,1,0,0,0,0],[1,-1,1,-1,-1,0,1,1,0,0,0,0,0,0,1,0,0,0],[-1,1,1,0,0,-1,1,-1,1,0,0,0,0,1,0,0,0,0],[-1,0,0,1,-1,1,-1,1,1,0,0,1,0,0,0,0,0,0],[-1,-1,0,1,0,0,1,1,0,0,0,1,0,0,0,0,0,1],[1,1,0,-1,1,0,-1,0,0,0,0,1,0,0,1,0,1,1],[1,1,0,-1,-1,0,0,1,0,0,0,1,0,0,1,0,0,0],[0,1,0,1,-1,0,-1,1,0,1,0,1,0,0,0,0,0,1],[0,1,0,-1,0,0,-1,1,1,1,0,0,0,1,0,0,0,0],[-1,1,1,1,0,-1,0,0,0,0,0,0,0,1,0,1,1,0],[0,0,-1,0,1,1,1,-1,0,0,0,0,1,0,0,0,0,0],[1,0,-1,-1,1,1,-1,0,0,0,0,0,0,0,0,0,0,1],[1,1,-1,1,-1,-1,0,0,1,0,0,0,0,0,0,1,0,0],[0,0,0,1,-1,1,1,0,-1,1,0,0,0,0,0,0,0,0],[1,-1,-1,0,1,1,0,0,0,0,0,0,1,0,0,1,1,1],[1,-1,-1,1,0,1,-1,1,0,0,0,0,0,1,0,0,0,0],[1,0,1,-1,0,0,1,0,-1,0,1,0,0,1,1,0,1,0],[0,0,-1,0,1,1,0,-1,1,1,1,0,1,0,0,1,0,0],[1,1,-1,-1,0,0,1,-1,0,0,0,0,0,0,1,0,0,0],[0,-1,0,0,1,0,1,1,-1,0,0,1,0,0,0,0,0,0],[-1,1,0,1,0,1,0,0,-1,0,0,0,0,1,0,0,0,0],[0,0,1,0,-1,-1,1,1,0,0,0,0,1,0,0,0,0,1],[0,1,1,0,-1,0,0,1,-1,1,0,0,0,0,0,0,0,0],[0,1,-1,-1,-1,1,1,1,0,0,0,0,0,0,0,0,0,1],[0,1,0,-1,1,0,-1,0,1,1,0,0,0,0,0,0,0,0],[1,-1,0,-1,1,1,0,-1,0,0,0,0,0,0,0,0,0,1],[0,1,-1,-1,-1,1,0,1,1,0,0,0,0,0,0,1,0,0],[1,-1,0,-1,0,1,0,-1,1,0,0,0,0,1,0,0,0,0],[0,1,1,-1,0,-1,1,0,-1,0,0,0,0,1,0,0,0,0],[-1,0,0,1,-1,0,0,1,1,0,0,0,0,0,0,1,0,0],[1,0,1,-1,-1,0,-1,1,1,0,0,0,0,0,1,0,0,0],[1,0,0,-1,-1,1,1,0,0,0,1,1,0,0,0,0,1,1],[0,1,1,1,0,0,0,-1,-1,1,0,0,0,0,0,1,0,0],[1,0,-1,-1,1,1,1,0,-1,0,1,0,0,0,0,0,1,0],[-1,-1,1,-1,0,1,1,0,0,0,0,0,0,1,0,0,1,1],[-1,0,0,1,1,-1,1,0,-1,0,0,1,0,0,0,0,0,0],[1,-1,1,0,0,0,0,1,-1,0,0,0,1,1,0,1,0,0],[1,1,0,0,0,-1,0,-1,1,0,0,1,1,1,0,1,0,0],[1,0,0,1,-1,1,0,-1,0,0,1,0,0,0,0,1,0,0],[-1,0,1,1,-1,1,0,-1,0,0,1,0,0,0,0,0,0,1],[-1,0,1,1,1,0,-1,0,-1,0,0,0,0,0,0,0,1,0],[1,-1,-1,0,1,1,0,0,-1,0,0,0,1,0,0,0,0,0],[1,-1,-1,1,0,-1,0,0,1,0,0,0,0,1,0,1,1,0],[-1,0,-1,1,1,0,1,1,-1,0,1,0,0,0,1,0,0,0],[0,1,-1,-1,1,-1,0,0,1,1,0,0,0,0,0,1,1,0],[-1,1,1,0,0,-1,-1,0,1,0,0,0,1,0,0,0,0,0],[-1,1,1,1,-1,0,0,0,0,0,0,0,0,0,0,0,0,1],[0,1,-1,0,1,-1,1,0,0,0,0,0,0,0,0,0,0,1],[1,-1,1,0,1,0,0,0,-1,0,0,0,0,0,0,1,0,0],[0,1,0,-1,1,-1,1,0,0,1,0,1,0,0,0,0,1,1],[-1,1,-1,0,0,0,1,1,0,0,0,0,1,1,1,0,0,1],[1,-1,-1,0,0,1,-1,0,1,0,0,0,0,1,0,0,0,0],[0,-1,-1,0,-1,1,1,1,0,1,0,0,0,0,0,0,0,0],[0,1,0,0,0,1,-1,1,-1,0,0,0,0,1,0,0,0,0],[0,1,-1,1,1,0,0,0,-1,0,0,0,0,0,1,0,0,0],[1,1,-1,-1,0,1,1,0,-1,0,0,0,0,1,0,0,1,0],[0,-1,0,1,1,0,1,-1,-1,1,0,1,0,0,1,0,0,0],[-1,0,1,0,0,-1,1,-1,1,0,0,0,0,1,0,0,0,0],[-1,1,-1,1,-1,1,1,0,0,0,0,0,0,0,0,0,0,1],[0,0,0,1,-1,1,-1,1,0,1,0,1,0,0,0,0,0,1],[-1,0,0,-1,1,1,1,1,-1,0,1,1,0,0,0,0,0,0],[-1,0,0,0,1,1,-1,-1,1,0,0,0,1,0,0,0,0,0],[0,1,0,1,-1,0,-1,0,1,0,0,1,0,0,0,0,0,0],[-1,0,-1,1,1,0,0,1,-1,0,1,0,0,0,1,0,0,0],[1,0,-1,1,-1,-1,0,1,1,0,0,0,0,0,0,1,0,0],[0,1,-1,0,0,1,1,-1,0,1,0,0,1,1,0,0,0,0],[-1,-1,0,1,1,0,-1,1,1,0,0,1,0,0,0,0,0,0],[1,-1,1,-1,-1,1,0,1,0,0,0,0,0,0,0,0,0,1],[0,1,0,-1,0,1,1,0,-1,0,0,1,0,1,0,0,0,0],[-1,1,1,0,1,-1,0,0,0,0,0,0,1,0,0,1,1,1],[0,0,0,-1,1,-1,0,1,1,1,1,1,0,0,0,1,0,0],[0,-1,0,1,0,1,-1,1,0,0,0,0,0,1,0,0,0,0],[0,-1,-1,1,1,-1,1,0,1,1,0,0,0,0,0,0,0,0],[0,0,1,1,0,0,-1,-1,1,1,1,0,0,1,1,0,0,0],[1,0,1,1,-1,0,-1,0,0,0,1,0,0,0,0,0,0,0],[1,-1,0,1,1,0,0,-1,0,0,0,1,0,0,1,1,0,1],[0,0,-1,-1,1,1,1,1,-1,0,1,0,0,0,0,0,0,0],[1,0,-1,0,1,-1,1,0,0,0,0,0,0,0,0,0,0,1],[1,0,-1,-1,-1,1,0,1,1,0,0,0,0,0,0,1,0,0],[0,-1,-1,1,-1,1,1,0,0,1,0,0,0,0,0,0,1,0],[-1,1,0,1,-1,1,-1,0,0,0,0,1,0,0,0,0,1,1],[0,0,-1,1,0,1,1,-1,0,1,1,0,0,1,0,0,0,1],[-1,0,1,-1,0,0,1,0,1,0,1,0,0,1,1,0,1,0],[-1,-1,1,1,0,0,0,0,1,0,0,0,0,1,1,1,1,0],[0,-1,1,-1,0,0,0,1,1,1,0,0,0,1,1,1,0,0],[-1,0,1,-1,0,1,1,0,0,0,1,0,0,1,0,0,1,1],[0,0,0,1,1,-1,0,-1,1,1,0,0,0,0,0,0,0,0],[1,1,-1,-1,-1,1,0,0,1,0,0,0,0,0,0,1,0,0],[1,-1,-1,-1,1,1,0,1,0,0,0,0,0,0,0,0,0,1],[-1,1,-1,0,0,1,1,1,-1,0,0,0,0,1,0,0,0,0],[1,-1,0,1,0,0,0,-1,1,0,0,0,0,1,0,0,0,0],[1,1,0,-1,0,0,0,-1,1,0,0,1,0,1,1,1,0,0],[0,-1,1,0,1,1,-1,-1,0,0,0,0,0,0,0,0,0,1],[0,-1,1,1,0,1,0,0,-1,0,0,0,0,1,0,0,0,0],[0,1,-1,1,1,0,0,-1,0,0,0,0,0,0,1,0,0,0],[0,-1,1,1,-1,0,0,1,-1,1,0,0,0,0,0,0,0,0],[0,0,0,1,1,-1,-1,0,1,1,0,0,0,0,0,0,0,0],[-1,1,-1,1,0,-1,0,1,1,0,0,0,0,1,0,1,0,0],[-1,1,0,0,0,1,-1,1,-1,0,0,0,1,1,0,0,0,0],[-1,0,1,1,-1,1,-1,1,0,0,0,0,0,0,0,0,0,1],[1,1,-1,-1,1,0,0,-1,0,0,0,0,0,0,0,0,0,1],[0,0,-1,1,0,-1,1,1,0,0,0,0,0,0,0,0,0,1],[-1,0,1,1,1,0,-1,-1,0,0,0,0,0,0,0,0,0,1],[0,1,-1,-1,1,0,0,-1,1,1,0,0,0,0,0,0,0,0],[-1,1,1,0,1,0,-1,0,0,0,0,0,1,0,0,0,1,0],[1,0,1,-1,0,0,1,-1,0,0,1,0,0,1,1,0,0,1],[0,0,0,1,1,-1,-1,1,-1,0,0,1,0,0,0,0,0,0],[0,1,-1,0,1,-1,0,0,1,1,0,0,1,0,0,1,1,0],[-1,1,1,1,0,-1,0,0,0,0,0,0,0,1,0,1,1,0],[-1,1,-1,1,-1,0,1,0,0,0,0,0,0,0,0,0,0,1],[1,1,-1,0,-1,1,1,0,-1,0,0,0,1,0,0,0,0,0],[0,-1,1,1,1,-1,0,-1,1,1,0,0,0,0,0,1,0,0],[-1,1,1,1,-1,0,1,-1,0,0,0,0,0,0,0,0,0,1],[1,0,1,1,-1,-1,0,-1,1,0,1,0,0,0,0,0,0,0],[1,-1,0,0,1,1,0,0,-1,0,0,0,1,0,0,0,0,0],[1,0,1,-1,-1,1,1,-1,0,0,1,0,0,0,0,0,0,0],[-1,1,0,1,0,1,0,-1,0,0,0,0,0,1,0,0,0,0],[0,1,-1,-1,1,1,-1,0,1,1,0,0,0,0,0,0,0,0],[1,0,-1,-1,0,0,1,0,1,0,1,0,0,1,1,0,1,0],[1,1,0,0,0,-1,-1,0,1,0,0,1,1,1,0,0,1,0],[0,0,-1,1,0,-1,0,1,1,1,1,0,0,1,0,1,0,0],[0,-1,-1,1,0,1,-1,1,1,1,0,0,0,1,0,0,0,0],[1,-1,1,0,1,-1,-1,1,0,0,0,0,0,0,0,0,0,1],[0,1,-1,1,0,1,1,-1,-1,1,0,0,0,1,0,0,0,0],[1,0,0,-1,0,-1,1,0,1,0,0,0,0,1,0,0,0,0],[1,-1,0,0,-1,1,0,1,0,0,0,0,0,0,0,1,0,1],[0,1,-1,-1,1,0,1,0,-1,0,0,0,0,0,1,0,0,0],[-1,1,-1,1,1,0,0,0,0,0,0,0,0,0,1,1,1,1],[0,-1,0,1,-1,-1,0,1,1,0,0,0,0,0,0,1,0,0],[-1,1,1,0,1,-1,-1,0,1,0,0,0,1,0,0,0,0,0],[-1,0,1,1,0,0,-1,1,-1,0,0,0,0,1,0,0,0,0],[0,-1,1,1,-1,-1,1,0,1,0,0,0,0,0,0,0,1,0],[1,0,-1,0,-1,1,0,1,0,0,0,0,0,0,0,1,0,0],[1,0,1,0,-1,1,0,-1,0,0,1,0,0,0,0,0,0,0],[0,0,1,0,-1,-1,1,-1,1,1,1,0,1,0,0,0,0,0],[0,1,1,0,-1,0,-1,0,1,1,0,0,1,0,1,0,1,0],[0,1,1,-1,0,0,1,-1,-1,1,0,0,0,1,1,0,0,0],[-1,1,-1,1,0,1,1,0,-1,0,0,0,0,1,0,0,0,0],[1,0,1,1,1,-1,-1,-1,0,0,0,0,0,0,0,0,0,1],[0,0,1,0,-1,0,1,0,0,0,1,0,1,0,1,0,1,0],[-1,1,-1,0,-1,0,1,0,1,0,0,0,0,0,0,0,1,0],[0,-1,1,0,1,1,-1,1,-1,0,0,0,1,0,0,0,0,0],[-1,-1,0,0,1,1,0,-1,1,0,0,1,0,0,0,0,0,0],[1,0,-1,0,0,-1,1,1,0,0,0,0,0,0,0,0,0,1],[0,0,1,-1,-1,1,1,1,-1,1,0,0,0,0,0,0,0,0],[1,1,-1,0,-1,-1,0,1,1,0,0,0,1,0,0,1,0,0],[1,1,-1,1,0,1,-1,0,-1,0,0,0,0,1,0,0,1,0],[1,1,-1,1,0,0,0,-1,0,0,0,0,0,0,0,1,0,0],[-1,-1,1,0,0,0,0,1,1,0,0,0,1,1,1,1,0,0],[0,1,0,1,-1,0,-1,1,0,1,0,1,0,0,0,0,0,1],[0,0,1,0,-1,-1,1,1,0,0,0,0,1,0,0,0,0,1],[-1,0,-1,1,0,-1,1,1,0,0,1,0,0,0,0,0,0,1],[1,1,-1,0,-1,-1,1,0,1,0,0,0,1,0,0,0,0,0],[1,-1,-1,0,0,1,1,1,-1,0,0,0,1,0,0,0,0,0],[0,0,-1,1,-1,1,0,-1,1,1,1,0,0,0,0,1,0,0],[1,0,0,0,1,-1,0,1,-1,0,0,1,0,0,0,0,0,0],[0,-1,1,1,-1,1,0,1,-1,1,0,0,0,0,0,0,0,0],[1,0,1,1,-1,-1,0,1,-1,0,1,0,0,0,0,1,0,0],[-1,0,1,-1,1,1,0,1,-1,0,0,0,0,0,0,1,0,0],[1,-1,1,0,-1,1,-1,1,0,0,0,0,0,0,0,0,0,1],[-1,1,-1,-1,0,1,1,1,0,0,0,0,0,1,0,0,0,1],[1,1,-1,0,-1,0,0,1,0,0,0,0,1,0,1,1,0,1],[0,1,-1,-1,0,1,1,0,-1,1,0,0,0,1,0,0,1,0],[1,-1,1,-1,-1,0,1,1,0,0,0,0,0,0,1,0,0,0],[1,-1,0,-1,-1,1,0,1,0,0,0,1,0,0,0,1,0,1],[-1,-1,0,1,1,0,1,0,0,0,0,1,0,0,0,0,0,0],[0,1,1,0,-1,0,1,-1,0,1,0,0,0,0,0,0,0,0],[0,1,1,0,1,-1,0,-1,0,1,0,0,1,0,0,1,0,1],[1,0,1,0,-1,0,0,1,-1,0,1,0,0,0,0,0,0,0],[0,1,-1,0,1,1,-1,-1,1,1,0,0,1,0,0,0,0,0],[-1,-1,1,0,1,0,0,-1,1,0,0,0,1,0,1,1,0,0],[0,-1,0,0,0,1,1,1,-1,1,0,0,0,0,0,0,0,0],[1,-1,-1,0,1,-1,1,1,0,0,0,0,0,0,0,0,0,1],[-1,1,0,1,0,1,0,-1,0,0,0,0,0,1,0,0,0,0],[-1,0,-1,1,1,0,0,1,0,0,1,0,0,0,0,0,0,0],[0,0,1,1,0,0,-1,-1,1,1,1,0,0,1,1,0,0,0],[1,-1,0,1,1,-1,-1,1,0,0,0,0,0,0,0,0,0,1],[0,-1,0,0,0,-1,1,1,0,0,0,0,0,0,0,0,0,1],[1,0,1,0,0,1,0,-1,-1,0,1,0,0,0,0,1,0,0],[1,0,1,-1,0,-1,1,0,0,0,0,0,0,1,0,0,0,0],[0,1,-1,0,-1,0,1,1,0,0,0,0,0,0,0,0,0,1],[1,1,-1,0,0,-1,1,0,0,0,0,0,1,0,0,0,0,1],[0,1,1,0,1,-1,0,0,-1,1,0,0,1,0,0,1,1,0],[-1,0,-1,0,1,0,0,1,0,0,1,0,0,0,0,0,0,0],[0,1,0,1,1,-1,0,-1,-1,1,0,1,0,0,0,1,0,0],[-1,1,0,1,0,-1,0,-1,1,0,0,1,0,1,0,1,0,0],[0,1,0,1,1,-1,-1,-1,1,1,0,0,0,0,0,0,0,0],[0,1,-1,1,0,1,-1,0,0,0,0,0,0,1,0,0,0,0],[1,1,-1,0,0,-1,-1,1,1,0,0,0,0,1,0,0,0,0],[1,0,0,1,0,-1,-1,1,0,0,0,1,0,0,0,0,0,0],[1,0,0,1,0,0,-1,-1,1,0,0,0,0,1,0,0,0,0],[-1,1,-1,-1,0,0,1,1,0,0,0,0,0,1,1,0,0,1],[1,-1,1,0,0,0,1,-1,0,0,0,0,0,1,0,0,0,0],[-1,1,0,-1,-1,1,1,1,0,0,0,0,0,0,0,0,0,1],[0,1,0,0,1,1,-1,-1,0,0,0,0,1,0,0,0,0,1],[1,1,-1,1,-1,-1,0,0,0,0,0,0,0,0,0,1,0,1],[0,0,1,0,-1,1,-1,1,0,0,0,0,0,0,0,0,0,1],[1,0,-1,1,0,0,-1,1,0,0,0,0,0,1,1,0,0,1],[1,-1,0,1,0,1,-1,0,0,0,0,0,0,1,0,0,0,0],[1,-1,1,0,0,-1,-1,1,0,0,0,0,1,1,0,0,0,1],[-1,1,0,1,0,-1,-1,1,1,0,0,0,0,1,0,0,0,0],[0,1,1,-1,0,0,-1,0,1,1,0,0,0,0,0,0,0,0],[1,-1,1,-1,0,1,0,0,0,0,0,0,0,0,0,0,0,1],[0,0,0,0,1,-1,-1,1,1,1,1,1,1,0,0,0,0,0],[1,-1,0,0,1,1,0,-1,0,0,0,1,1,0,0,1,0,1],[0,1,1,0,0,-1,-1,1,0,1,0,0,1,1,0,0,0,1],[0,1,0,-1,-1,1,0,0,1,0,0,1,0,0,0,0,0,0],[-1,0,0,0,0,-1,0,1,1,0,0,0,0,0,0,1,0,0],[1,0,-1,0,1,0,-1,1,0,0,1,0,1,0,1,0,0,1],[0,0,1,1,1,-1,0,0,-1,0,0,0,0,0,0,1,0,0],[0,1,-1,1,1,-1,-1,0,1,1,0,0,0,0,0,0,1,0],[-1,1,0,1,-1,-1,1,0,1,0,0,0,0,0,0,0,1,0],[-1,0,-1,0,1,0,1,1,-1,0,1,0,0,0,1,0,0,0],[0,1,-1,-1,0,1,-1,0,1,1,0,0,0,1,0,0,1,0],[0,0,1,0,-1,1,-1,1,0,0,0,0,0,0,0,0,0,1],[1,0,1,-1,0,0,-1,0,1,0,1,0,0,1,1,0,1,0],[0,-1,1,1,-1,0,-1,1,1,0,0,0,0,0,1,0,0,0],[1,1,-1,0,0,0,0,-1,1,0,0,0,0,1,0,0,0,0],[1,-1,1,-1,1,0,-1,1,0,0,0,0,0,0,0,0,0,1],[1,0,1,0,-1,1,-1,-1,0,0,1,0,0,0,0,0,0,1],[-1,1,0,1,-1,1,1,-1,0,0,0,0,0,0,0,0,0,1],[1,-1,1,-1,0,0,-1,1,1,0,0,0,0,1,1,0,0,0],[-1,1,0,1,0,0,-1,1,0,0,0,0,0,1,0,0,0,0],[-1,0,0,1,0,0,-1,1,1,0,0,1,0,0,0,0,0,0],[1,0,-1,1,0,0,-1,0,1,0,0,0,0,1,0,0,0,0],[0,0,1,1,-1,0,1,-1,0,1,1,0,0,0,0,0,0,0],[0,1,-1,1,0,0,1,-1,0,1,0,0,0,0,0,0,0,0],[0,1,-1,-1,0,1,1,-1,1,1,0,0,0,1,0,0,0,0],[-1,-1,1,1,1,0,0,-1,0,0,0,0,0,0,1,1,0,1],[-1,1,0,1,-1,0,0,1,0,0,0,1,0,0,0,1,0,1],[1,0,0,-1,0,-1,1,1,0,0,0,0,0,1,0,0,0,1],[1,0,0,1,-1,-1,0,1,-1,0,0,1,0,0,0,0,0,0],[0,0,-1,1,0,-1,1,1,0,0,0,0,0,0,0,0,0,1],[1,-1,1,0,0,-1,0,0,1,0,0,0,0,1,0,0,0,0],[0,0,1,-1,0,0,-1,0,1,1,0,0,0,0,1,0,0,0],[0,0,1,1,0,1,-1,0,-1,0,0,0,0,1,0,0,1,0],[1,0,1,0,-1,-1,1,1,-1,0,0,0,1,0,0,0,0,0],[0,1,0,-1,-1,1,0,1,0,1,0,0,0,0,0,1,0,0],[0,-1,1,1,-1,1,0,0,-1,1,0,0,0,0,0,1,1,0],[1,-1,0,1,0,1,-1,-1,1,0,0,0,0,1,0,0,0,0],[1,-1,1,1,-1,-1,0,0,1,0,0,0,0,0,0,0,1,0],[1,0,0,0,1,1,0,-1,-1,0,0,0,0,0,0,1,0,0],[0,0,0,1,0,-1,1,-1,1,1,0,0,0,0,0,0,0,0],[0,1,-1,0,1,1,0,0,-1,1,0,0,1,0,0,1,1,0],[0,1,1,-1,-1,1,-1,1,0,1,0,0,0,0,0,0,0,0],[-1,-1,1,0,1,0,-1,1,0,0,0,0,1,0,0,0,0,0],[0,-1,-1,1,0,0,1,1,0,1,0,0,0,0,0,0,0,0],[-1,-1,0,0,1,-1,0,1,1,0,0,1,0,0,0,1,0,0],[0,-1,1,0,-1,1,1,0,0,0,0,0,0,0,0,0,1,1],[1,-1,-1,0,1,-1,0,1,0,0,0,0,0,0,0,0,0,1],[0,1,-1,1,1,0,-1,0,0,1,0,0,0,0,1,0,1,1],[1,0,0,0,-1,1,0,1,-1,0,1,1,1,0,0,1,0,0],[-1,-1,0,-1,1,1,1,0,1,0,0,1,0,0,0,0,0,0],[-1,-1,0,1,0,0,0,1,1,0,0,1,0,0,0,0,0,0],[0,1,-1,-1,1,-1,1,0,1,1,0,0,0,0,0,0,1,0],[1,0,0,0,0,-1,1,-1,1,0,1,1,1,1,0,0,0,0],[1,1,-1,-1,1,-1,1,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,1,-1,-1,-1,0,1,0,1,1,0,0,0,0,1,0],[1,-1,1,0,-1,1,1,0,-1,0,0,0,0,0,0,0,1,0],[1,0,1,0,0,-1,1,-1,0,0,1,0,1,1,0,0,0,1],[0,1,0,0,1,1,-1,0,-1,0,0,0,0,0,0,0,1,0],[0,-1,1,1,0,-1,0,1,-1,1,0,0,0,1,0,1,0,0],[-1,0,-1,1,0,1,1,0,-1,0,1,0,0,1,0,0,0,0],[1,1,-1,1,-1,0,0,-1,0,0,0,0,0,0,0,1,0,0],[1,0,-1,0,1,-1,-1,1,0,0,0,0,0,0,0,0,0,1],[-1,1,0,1,0,-1,0,0,1,0,0,0,0,1,0,1,1,0],[0,0,0,1,-1,1,1,-1,0,1,1,0,0,0,0,0,0,0],[1,-1,1,0,-1,0,-1,1,1,0,0,0,0,0,1,0,0,0],[1,1,-1,0,1,1,-1,-1,0,0,0,0,0,0,0,0,0,1],[0,1,1,0,1,0,0,-1,-1,0,0,0,0,0,0,1,0,0],[0,-1,-1,1,0,0,1,0,1,1,0,0,0,0,0,0,0,0],[-1,1,0,0,0,1,0,1,-1,0,0,0,0,1,0,0,0,0],[1,-1,0,0,1,1,0,-1,0,0,0,1,1,0,0,1,0,1],[0,1,0,0,0,-1,1,-1,1,1,0,0,0,1,0,0,0,0],[1,-1,-1,0,0,-1,1,1,0,0,0,0,0,0,0,0,0,1],[1,-1,1,-1,1,-1,0,0,0,0,0,0,0,0,0,1,1,1],[0,1,-1,-1,-1,1,0,0,1,0,0,0,0,0,0,1,0,0],[1,0,-1,0,0,-1,1,0,1,0,1,0,1,1,0,0,1,0],[-1,0,1,0,1,1,-1,0,0,0,0,0,1,0,0,0,0,0],[0,0,-1,1,1,-1,-1,1,1,1,1,0,0,0,0,0,0,0],[0,-1,0,1,-1,0,1,1,0,1,0,1,0,0,1,0,0,1],[1,-1,1,0,-1,0,1,1,-1,0,0,0,1,0,0,0,0,0],[1,0,-1,-1,0,0,0,1,1,0,1,0,0,1,1,1,0,0],[1,-1,0,-1,1,-1,1,1,0,0,0,1,0,0,0,0,0,1],[0,1,1,-1,0,-1,0,1,0,0,0,0,0,1,0,0,0,0],[1,1,-1,-1,0,0,1,0,0,0,0,0,0,0,1,0,0,0],[1,-1,-1,1,0,0,0,1,-1,0,0,0,0,0,1,1,0,0],[-1,0,1,1,-1,0,-1,1,1,0,0,0,0,0,1,0,0,0],[-1,0,1,1,-1,0,1,0,0,0,1,0,0,0,0,0,1,1],[1,-1,0,0,0,0,1,-1,1,0,0,0,0,1,0,0,0,0],[0,1,-1,1,-1,0,1,0,0,1,0,0,0,0,0,0,0,0],[-1,0,1,0,-1,0,1,-1,1,0,1,0,0,0,1,0,0,0],[1,-1,-1,0,-1,1,1,0,1,0,0,0,0,0,0,0,1,0],[1,0,0,-1,-1,1,0,0,1,0,0,1,0,0,0,0,0,0],[1,1,0,0,0,-1,0,1,-1,0,0,1,0,0,0,0,0,0],[-1,1,1,0,0,-1,0,1,-1,0,0,0,0,1,0,0,0,0],[0,1,0,1,-1,1,0,0,-1,1,0,1,0,0,0,1,1,0],[0,1,-1,0,-1,0,1,1,0,0,0,0,0,0,0,0,0,1],[-1,0,0,1,1,-1,0,-1,1,0,1,1,0,0,0,1,0,0],[0,1,0,1,-1,0,1,-1,0,1,0,0,0,0,0,0,0,0],[0,-1,-1,1,0,1,-1,1,1,1,0,0,0,1,0,0,0,0],[1,1,0,0,-1,0,-1,-1,1,0,0,1,0,0,0,0,0,0],[0,-1,1,0,1,1,0,-1,-1,0,0,0,0,0,0,1,0,0],[-1,0,1,1,1,0,-1,0,0,0,0,0,0,0,1,0,0,0],[-1,1,0,1,0,1,0,-1,-1,0,0,0,0,1,0,1,0,0],[0,1,-1,1,0,-1,1,-1,1,1,0,0,0,0,0,0,0,0],[1,1,0,1,0,-1,0,0,-1,0,0,1,0,0,0,0,0,0],[-1,1,0,-1,1,1,0,-1,1,0,0,0,0,0,0,1,0,0],[1,-1,1,1,-1,-1,0,1,0,0,0,0,0,0,0,1,0,0],[0,1,0,1,1,0,-1,-1,0,0,0,0,0,0,0,0,0,1],[-1,1,-1,-1,1,1,1,0,0,0,0,0,0,0,0,0,1,0],[-1,1,-1,1,1,0,0,-1,0,0,0,0,0,0,1,0,0,0],[1,-1,0,0,-1,0,0,1,1,0,0,0,0,0,0,1,0,0],[-1,0,1,-1,-1,0,1,1,0,0,0,0,0,0,1,0,0,1],[0,0,0,-1,1,1,-1,1,-1,1,0,0,0,0,0,0,0,0],[-1,1,-1,-1,1,1,0,0,0,0,0,0,0,0,0,1,0,0],[-1,0,-1,0,0,1,1,0,1,0,1,0,0,0,0,0,0,0],[1,-1,0,-1,1,1,0,1,-1,0,0,1,0,0,0,1,0,0],[1,-1,1,-1,0,1,-1,1,0,0,0,0,0,0,0,0,0,1],[-1,1,1,0,0,0,1,0,-1,0,0,0,0,1,0,0,0,0],[0,0,0,1,-1,-1,0,1,1,0,0,0,0,0,0,1,0,0],[0,0,-1,1,-1,1,1,0,0,1,0,0,0,0,0,0,0,0],[0,0,1,-1,0,0,1,-1,1,1,1,0,0,1,1,0,0,0],[0,0,0,1,-1,-1,-1,1,1,0,0,1,0,0,0,0,0,0],[1,0,-1,0,-1,1,0,0,1,0,1,0,0,0,0,1,1,0],[-1,1,0,0,0,-1,1,1,-1,0,0,1,0,1,0,0,0,0],[1,-1,0,0,-1,1,-1,0,1,0,0,1,0,0,0,0,1,0],[-1,1,1,-1,-1,1,1,0,0,0,0,0,0,0,0,0,0,1],[0,-1,0,1,0,0,1,1,-1,1,0,0,0,0,0,0,0,0],[-1,0,1,1,-1,-1,0,1,1,0,0,0,0,0,0,1,0,0],[1,-1,1,-1,0,1,1,0,-1,0,0,0,0,1,0,0,0,0],[-1,1,0,1,-1,1,1,-1,0,0,0,0,0,0,0,0,0,1],[1,-1,1,0,0,0,-1,-1,1,0,0,0,0,1,0,0,0,0],[0,1,0,1,-1,0,1,-1,-1,1,0,0,0,0,0,0,0,0],[-1,1,1,-1,0,0,0,0,1,0,0,0,0,0,1,1,0,0],[-1,-1,1,1,0,0,0,0,1,0,0,0,0,1,1,1,1,0],[-1,1,-1,1,0,1,0,1,-1,0,0,0,0,1,0,0,0,0],[0,1,0,0,-1,0,1,-1,1,1,0,1,1,0,1,0,0,0],[0,-1,0,1,1,-1,0,0,1,1,0,0,0,0,0,0,0,0],[1,-1,0,0,0,0,-1,1,1,0,0,0,0,1,0,0,0,0],[0,0,1,1,0,-1,0,-1,1,1,0,0,0,1,0,0,0,0],[1,0,-1,0,0,-1,0,1,1,0,1,0,1,1,0,1,0,0],[1,-1,-1,1,0,0,-1,1,0,0,0,0,0,1,1,0,0,1],[0,0,-1,0,1,1,1,-1,-1,0,0,0,1,0,0,0,0,0],[1,-1,1,-1,-1,0,1,0,0,0,0,0,0,0,1,0,1,1],[0,1,0,0,1,0,1,-1,-1,0,0,1,0,0,0,0,0,0],[0,0,-1,-1,1,-1,1,1,0,0,0,0,0,0,0,0,0,1],[0,-1,-1,1,0,1,1,1,-1,1,0,0,0,0,0,0,0,0],[-1,-1,0,1,0,1,-1,1,1,0,0,1,0,0,0,0,0,0],[-1,1,1,0,1,0,-1,-1,1,0,0,0,1,0,0,0,0,0],[1,0,1,-1,0,-1,1,-1,1,0,0,0,0,1,0,0,0,0],[0,1,0,1,-1,-1,1,1,-1,1,0,1,0,0,0,0,0,0],[-1,-1,0,-1,1,1,0,1,0,0,0,1,0,0,0,1,0,1],[-1,0,1,0,1,1,0,-1,-1,0,0,0,0,0,0,1,0,0],[1,1,-1,1,0,-1,-1,1,0,0,0,0,0,1,0,0,0,1],[-1,0,-1,1,-1,1,1,0,1,0,1,0,0,0,0,0,0,0],[-1,0,1,1,0,-1,1,0,0,0,0,0,0,1,0,0,0,0],[-1,1,0,-1,0,1,1,1,-1,0,0,0,0,1,0,0,0,0],[-1,0,1,0,1,0,-1,1,0,0,0,0,1,0,0,0,0,0],[0,1,0,0,1,-1,1,0,-1,0,0,1,0,0,0,0,0,0],[1,0,1,0,-1,1,-1,1,-1,0,1,0,0,0,0,0,0,0],[-1,1,1,0,1,-1,-1,0,0,0,0,0,1,0,0,0,1,0],[0,1,-1,-1,1,1,1,-1,0,1,0,0,0,0,0,0,0,1],[0,0,1,1,1,0,-1,-1,0,0,0,0,0,0,0,0,0,1],[0,1,1,0,0,0,-1,1,-1,1,0,0,1,1,1,0,0,0],[-1,1,0,0,1,0,1,-1,-1,0,0,1,0,0,0,0,0,0],[1,-1,1,-1,1,0,0,1,-1,0,0,0,0,0,0,1,0,0],[0,1,-1,0,-1,1,1,0,-1,1,0,0,0,0,0,0,0,0],[1,0,-1,-1,1,1,0,0,0,0,0,0,0,0,0,0,0,1],[-1,0,0,1,0,1,-1,0,1,0,1,1,0,1,0,0,1,0],[1,-1,-1,0,1,1,1,-1,0,0,0,0,1,0,0,0,0,1],[0,1,0,1,1,-1,1,-1,-1,0,0,1,0,0,0,0,0,0],[-1,0,1,1,-1,1,-1,1,0,0,0,0,0,0,0,0,0,1],[1,-1,1,0,-1,0,1,1,-1,0,0,0,1,0,0,0,0,0],[0,1,-1,-1,0,1,0,0,1,0,0,0,0,0,0,1,0,0],[1,0,-1,-1,0,1,1,0,0,0,0,0,0,1,0,0,1,1],[0,-1,-1,0,0,1,1,0,1,1,0,0,0,0,0,0,1,0],[1,0,1,1,0,0,-1,0,-1,0,0,0,0,0,0,0,1,0],[1,1,-1,0,0,-1,0,1,0,0,0,0,0,1,0,0,0,1],[0,1,0,0,-1,1,1,-1,-1,1,0,0,0,0,0,0,0,0],[0,1,1,0,1,-1,0,0,-1,1,0,0,1,0,0,1,1,0],[1,1,0,-1,1,-1,0,-1,0,0,0,1,0,0,0,1,0,1],[0,-1,-1,1,0,1,1,0,0,1,0,0,0,0,0,0,0,0],[-1,-1,1,1,0,-1,1,0,1,0,0,0,0,1,0,0,1,0],[0,1,-1,-1,0,0,1,0,1,0,0,0,0,0,0,0,1,0],[-1,1,1,0,-1,0,0,0,1,0,0,0,0,0,1,0,0,0],[-1,1,1,1,-1,0,-1,0,1,0,0,0,0,0,1,0,0,0],[0,1,1,-1,0,1,-1,1,-1,1,0,0,0,0,0,0,0,0],[0,0,1,1,-1,1,0,-1,0,0,1,0,0,0,0,0,0,1],[0,0,0,1,0,1,1,-1,-1,1,1,1,0,1,0,0,0,0],[0,-1,0,-1,1,1,1,1,-1,0,0,1,0,0,0,0,0,0],[0,1,0,-1,1,0,0,-1,1,1,0,0,0,0,0,0,0,0],[0,-1,-1,0,1,1,1,-1,1,1,0,0,0,0,0,0,0,0],[-1,1,-1,-1,0,0,0,1,1,0,0,0,0,0,0,1,0,0],[-1,0,-1,0,1,0,1,0,1,0,1,0,0,0,0,0,0,0],[-1,0,0,-1,1,1,0,1,0,0,1,0,0,0,0,1,0,0],[-1,0,-1,0,1,0,0,1,1,0,1,0,0,0,0,0,0,0],[1,-1,1,0,1,-1,0,0,0,0,0,0,1,0,0,1,1,1],[1,-1,1,1,0,-1,0,1,-1,0,0,0,0,0,0,1,0,0],[-1,0,0,-1,0,1,0,1,1,0,0,0,0,0,0,1,0,0],[-1,0,1,1,0,1,-1,1,-1,0,0,0,0,1,0,0,0,0],[1,0,-1,-1,1,1,1,0,-1,0,1,0,0,0,0,0,1,0],[0,-1,1,0,1,0,-1,0,1,1,0,0,1,0,1,0,1,0],[0,1,1,1,-1,-1,0,0,0,1,0,0,0,0,0,0,0,0],[-1,0,1,0,1,1,-1,1,-1,0,0,0,1,0,0,0,0,0],[-1,0,1,1,1,0,0,-1,-1,0,0,0,0,0,0,1,0,0],[0,1,0,-1,0,1,1,-1,0,0,0,1,0,0,0,0,0,0],[1,-1,0,-1,-1,1,0,1,1,0,0,1,0,0,0,1,0,0],[1,-1,1,-1,0,0,0,-1,1,0,0,0,0,1,0,0,0,0],[1,-1,0,0,-1,1,-1,0,1,0,0,1,0,0,0,0,1,0],[-1,1,0,-1,0,1,0,0,1,0,0,0,0,0,0,1,0,0],[0,0,1,-1,1,1,-1,0,0,1,0,0,0,0,0,0,0,1],[0,0,1,-1,1,1,0,-1,0,1,1,0,0,0,0,1,0,1],[1,-1,0,0,0,-1,1,1,0,0,0,1,1,1,0,0,0,1],[0,-1,0,1,0,1,0,-1,1,0,0,0,0,1,0,0,0,0],[1,-1,1,0,1,0,-1,1,-1,0,0,0,1,0,1,0,0,0],[-1,1,1,0,1,0,0,-1,0,0,0,0,0,0,0,1,0,0],[-1,-1,1,1,0,0,1,0,0,0,0,0,0,1,0,0,0,0],[1,0,0,1,0,0,-1,1,-1,0,0,1,0,0,0,0,0,0],[-1,0,1,1,-1,0,1,-1,0,0,1,0,0,0,1,0,0,1],[-1,1,0,1,-1,1,0,-1,1,0,0,1,0,0,0,0,0,0],[1,0,1,1,0,-1,-1,0,0,0,1,0,0,0,0,0,0,0],[1,-1,-1,0,0,1,-1,1,1,0,0,0,0,1,0,0,0,0],[0,-1,-1,1,1,0,1,-1,1,1,0,0,0,0,0,0,0,0],[1,0,0,-1,-1,0,-1,1,1,0,1,1,0,0,1,0,0,0],[1,-1,0,0,0,-1,0,1,0,0,0,0,1,1,0,1,0,1],[1,0,0,0,-1,0,1,1,-1,0,0,0,1,0,0,0,0,0],[1,-1,-1,1,-1,0,0,1,1,0,0,0,0,0,0,1,0,0],[0,0,1,1,0,-1,1,0,-1,1,1,0,0,1,0,0,1,0],[0,0,-1,0,1,1,0,-1,1,1,1,0,1,0,0,1,0,0],[-1,1,-1,0,1,0,0,0,1,0,0,0,0,0,0,0,1,0],[0,-1,1,-1,0,0,1,0,1,1,0,0,0,1,1,0,1,0],[-1,0,1,1,0,0,-1,1,0,0,0,0,0,1,1,0,0,0],[0,1,-1,1,-1,0,1,0,0,1,0,0,0,0,0,0,0,0],[1,0,1,0,1,-1,0,-1,0,0,1,0,1,0,0,1,0,1],[0,0,0,-1,0,1,1,-1,1,0,0,1,0,0,0,0,0,0],[1,0,0,0,-1,1,1,-1,0,0,1,0,0,0,0,0,0,0],[1,0,-1,-1,1,0,1,1,-1,0,0,0,0,0,1,0,0,0],[1,1,-1,1,-1,0,0,-1,1,0,0,0,0,0,0,1,0,0],[0,-1,0,0,1,-1,1,-1,1,1,0,1,1,0,0,0,0,0],[1,0,1,-1,0,-1,-1,1,1,0,0,0,0,1,0,0,0,0],[-1,1,1,0,1,0,0,-1,-1,0,0,0,0,0,0,1,0,0],[0,1,1,1,-1,-1,0,1,-1,1,0,0,0,0,0,0,0,0],[1,-1,1,0,0,0,-1,0,1,0,0,0,1,1,1,0,1,0],[0,1,1,1,-1,-1,0,-1,1,1,0,0,0,0,0,0,0,0],[1,-1,0,0,0,-1,-1,1,1,0,0,0,0,1,0,0,0,0],[-1,0,1,1,0,-1,0,1,0,0,0,0,0,1,0,1,0,0],[1,0,0,1,0,-1,0,-1,1,0,1,1,0,1,0,1,0,0],[0,1,-1,1,0,0,1,0,-1,1,0,0,0,0,1,0,0,0],[1,-1,1,0,1,1,-1,0,-1,0,0,0,0,0,0,0,1,0],[1,-1,-1,0,0,0,0,1,1,0,0,0,1,1,1,1,0,0],[1,0,1,1,-1,0,-1,-1,1,0,1,0,0,0,0,0,0,0],[1,-1,-1,1,0,1,0,0,0,0,0,0,0,1,0,1,1,1],[0,-1,1,1,0,-1,0,1,0,0,0,0,0,0,0,1,0,0],[0,1,0,1,-1,1,-1,0,0,1,0,1,0,0,0,0,1,1],[1,-1,0,1,1,-1,-1,1,0,0,0,0,0,0,0,0,0,1],[0,-1,0,1,1,0,0,-1,1,1,0,1,0,0,1,1,0,0],[1,0,1,-1,-1,0,1,-1,1,0,1,0,0,0,1,0,0,0],[1,1,-1,0,-1,-1,1,1,0,0,0,0,1,0,0,0,0,1],[0,-1,-1,0,1,-1,0,1,1,1,0,0,0,0,0,0,0,0],[1,1,-1,-1,0,0,1,0,0,0,0,0,0,0,1,0,0,0],[-1,0,1,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0],[1,0,-1,-1,0,0,1,0,1,0,1,0,0,1,1,0,1,0],[0,1,0,-1,1,1,0,-1,-1,0,0,0,0,0,0,1,0,0],[0,-1,1,-1,0,1,1,1,-1,0,0,0,0,1,0,0,0,0],[1,0,0,0,0,-1,1,-1,1,0,1,1,1,1,0,0,0,0],[0,0,-1,1,-1,1,1,1,-1,1,0,0,0,0,0,0,0,0],[-1,1,-1,1,0,-1,0,1,0,0,0,0,0,1,0,0,0,1],[1,1,0,1,-1,-1,0,0,0,0,0,1,0,0,0,1,1,1],[0,-1,1,-1,-1,1,1,0,0,0,0,0,0,0,0,0,1,1],[-1,1,0,-1,0,1,1,-1,0,0,0,1,0,1,0,0,0,1],[0,1,0,-1,0,-1,1,0,1,0,0,0,0,1,0,0,0,0],[1,0,0,0,-1,1,-1,1,0,0,0,1,0,0,0,0,0,0],[0,-1,0,1,-1,0,0,1,1,0,0,0,0,0,0,1,0,0],[1,-1,0,-1,1,1,1,0,-1,0,0,1,0,0,0,0,0,0],[-1,1,1,1,-1,0,-1,1,0,0,0,0,0,0,0,0,0,1],[1,0,1,-1,0,-1,1,0,0,0,0,0,0,1,0,0,0,0],[1,1,-1,0,1,-1,1,-1,0,0,0,0,0,0,0,0,0,1],[0,0,-1,1,0,1,-1,1,0,0,0,0,0,1,0,0,0,0],[1,0,1,-1,1,0,0,-1,0,0,1,0,0,0,1,1,0,1],[0,0,0,1,1,-1,0,1,-1,0,0,1,0,0,0,0,0,0],[0,1,0,1,-1,1,0,0,-1,1,0,1,0,0,0,1,1,0],[-1,1,0,1,1,-1,0,-1,0,0,0,0,0,0,0,0,0,1],[1,0,-1,1,-1,0,0,1,-1,0,0,0,0,0,1,1,0,0],[0,1,1,1,0,0,-1,0,-1,1,0,0,0,0,0,0,1,0],[-1,-1,1,-1,0,0,0,1,1,0,0,0,0,0,0,1,0,0],[0,0,1,1,-1,1,-1,1,-1,1,0,0,0,0,0,0,0,0],[1,-1,1,0,-1,1,0,1,-1,0,0,0,1,0,0,1,0,0],[0,-1,-1,1,-1,1,1,0,1,1,0,0,0,0,0,0,1,0],[0,1,-1,0,1,1,0,-1,-1,0,0,0,0,0,0,1,0,0],[-1,1,1,1,0,0,1,-1,-1,0,0,0,0,1,0,0,0,0],[1,0,1,0,0,-1,1,0,-1,0,1,0,1,1,0,0,1,0],[-1,-1,0,1,0,1,-1,1,0,0,0,1,0,1,0,0,0,0],[1,-1,-1,1,-1,1,0,1,0,0,0,0,0,0,0,1,0,0],[0,1,1,0,-1,0,-1,1,0,1,0,0,0,0,0,0,0,0],[0,-1,0,1,-1,0,1,0,1,0,0,0,0,0,0,0,1,0],[0,-1,0,0,-1,1,1,1,0,0,0,0,0,0,0,0,0,1],[0,-1,1,0,1,0,0,-1,1,1,0,0,1,0,1,1,0,0],[-1,0,0,1,1,0,0,1,-1,0,1,1,0,0,1,1,0,0],[-1,1,-1,0,-1,1,1,1,0,0,0,0,0,0,0,0,0,1],[0,0,1,1,0,-1,0,-1,1,1,0,0,0,1,0,0,0,0],[0,1,-1,0,1,0,1,0,-1,0,0,0,0,0,1,0,0,0],[1,0,-1,1,1,0,-1,0,-1,0,0,0,0,0,1,0,1,0],[-1,0,-1,0,1,1,0,0,1,0,1,0,1,0,0,0,0,0],[1,1,-1,0,0,-1,0,1,0,0,0,0,0,1,0,0,0,1],[0,1,1,-1,-1,0,0,0,1,0,0,0,0,0,1,0,0,0],[0,1,0,1,0,0,1,-1,-1,1,0,1,0,1,1,0,0,0],[1,-1,0,0,1,1,-1,1,-1,0,0,0,1,0,0,0,0,0],[-1,0,-1,0,0,1,-1,1,1,0,1,0,1,1,0,0,0,0],[1,0,-1,0,0,0,1,-1,1,0,1,0,1,1,1,0,0,0],[-1,0,1,0,-1,0,1,0,1,0,1,0,1,0,1,0,1,0],[-1,0,1,0,1,0,-1,0,0,0,0,0,1,0,0,0,1,1],[1,0,0,-1,1,0,0,1,-1,0,1,0,0,0,0,0,0,0],[0,0,1,1,1,0,-1,0,-1,0,0,0,0,0,0,0,1,0],[0,-1,0,-1,1,-1,0,1,1,1,0,1,0,0,0,1,0,0],[-1,1,1,1,-1,0,-1,0,1,0,0,0,0,0,1,0,0,0],[-1,0,0,1,1,-1,1,0,0,0,0,1,0,0,0,0,0,0],[-1,0,1,1,0,0,1,0,-1,0,0,0,0,1,0,0,0,0],[0,1,-1,0,0,-1,1,1,0,0,0,0,0,0,0,0,0,1],[0,-1,1,0,-1,0,1,1,-1,1,0,0,1,0,1,0,0,0],[1,1,-1,-1,0,1,0,0,-1,0,0,0,0,0,0,1,0,0],[1,0,0,-1,-1,0,0,1,1,0,0,0,0,0,1,1,0,0],[0,0,0,0,-1,1,1,-1,1,0,1,0,0,0,0,0,0,0],[0,1,1,1,1,-1,-1,0,-1,0,0,0,0,0,0,0,1,0],[1,0,-1,1,1,-1,-1,1,0,0,0,0,0,0,0,0,0,1],[-1,1,0,0,0,1,-1,1,0,0,0,0,1,1,0,0,0,0],[1,0,0,0,-1,0,1,-1,1,0,1,0,1,0,0,0,0,0],[0,-1,1,1,-1,0,0,0,1,0,0,0,0,0,0,0,1,0],[1,0,0,0,1,-1,1,0,-1,0,0,1,0,0,0,0,0,0],[1,-1,1,-1,0,-1,1,1,0,0,0,0,0,1,0,0,0,0],[-1,1,-1,0,1,0,1,0,-1,0,0,0,0,0,1,0,0,0],[0,-1,1,1,1,0,0,0,-1,1,0,0,0,0,1,1,1,0],[0,-1,0,0,1,1,-1,1,0,0,0,0,1,0,0,0,0,0],[1,-1,-1,-1,1,1,1,0,0,0,0,0,0,0,0,0,0,1],[-1,0,-1,1,0,1,-1,1,1,0,1,0,0,1,0,0,0,0],[1,-1,1,0,0,0,1,-1,-1,0,0,0,0,1,0,0,0,0],[-1,1,0,1,0,0,-1,0,1,0,0,0,0,1,1,0,0,0],[-1,1,0,1,0,-1,1,-1,1,0,0,1,0,1,0,0,0,0],[1,0,-1,0,0,1,1,0,-1,0,0,0,1,0,0,0,0,0],[0,0,0,-1,1,-1,1,0,1,1,1,1,0,0,0,0,1,0],[-1,0,0,1,-1,-1,0,1,1,0,0,0,0,0,0,1,0,0],[-1,0,-1,-1,1,1,0,1,1,0,1,0,0,0,0,1,0,0],[-1,0,0,-1,1,0,1,1,0,0,1,1,0,0,1,0,0,1],[-1,1,0,-1,-1,1,1,0,1,0,0,1,0,0,0,0,1,0],[0,0,0,0,1,-1,1,-1,0,0,0,1,0,0,0,0,0,0],[1,1,-1,1,-1,1,0,-1,0,0,0,0,0,0,0,1,0,0],[-1,1,-1,1,-1,1,0,1,0,0,0,0,0,0,0,1,0,1],[-1,1,1,0,1,-1,0,-1,0,0,0,0,0,0,0,1,0,0],[0,1,1,0,1,0,-1,-1,0,1,0,0,0,0,0,0,0,1],[0,1,1,1,-1,1,-1,0,-1,1,0,0,0,0,0,0,1,0],[1,-1,1,-1,0,1,-1,1,0,0,0,0,0,0,0,0,0,1],[1,1,-1,0,0,1,0,-1,0,0,0,0,0,0,0,1,0,0],[0,-1,1,-1,1,0,0,0,1,1,0,0,0,0,1,1,1,0],[1,0,1,1,0,0,0,-1,-1,0,0,0,0,0,0,1,0,0],[-1,1,-1,0,0,1,0,1,0,0,0,0,0,1,0,0,0,0],[0,1,1,-1,0,-1,1,-1,0,0,0,0,0,1,0,0,0,0],[0,1,-1,-1,1,1,-1,0,1,1,0,0,0,0,0,0,0,0],[0,-1,1,1,1,0,-1,-1,1,1,0,0,0,0,1,0,0,0],[0,1,1,-1,1,-1,-1,0,0,1,0,0,0,0,0,0,0,0],[0,1,1,-1,0,0,-1,1,-1,1,0,0,0,0,0,0,0,0],[1,0,0,1,0,0,-1,1,-1,0,0,1,0,0,0,0,0,0],[-1,0,0,0,1,0,1,1,-1,0,1,1,1,0,1,0,0,0],[0,-1,-1,1,0,1,1,-1,1,1,0,0,0,1,0,0,0,0],[0,0,0,-1,0,1,1,-1,1,0,0,1,0,0,0,0,0,0],[-1,0,1,1,0,1,1,-1,-1,0,0,0,0,1,0,0,0,0],[-1,0,-1,0,1,1,0,-1,1,0,1,0,1,0,0,0,0,0],[0,1,-1,1,-1,0,1,-1,0,1,0,0,0,0,0,0,0,0],[-1,-1,0,1,0,0,-1,1,1,0,0,1,0,0,0,0,0,0],[0,-1,1,1,1,0,0,-1,0,1,0,0,0,0,1,1,0,1],[0,1,0,1,-1,0,-1,0,1,0,0,1,0,0,0,0,0,0],[0,1,0,-1,0,0,1,-1,1,0,0,1,0,1,0,0,0,0],[1,-1,0,-1,0,1,0,1,0,0,0,0,0,0,0,0,0,1],[0,1,0,0,0,1,-1,-1,1,1,0,1,1,1,0,0,0,0],[-1,0,1,0,0,0,1,-1,1,0,1,0,1,1,1,0,0,0],[1,-1,-1,0,0,1,1,0,0,0,0,0,1,1,0,0,1,1],[-1,0,1,0,0,1,1,0,-1,0,0,0,0,1,0,0,0,0],[0,0,1,-1,0,0,-1,1,1,1,0,0,0,0,1,0,0,0],[1,-1,0,0,-1,1,0,1,-1,0,0,1,1,0,0,1,0,0],[1,0,0,-1,1,1,0,-1,0,0,0,0,0,0,0,0,0,1],[1,1,0,-1,-1,1,0,1,-1,0,0,1,0,0,0,0,0,0],[-1,1,1,1,-1,1,-1,0,0,0,0,0,0,0,0,0,0,1],[1,1,0,0,-1,1,-1,-1,0,0,0,1,0,0,0,0,0,1],[1,0,0,1,1,0,-1,-1,0,0,0,0,0,0,0,0,0,1],[1,1,-1,0,-1,1,0,-1,1,0,0,0,0,0,0,1,0,0],[0,-1,0,-1,1,1,-1,0,1,1,0,0,0,0,0,0,0,0],[0,0,-1,-1,1,1,-1,1,1,1,0,0,0,0,0,0,0,0],[-1,-1,1,1,0,1,0,-1,0,0,0,0,0,1,0,0,0,0],[1,-1,0,1,0,1,-1,-1,1,0,0,0,0,1,0,0,0,0],[1,-1,0,-1,0,1,1,0,-1,0,0,1,0,1,0,0,1,0],[-1,1,0,-1,1,0,1,-1,1,0,0,1,0,0,0,0,0,0],[-1,0,-1,1,0,-1,0,1,1,0,1,0,0,0,0,1,0,0],[-1,0,-1,0,1,1,1,1,-1,0,1,0,0,0,0,0,0,0],[1,0,-1,1,0,0,0,1,-1,0,0,0,0,0,1,1,0,0],[-1,1,1,-1,0,-1,0,1,0,0,0,0,0,1,0,1,0,0],[0,-1,0,1,0,0,1,-1,1,1,0,0,0,1,0,0,0,0],[-1,1,1,-1,0,0,1,1,-1,0,0,0,0,1,0,0,0,0],[-1,0,1,0,0,1,0,1,-1,0,0,0,1,1,0,1,0,0],[-1,-1,1,1,0,0,1,-1,1,0,0,0,0,1,0,0,0,0],[1,0,1,0,-1,-1,-1,0,1,0,1,0,1,0,0,0,0,0],[-1,1,0,1,-1,0,0,-1,1,0,0,1,0,0,1,1,0,0],[1,0,-1,0,0,-1,1,0,1,0,1,0,1,1,0,0,1,0],[-1,-1,1,1,1,0,-1,0,1,0,0,0,0,0,1,0,0,0],[-1,1,1,-1,0,0,1,0,-1,0,0,0,0,1,0,0,0,0],[1,1,0,-1,-1,0,0,-1,1,0,0,1,0,0,1,0,0,0],[1,0,1,0,-1,-1,-1,1,1,0,0,0,1,0,0,0,0,0],[0,1,0,0,-1,1,0,1,-1,1,0,1,0,0,0,1,0,0],[-1,-1,0,1,1,-1,0,1,0,0,0,1,0,0,0,0,0,0],[1,0,0,-1,0,1,-1,0,1,0,1,1,0,1,0,0,1,0],[0,0,0,1,-1,-1,1,0,1,1,1,1,0,0,0,0,1,0],[-1,1,1,1,0,-1,-1,1,0,0,0,0,0,1,0,0,0,0],[0,1,1,0,-1,-1,0,1,0,1,0,0,1,0,0,0,0,0],[0,-1,0,1,-1,1,-1,1,1,0,0,1,0,0,0,0,0,0],[-1,1,1,1,0,-1,1,0,-1,0,0,0,0,1,0,0,0,0],[0,-1,0,1,-1,1,0,1,0,1,0,1,0,0,0,0,0,0],[0,1,0,-1,1,-1,1,-1,0,0,0,1,0,0,0,0,0,0],[0,-1,1,1,0,-1,1,1,-1,1,0,0,0,1,0,0,0,0],[0,1,0,1,-1,0,-1,-1,1,0,0,1,0,0,0,0,0,0],[0,1,-1,1,-1,1,0,0,0,1,0,0,0,0,0,1,0,1],[-1,0,1,-1,0,0,0,1,1,0,0,0,0,0,0,1,0,0],[0,1,0,-1,-1,1,-1,1,1,1,0,1,0,0,0,0,0,0],[0,1,1,0,0,1,-1,0,-1,1,0,0,0,0,0,0,1,0],[1,0,1,0,-1,0,0,-1,1,0,1,0,0,0,0,0,0,0],[-1,0,0,-1,-1,1,0,1,1,0,0,0,0,0,0,1,0,0],[0,1,0,0,1,0,-1,-1,1,1,0,0,0,0,0,0,0,0],[0,-1,-1,0,1,1,0,1,0,1,0,0,0,0,0,0,0,0],[-1,1,1,-1,1,-1,0,0,1,0,0,0,0,0,0,1,0,0],[1,-1,0,-1,1,0,0,1,0,0,0,0,0,0,0,0,0,1],[1,-1,1,1,-1,0,-1,1,0,0,0,0,0,0,1,0,0,1],[-1,0,1,1,0,1,0,0,-1,0,0,0,0,1,0,0,0,0],[0,-1,1,-1,0,0,1,1,0,1,0,0,0,1,1,0,0,1],[0,-1,0,0,1,0,1,1,-1,0,0,1,0,0,0,0,0,0],[-1,0,-1,-1,0,1,0,1,1,0,1,0,0,0,0,1,0,0],[-1,-1,1,1,-1,0,1,1,0,0,0,0,0,0,0,0,0,1],[0,-1,1,0,0,0,1,1,-1,0,0,0,0,1,0,0,0,0],[0,0,1,0,-1,0,1,1,-1,1,0,0,1,0,1,0,0,0],[0,-1,1,0,0,1,1,-1,0,0,0,0,0,1,0,0,0,0],[1,1,0,-1,1,0,0,0,-1,0,0,1,0,0,1,1,1,0],[0,-1,1,0,1,-1,0,0,1,1,0,0,1,0,0,1,1,0],[0,1,1,0,-1,-1,1,-1,1,0,0,0,1,0,0,0,0,0],[0,0,1,-1,-1,0,1,0,1,0,0,0,0,0,1,0,0,0],[-1,-1,1,0,1,1,0,0,0,0,0,0,1,0,0,1,1,1],[-1,1,1,0,-1,0,-1,0,1,0,0,0,1,0,0,0,0,0],[1,-1,1,1,0,0,-1,0,0,0,0,0,0,0,0,0,1,0],[1,1,0,0,0,1,-1,0,-1,0,0,1,0,0,0,0,1,0],[0,1,0,-1,-1,1,1,1,-1,1,0,0,0,0,0,0,0,0],[-1,1,-1,1,-1,0,1,1,0,0,0,0,0,0,0,0,0,1],[0,1,1,0,0,-1,1,-1,-1,1,0,0,1,1,0,0,0,0],[0,1,1,1,1,-1,0,-1,-1,0,0,0,0,0,0,1,0,0],[-1,1,-1,-1,0,1,1,0,0,0,0,0,0,1,0,0,1,1],[0,1,-1,1,1,0,0,0,-1,0,0,0,0,0,1,0,0,0],[1,1,-1,-1,-1,0,0,1,1,0,0,0,0,0,1,1,0,0],[0,0,1,0,1,-1,-1,1,0,0,1,0,0,0,0,0,0,0],[0,-1,1,1,-1,0,1,1,-1,1,0,0,0,0,0,0,0,0],[-1,1,1,0,1,-1,0,-1,1,0,0,0,0,0,0,1,0,0],[0,0,1,0,1,0,0,0,-1,0,0,0,0,0,0,1,0,0],[0,1,1,0,0,-1,-1,0,1,1,0,0,0,0,0,0,0,0],[-1,-1,1,1,0,-1,1,1,0,0,0,0,0,1,0,0,0,1],[-1,1,0,1,1,-1,-1,0,0,0,0,0,0,0,0,0,1,0],[1,1,0,-1,0,-1,1,0,0,0,0,1,0,1,0,0,0,0],[1,1,0,-1,0,-1,0,0,1,0,0,0,0,1,0,0,0,0],[1,0,1,1,-1,1,0,-1,-1,0,1,0,0,0,0,1,0,0],[-1,1,0,1,0,0,-1,1,-1,0,0,0,0,1,0,0,0,0],[0,1,1,0,-1,-1,-1,1,1,0,0,0,1,0,0,0,0,0],[0,0,1,0,0,1,1,-1,-1,0,0,0,0,1,0,0,0,0],[0,1,-1,-1,1,0,1,0,0,0,0,0,0,0,0,0,1,0],[1,-1,1,1,-1,0,-1,0,1,0,0,0,0,0,0,0,1,0],[0,-1,0,-1,1,0,0,1,1,1,0,1,0,0,1,1,0,0],[0,-1,0,0,1,-1,1,1,0,1,0,1,1,0,0,0,0,1],[-1,1,1,1,0,-1,-1,0,0,0,0,0,0,0,0,0,0,1],[0,0,-1,0,0,1,1,1,-1,1,0,0,0,0,0,0,0,0],[1,0,1,-1,0,0,0,-1,1,0,1,0,0,1,1,1,0,0],[0,0,1,0,-1,-1,1,0,1,0,0,0,1,0,0,0,1,0],[0,-1,1,1,1,0,-1,0,0,0,0,0,0,0,1,0,0,0],[0,1,-1,0,-1,1,0,1,0,1,0,0,0,0,0,1,0,1],[0,0,-1,1,-1,1,1,0,0,1,0,0,0,0,0,0,0,0],[1,0,-1,0,0,1,0,-1,1,0,0,0,0,1,0,0,0,0],[0,0,1,1,1,-1,-1,0,0,1,1,0,0,0,0,0,1,1],[1,1,-1,0,-1,0,0,0,1,0,0,0,1,0,1,1,0,0],[0,-1,-1,1,0,1,1,0,0,1,0,0,0,0,0,0,0,0],[-1,-1,1,1,0,0,-1,1,1,0,0,0,0,0,1,0,0,0],[0,1,1,0,0,1,-1,0,-1,1,0,0,0,0,0,0,1,0],[1,1,-1,-1,1,0,1,-1,0,0,0,0,0,0,0,0,0,1],[0,1,-1,0,-1,0,0,1,1,0,0,0,0,0,0,1,0,0],[0,-1,1,1,0,0,1,0,-1,1,0,0,0,1,1,0,1,0],[-1,1,0,0,-1,1,-1,1,1,0,0,1,1,0,0,0,0,0],[-1,1,1,0,1,0,-1,-1,0,0,0,0,1,0,1,0,0,1],[0,0,1,1,-1,0,1,-1,-1,1,1,0,0,0,0,0,0,0],[0,1,1,0,-1,0,0,-1,1,1,0,0,1,0,1,1,0,0],[1,0,-1,1,-1,1,0,-1,1,0,1,0,0,0,0,1,0,0],[1,0,0,-1,-1,1,0,-1,1,0,1,1,0,0,0,0,0,0],[1,1,-1,0,0,1,1,-1,-1,0,0,0,1,0,0,0,0,0],[-1,0,1,0,0,1,1,-1,-1,0,0,0,0,1,0,0,0,0],[-1,-1,1,1,1,0,-1,0,1,0,0,0,0,0,1,0,0,0],[1,1,-1,-1,1,-1,1,0,0,0,0,0,0,0,0,0,0,1],[-1,1,0,1,1,-1,1,-1,0,0,0,1,0,0,0,0,0,0],[0,0,0,0,1,-1,1,1,-1,0,0,1,0,0,0,0,0,0],[1,1,-1,0,0,0,1,-1,-1,0,0,0,0,0,1,0,0,0],[0,0,1,1,-1,1,-1,1,-1,1,0,0,0,0,0,0,0,0],[1,-1,0,0,0,-1,0,1,1,0,0,1,1,1,0,1,0,0],[0,1,1,-1,0,-1,1,1,-1,0,0,0,0,1,0,0,0,0],[-1,-1,1,1,-1,1,0,1,0,0,0,0,0,0,0,0,0,1],[1,-1,1,0,-1,1,0,0,0,0,0,0,0,0,0,0,1,0],[1,0,1,0,0,0,1,-1,-1,0,1,0,1,1,1,0,0,0],[0,-1,0,0,0,1,1,-1,0,1,0,1,0,1,0,0,0,0],[0,-1,1,0,1,-1,0,1,-1,0,0,0,0,0,0,1,0,0],[-1,1,-1,-1,1,1,1,0,0,0,0,0,0,0,0,0,1,0],[1,-1,1,0,0,-1,0,1,0,0,0,0,0,1,0,1,0,0],[-1,1,-1,1,0,0,-1,0,1,0,0,0,0,1,0,0,0,0],[1,1,0,0,0,-1,1,-1,0,0,0,1,1,1,0,0,0,1],[0,0,1,1,-1,0,0,1,-1,1,0,0,0,0,0,0,0,0],[0,0,1,0,1,1,0,-1,-1,0,0,0,0,0,0,1,0,0],[1,0,0,0,0,-1,1,1,-1,0,0,1,1,0,0,0,0,0],[-1,1,-1,-1,0,1,1,0,1,0,0,0,0,0,0,0,1,0],[1,-1,-1,1,0,1,-1,1,0,0,0,0,0,1,0,0,0,0],[-1,-1,1,1,0,-1,1,0,1,0,0,0,0,1,0,0,1,0],[-1,0,0,1,1,-1,1,1,-1,0,0,1,0,0,0,0,0,0],[1,0,-1,-1,0,1,1,0,0,0,0,0,0,1,0,0,1,1],[-1,1,1,0,-1,1,0,0,0,0,0,0,0,0,0,0,0,1],[-1,1,-1,1,0,0,0,1,0,0,0,0,0,1,0,0,0,0],[1,0,-1,0,-1,1,1,-1,0,0,1,0,0,0,0,0,0,0],[-1,1,1,0,0,-1,1,0,-1,0,0,0,0,1,0,0,0,0],[1,0,1,0,-1,-1,0,1,0,0,0,0,1,0,0,0,0,0],[0,0,0,-1,1,-1,-1,1,1,1,0,0,0,0,0,0,0,0],[0,0,1,0,0,1,-1,1,-1,1,0,0,0,0,0,0,0,0],[0,-1,1,1,0,1,0,-1,0,0,0,0,0,1,0,0,0,0],[0,1,-1,-1,0,1,1,0,0,0,0,0,0,1,0,0,1,1],[-1,0,1,0,1,0,0,1,-1,0,1,0,1,0,1,1,0,0],[1,1,0,0,-1,-1,1,0,0,0,0,0,1,0,0,0,0,0],[0,-1,1,-1,0,-1,1,0,1,0,0,0,0,1,0,0,0,0],[1,0,1,0,-1,0,1,-1,0,0,1,0,0,0,0,0,0,0],[-1,-1,1,0,1,1,-1,0,0,0,0,0,1,0,0,0,0,0],[1,-1,0,1,0,0,-1,0,1,0,0,0,0,1,0,0,0,0],[1,0,1,-1,-1,0,1,0,0,0,1,0,0,0,1,0,0,0],[1,0,1,0,1,-1,0,0,-1,0,1,0,1,0,0,1,1,0],[0,0,-1,0,1,1,1,0,-1,0,0,0,1,0,0,0,0,0],[0,-1,0,0,0,1,-1,1,1,0,0,1,0,0,0,0,0,0],[1,0,-1,-1,-1,1,1,-1,1,0,1,0,0,0,0,0,0,0],[-1,-1,1,1,0,0,1,0,-1,0,0,0,0,1,0,0,0,0],[0,-1,0,1,0,0,-1,1,1,0,0,1,0,0,0,0,0,0],[0,-1,0,-1,1,1,-1,1,0,1,0,0,0,0,0,0,0,0],[1,0,-1,-1,0,1,-1,1,1,0,0,0,0,1,0,0,0,0],[0,-1,1,0,1,1,-1,0,0,1,0,0,1,0,0,0,1,1],[1,-1,0,-1,1,1,-1,0,0,0,0,0,0,0,0,0,0,1],[0,1,0,1,-1,1,1,-1,-1,1,0,0,0,0,0,0,0,0],[1,-1,-1,0,-1,1,1,1,0,0,0,0,1,0,0,0,0,1],[1,0,1,0,-1,1,-1,0,0,0,1,0,1,0,0,0,1,1],[1,0,0,1,-1,0,0,-1,1,0,1,0,0,0,0,1,0,0],[1,-1,-1,1,-1,0,0,1,1,0,0,0,0,0,0,1,0,0],[0,1,-1,0,0,1,0,-1,1,1,0,0,1,1,0,0,0,0],[1,-1,0,-1,1,0,0,1,0,0,0,0,0,0,0,0,0,1],[-1,1,-1,1,-1,0,1,0,1,0,0,0,0,0,0,0,1,0],[-1,0,-1,0,1,1,1,-1,1,0,1,0,0,0,0,0,0,0],[1,-1,0,-1,0,-1,1,0,1,0,0,0,0,1,0,0,0,0],[0,1,-1,0,-1,1,0,0,0,1,0,0,0,0,0,1,0,1],[0,1,-1,-1,1,1,0,-1,1,1,0,0,0,0,0,0,0,0],[1,-1,0,0,1,1,0,-1,-1,0,0,0,0,0,0,1,0,0],[0,-1,0,1,1,-1,-1,1,1,1,0,0,0,0,0,0,0,0],[-1,1,0,1,-1,-1,1,0,1,0,0,0,0,0,0,0,1,0],[1,0,1,1,-1,-1,-1,1,0,0,1,0,0,0,0,0,0,0],[-1,0,1,0,0,1,1,0,-1,0,0,0,0,1,0,0,0,0],[1,0,0,1,-1,-1,0,0,1,0,0,0,0,0,0,1,0,0],[1,0,1,-1,-1,1,0,0,0,0,1,0,0,0,0,1,1,1],[0,-1,1,-1,1,0,0,1,0,0,0,0,0,0,0,1,0,0],[-1,0,1,-1,0,1,1,0,-1,0,0,0,0,1,0,0,0,0],[0,-1,0,1,1,0,1,0,-1,1,0,1,0,0,1,0,1,0],[0,-1,1,-1,1,1,0,1,-1,0,0,0,0,0,0,1,0,0],[0,1,0,1,0,1,-1,-1,0,0,0,0,0,1,0,0,0,1],[-1,1,0,1,0,1,-1,0,0,0,0,0,0,1,0,0,0,0],[-1,-1,1,1,0,0,1,-1,1,0,0,0,0,1,0,0,0,0],[0,-1,1,1,0,-1,1,0,0,1,0,0,0,1,0,0,1,1],[-1,1,1,0,0,-1,-1,1,1,0,0,0,1,0,0,0,0,0],[0,0,-1,-1,1,1,1,0,0,1,1,0,0,0,0,0,1,1],[-1,0,0,0,1,1,1,-1,0,0,1,1,1,0,0,0,0,1],[-1,1,0,0,-1,0,1,0,1,0,0,0,0,0,0,0,1,0],[1,0,-1,1,1,0,-1,0,0,0,1,0,0,0,1,0,1,1],[0,1,0,1,-1,0,1,0,-1,1,0,0,0,0,0,0,0,0],[-1,-1,1,0,0,1,0,1,0,0,0,0,1,1,0,1,0,1],[0,1,-1,0,-1,1,1,-1,1,1,0,0,1,0,0,0,0,0],[1,0,-1,0,-1,1,1,-1,0,0,1,0,0,0,0,0,0,0],[-1,0,0,1,1,0,1,0,-1,0,1,1,0,0,1,0,1,0],[1,0,1,0,-1,-1,1,1,-1,0,0,0,1,0,0,0,0,0],[0,1,0,-1,1,0,1,-1,-1,0,0,1,0,0,0,0,0,0],[0,1,-1,0,0,-1,1,0,1,1,0,0,1,1,0,0,1,0],[0,1,0,1,-1,0,0,1,-1,1,0,1,0,0,1,1,0,0],[1,-1,0,0,0,-1,1,1,0,0,0,1,1,1,0,0,0,1],[0,1,1,-1,0,1,-1,0,0,1,0,0,0,0,0,0,0,0],[1,1,-1,-1,1,0,1,-1,0,0,0,0,0,0,0,0,0,1],[1,0,-1,-1,1,1,-1,1,0,0,1,0,0,0,0,0,0,1],[1,-1,0,-1,-1,1,1,1,0,0,0,0,0,0,0,0,0,1],[1,-1,1,-1,0,-1,1,1,0,0,0,0,0,1,0,0,0,0],[1,0,0,-1,0,-1,1,1,-1,0,1,1,0,1,0,0,0,0],[0,0,1,-1,1,1,-1,0,0,1,0,0,0,0,0,0,0,1],[1,1,0,-1,-1,1,0,1,-1,0,0,1,0,0,0,0,0,0],[0,1,0,0,1,-1,-1,0,1,1,0,1,1,0,0,0,1,0],[0,1,0,-1,-1,1,1,-1,1,0,0,1,0,0,0,0,0,0],[-1,1,0,1,-1,1,-1,1,0,0,0,1,0,0,0,0,0,1],[-1,1,0,-1,-1,1,1,0,0,0,0,0,0,0,0,0,0,1],[0,1,1,1,-1,-1,0,-1,1,1,0,0,0,0,0,0,0,0],[1,1,0,-1,1,-1,0,0,0,0,0,1,0,0,0,1,1,1],[1,1,0,-1,0,-1,0,1,0,0,0,0,0,1,0,0,0,0],[-1,1,-1,0,-1,1,1,1,0,0,0,0,0,0,0,0,0,1],[1,-1,1,-1,0,0,1,0,0,0,0,0,0,1,0,0,0,0],[1,0,1,1,-1,-1,0,0,0,0,1,0,0,0,0,1,1,1],[1,-1,0,1,1,0,0,0,-1,0,0,1,0,0,1,1,1,0],[1,-1,1,0,-1,0,1,0,0,0,0,0,1,0,0,0,1,0],[-1,0,1,1,0,1,0,-1,0,0,1,0,0,1,0,1,0,1],[-1,0,0,1,1,-1,0,0,1,0,1,1,0,0,0,1,1,0],[1,0,-1,-1,0,0,1,1,0,0,0,0,0,0,0,0,0,1],[0,0,1,-1,0,-1,0,1,1,0,0,0,0,1,0,1,0,0],[-1,0,1,1,0,1,-1,0,-1,0,0,0,0,1,0,0,1,0],[0,0,-1,1,-1,0,1,1,-1,1,0,0,0,0,1,0,0,0],[0,1,0,1,-1,-1,-1,1,1,0,0,1,0,0,0,0,0,0],[0,1,-1,1,0,1,-1,1,-1,0,0,0,0,1,0,0,0,0],[-1,0,1,-1,-1,1,1,1,0,0,0,0,0,0,0,0,0,1],[0,-1,1,1,0,-1,1,1,-1,1,0,0,0,1,0,0,0,0],[1,0,1,0,-1,1,-1,0,0,0,1,0,1,0,0,0,1,1],[1,-1,0,1,1,-1,0,1,-1,0,0,1,0,0,0,0,0,0],[-1,1,0,1,1,0,0,-1,0,0,0,0,0,0,1,0,0,0],[1,1,0,-1,0,0,-1,0,1,0,0,1,0,1,1,0,1,0],[-1,0,1,1,0,-1,1,-1,0,0,0,0,0,1,0,0,0,0],[1,0,-1,0,1,-1,1,0,0,0,0,0,0,0,0,0,0,1],[0,1,-1,1,-1,-1,1,0,1,1,0,0,0,0,0,0,1,0],[0,-1,0,1,0,-1,0,1,1,0,0,0,0,0,0,1,0,0],[1,-1,0,0,0,-1,1,1,-1,0,0,1,1,0,0,0,0,0],[1,-1,0,1,0,1,-1,0,0,0,0,0,0,1,0,0,0,0],[-1,-1,0,1,1,-1,1,1,0,0,0,1,0,0,0,0,0,0],[0,1,1,-1,0,-1,0,1,0,0,0,0,0,1,0,0,0,0],[0,1,-1,1,-1,-1,1,0,1,1,0,0,0,0,0,0,1,0],[0,1,1,-1,1,1,-1,0,-1,1,0,0,0,0,0,0,1,0],[-1,1,0,-1,1,0,0,0,1,0,0,0,0,0,0,1,0,0],[0,0,1,0,1,-1,0,1,-1,1,1,0,1,0,0,1,0,0],[0,1,1,0,-1,-1,-1,1,1,0,0,0,1,0,0,0,0,0],[1,-1,0,0,1,-1,0,1,-1,0,0,1,0,0,0,0,0,0],[1,1,-1,0,1,0,1,-1,-1,0,0,0,0,0,1,0,0,0],[1,1,-1,0,1,0,0,-1,0,0,0,0,0,0,0,0,0,1],[-1,1,1,0,1,-1,0,-1,1,0,0,0,0,0,0,1,0,0],[0,1,-1,1,0,1,-1,1,-1,0,0,0,0,1,0,0,0,0],[-1,1,0,1,1,-1,0,-1,1,0,0,1,0,0,0,1,0,0],[1,1,0,0,-1,0,1,0,-1,0,0,1,1,0,1,0,1,0],[0,1,0,0,1,-1,-1,0,0,0,0,0,0,0,0,0,1,0],[1,0,1,0,1,-1,0,0,-1,0,1,0,1,0,0,1,1,0],[-1,1,0,0,-1,0,1,-1,1,0,0,1,1,0,1,0,0,0],[-1,1,-1,1,0,0,1,0,-1,0,0,0,0,1,1,0,1,0],[1,-1,1,1,1,0,-1,0,-1,0,0,0,0,0,0,0,1,0],[1,1,0,0,0,-1,-1,1,0,0,0,1,1,1,0,0,0,1],[1,-1,0,0,1,1,1,-1,-1,0,0,1,1,0,0,0,0,0],[0,-1,-1,0,1,0,1,1,0,1,0,0,0,0,0,0,0,1],[-1,1,-1,0,0,1,-1,1,1,0,0,0,1,1,0,0,0,0],[1,1,0,1,-1,-1,-1,0,1,0,0,1,0,0,0,0,0,0],[1,-1,0,1,1,0,-1,1,-1,0,0,0,0,0,1,0,0,0],[-1,0,0,0,0,1,1,-1,1,0,0,1,0,0,0,0,0,0],[1,1,0,0,-1,-1,0,1,0,0,0,1,1,0,0,0,0,0],[1,0,1,-1,0,-1,0,0,1,0,0,0,0,1,0,0,0,0],[0,0,0,1,-1,1,1,-1,0,1,1,0,0,0,0,0,0,0],[0,-1,1,-1,1,0,0,1,0,0,0,0,0,0,0,1,0,0],[1,-1,0,-1,1,-1,1,1,0,0,0,1,0,0,0,0,0,1],[1,-1,-1,1,0,1,-1,0,0,0,0,0,0,1,0,0,0,0],[0,0,1,1,-1,0,0,1,-1,1,0,0,0,0,0,0,0,0],[0,1,1,1,0,-1,-1,0,0,1,0,0,0,0,0,0,0,0],[-1,1,1,1,0,-1,-1,0,1,0,0,0,0,1,0,0,1,0],[-1,1,0,0,-1,1,1,-1,1,0,0,1,0,0,0,0,0,0],[0,-1,1,1,0,0,-1,1,0,0,0,0,0,1,1,0,0,1],[0,-1,-1,1,1,-1,1,0,1,1,0,0,0,0,0,0,0,0],[1,1,0,0,1,0,-1,0,-1,0,0,0,0,0,0,0,1,0],[0,0,1,-1,0,1,0,1,-1,1,0,0,0,0,0,0,0,0],[1,0,1,-1,0,1,0,-1,0,0,1,0,0,1,0,1,0,1],[0,0,1,0,1,-1,-1,0,1,1,0,0,0,0,0,0,0,0],[0,1,1,1,-1,-1,-1,0,1,1,0,0,0,0,0,0,0,0],[-1,1,0,1,-1,0,1,0,0,0,0,0,0,0,0,0,0,1],[0,1,1,-1,0,0,-1,1,0,1,0,0,0,0,0,0,0,0],[1,-1,1,-1,1,0,0,0,0,0,0,0,0,0,1,1,1,1],[1,0,1,0,-1,-1,1,-1,1,0,1,0,1,0,0,0,0,0],[-1,1,1,0,0,1,0,0,-1,0,0,0,1,1,0,1,1,0],[1,-1,0,1,-1,1,-1,0,1,0,0,1,0,0,0,0,1,0],[0,-1,0,1,1,-1,1,0,-1,0,0,1,0,0,0,0,0,0],[0,-1,-1,0,1,1,-1,1,1,1,0,0,0,0,0,0,0,0],[0,-1,1,0,0,-1,1,0,1,1,0,0,1,1,0,0,1,0],[1,-1,1,-1,-1,1,1,0,0,0,0,0,0,0,0,0,1,0],[-1,1,1,0,0,1,-1,1,-1,0,0,0,1,1,0,0,0,0],[0,0,-1,0,-1,1,1,1,0,0,0,0,0,0,0,0,0,1],[-1,1,0,0,-1,1,0,1,0,0,0,1,1,0,0,1,0,1],[0,1,0,-1,-1,0,1,1,0,0,0,0,0,0,1,0,0,1],[0,-1,1,1,0,-1,0,1,-1,1,0,0,0,1,0,1,0,0],[0,-1,0,0,-1,1,1,1,0,0,0,0,0,0,0,0,0,1],[0,-1,1,0,1,1,0,-1,0,1,0,0,1,0,0,1,0,1],[0,1,1,-1,-1,1,0,0,0,1,0,0,0,0,0,1,1,1],[-1,0,-1,1,0,0,0,1,1,0,1,0,0,0,0,1,0,0],[-1,0,-1,1,0,0,1,0,1,0,1,0,0,0,0,0,0,0],[1,1,0,-1,-1,0,0,0,1,0,0,1,0,0,1,0,0,0],[1,0,-1,-1,-1,0,0,1,1,0,0,0,0,0,1,1,0,0],[-1,0,-1,0,1,0,1,1,0,0,1,0,0,0,0,0,0,0],[-1,0,1,1,1,0,-1,1,-1,0,1,0,0,0,1,0,0,0],[-1,1,1,-1,0,0,0,1,-1,0,0,0,0,1,0,1,0,0],[1,-1,-1,0,0,0,1,1,0,0,0,0,1,1,1,0,0,1],[1,0,-1,0,-1,1,1,0,0,0,0,0,1,0,0,0,0,0],[1,1,0,0,1,-1,0,0,-1,0,0,1,0,0,0,0,0,0],[0,0,1,0,1,1,-1,0,-1,0,0,0,1,0,0,0,1,0],[-1,1,-1,1,1,0,-1,0,1,0,0,0,0,0,1,0,1,0],[1,1,-1,-1,0,-1,1,0,1,0,0,0,0,1,0,0,0,0],[0,0,-1,0,1,1,0,1,-1,1,1,0,1,0,0,1,0,0],[1,-1,0,0,1,1,0,0,-1,0,0,0,1,0,0,0,0,0],[1,0,1,1,-1,0,0,0,-1,0,1,0,0,0,1,1,1,0],[-1,1,0,0,1,1,-1,0,0,0,0,0,1,0,0,0,0,0],[0,-1,1,0,0,-1,0,1,1,0,0,0,0,0,0,1,0,0],[-1,1,1,0,0,-1,0,0,1,0,0,0,1,0,0,0,0,0],[0,1,-1,-1,0,0,1,1,0,1,0,0,0,1,1,0,0,1],[-1,1,-1,1,0,-1,1,1,0,0,0,0,0,0,0,0,0,1],[-1,-1,0,-1,1,1,1,0,0,0,0,1,0,0,0,0,0,0],[0,1,1,-1,-1,1,1,0,-1,1,0,0,0,0,0,0,0,0],[0,1,0,-1,0,0,-1,1,1,1,0,0,0,1,0,0,0,0],[1,1,-1,0,0,0,0,-1,1,0,0,0,0,1,0,0,0,0],[-1,0,1,1,0,-1,-1,0,1,0,1,0,0,1,0,0,1,0],[1,0,-1,0,-1,1,0,-1,1,0,1,0,1,0,0,1,0,0],[0,0,-1,-1,-1,1,1,1,0,0,0,0,0,0,0,0,0,1],[-1,0,-1,0,1,-1,0,1,1,0,1,0,0,0,0,0,0,0],[-1,1,0,-1,0,1,1,0,0,0,0,1,0,1,0,0,1,1],[0,-1,1,-1,0,1,1,-1,0,0,0,0,0,1,0,0,0,0],[1,1,0,-1,0,0,0,1,-1,0,0,1,0,1,1,1,0,0],[1,0,1,0,0,0,-1,1,-1,0,1,0,0,0,0,0,0,0],[-1,-1,1,1,1,0,0,-1,1,0,0,0,0,0,1,1,0,0],[-1,1,1,0,1,1,0,-1,-1,0,0,0,0,0,0,1,0,0],[-1,0,0,0,1,1,-1,1,0,0,0,0,1,0,0,0,0,0],[0,0,1,1,0,-1,1,-1,0,1,1,0,0,1,0,0,0,1],[-1,0,0,0,1,-1,-1,1,1,0,1,0,1,0,0,0,0,0],[-1,1,0,0,0,1,0,-1,1,0,0,1,0,0,0,0,0,0],[0,-1,-1,1,1,0,0,1,0,1,0,0,0,0,1,0,0,0],[0,1,1,0,0,1,0,-1,-1,1,0,0,0,0,0,1,0,0],[0,0,-1,0,1,-1,-1,1,1,1,1,0,1,0,0,0,0,0],[-1,1,-1,1,0,1,-1,0,1,0,0,0,0,1,0,0,0,0],[-1,1,-1,0,1,-1,1,0,1,0,0,0,0,0,0,0,1,0],[1,1,0,0,-1,1,-1,-1,1,0,0,1,0,0,0,0,0,0],[-1,1,1,-1,-1,1,0,1,0,0,0,0,0,0,0,1,0,1],[1,1,0,1,-1,0,-1,0,0,0,0,1,0,0,0,0,0,0],[-1,0,0,1,-1,1,1,-1,0,0,1,1,0,0,0,0,0,1],[-1,1,-1,0,1,1,-1,0,1,0,0,0,1,0,0,0,0,0],[0,1,-1,1,1,-1,1,-1,0,0,0,0,0,0,0,0,0,1],[0,1,1,1,0,0,-1,0,-1,1,0,0,0,0,0,0,1,0],[1,-1,0,0,1,1,0,-1,-1,0,0,0,0,0,0,1,0,0],[0,0,1,-1,0,0,-1,1,1,1,0,0,0,0,1,0,0,0],[0,1,0,0,1,-1,1,-1,0,0,0,1,0,0,0,0,0,0],[0,-1,1,1,0,-1,-1,1,0,1,0,0,0,1,0,0,0,1],[-1,0,1,0,0,-1,0,1,1,0,0,0,0,0,0,1,0,0],[1,-1,-1,1,-1,1,0,0,0,0,0,0,0,0,0,1,1,0],[0,1,1,1,1,-1,-1,-1,0,0,0,0,0,0,0,0,0,1],[1,-1,0,1,0,-1,0,0,1,0,0,1,0,1,0,1,1,0],[-1,0,-1,1,0,1,0,0,1,0,1,0,0,1,0,0,0,0],[0,1,0,1,1,-1,0,-1,0,0,0,0,0,0,0,0,0,1],[0,0,1,-1,-1,1,1,1,-1,1,0,0,0,0,0,0,0,0],[-1,1,0,1,0,1,-1,-1,1,0,0,1,0,1,0,0,0,0],[0,-1,0,1,-1,1,1,1,-1,1,0,0,0,0,0,0,0,0],[-1,0,0,1,0,0,1,1,-1,0,1,1,0,1,1,0,0,0],[0,1,1,1,0,0,-1,-1,0,0,0,0,0,0,0,0,0,1],[0,1,1,1,-1,1,0,-1,-1,1,0,0,0,0,0,1,0,0],[1,-1,0,-1,-1,1,0,1,1,0,0,1,0,0,0,1,0,0],[0,-1,1,-1,1,1,-1,1,0,1,0,0,0,0,0,0,0,0],[1,0,-1,1,0,0,0,1,-1,0,0,0,0,0,1,1,0,0],[-1,1,0,0,0,1,0,-1,1,0,0,1,0,0,0,0,0,0],[1,-1,1,-1,0,0,1,-1,1,0,0,0,0,1,0,0,0,0],[-1,0,1,1,1,-1,0,1,-1,0,1,0,0,0,0,1,0,0],[0,0,0,1,-1,1,0,1,-1,1,0,1,0,0,0,1,0,0],[0,0,1,1,-1,-1,-1,1,1,1,1,0,0,0,0,0,0,0],[-1,0,1,0,1,1,0,0,-1,0,1,0,1,0,0,1,1,0],[1,1,0,1,-1,-1,0,0,-1,0,0,1,0,0,0,0,0,0],[1,0,1,1,1,-1,-1,0,-1,0,0,0,0,0,0,0,1,0],[-1,1,-1,1,-1,1,1,0,0,0,0,0,0,0,0,0,0,1],[1,0,1,-1,1,0,0,-1,0,0,1,0,0,0,1,1,0,1],[-1,0,1,0,-1,0,1,0,1,0,1,0,1,0,1,0,1,0],[0,-1,-1,0,1,1,0,1,0,1,0,0,0,0,0,0,0,0],[0,0,1,-1,0,1,0,1,-1,1,0,0,0,0,0,0,0,0],[0,1,0,0,0,-1,1,1,-1,0,0,1,0,1,0,0,0,0],[0,0,1,1,0,0,-1,1,-1,0,1,0,0,1,0,0,0,0],[1,0,-1,0,-1,0,1,1,-1,0,0,0,0,0,1,0,0,0],[-1,-1,1,0,1,-1,0,1,0,0,0,0,0,0,0,1,0,0],[0,1,1,-1,-1,1,0,0,0,1,0,0,0,0,0,1,1,1],[0,-1,0,0,1,1,0,-1,1,1,0,1,1,0,0,1,0,0],[0,0,-1,0,1,0,1,1,-1,0,1,0,0,0,1,0,0,0],[1,-1,-1,0,0,1,-1,1,1,0,0,0,0,1,0,0,0,0],[-1,1,0,0,1,0,1,0,-1,0,0,1,1,0,1,0,1,0],[-1,1,1,1,0,0,-1,-1,0,0,0,0,0,0,0,0,0,1],[0,1,-1,1,-1,0,1,0,-1,1,0,0,0,0,1,0,0,0],[1,0,1,0,-1,0,-1,1,0,0,1,0,0,0,0,0,0,0],[0,-1,0,1,1,0,-1,1,0,0,0,0,0,0,1,0,0,0],[-1,1,0,0,-1,1,1,-1,1,0,0,1,0,0,0,0,0,0],[-1,1,1,0,-1,1,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,-1,0,1,-1,0,1,0,0,0,0,0,0,0,0,0,1],[0,-1,0,1,0,1,-1,0,1,1,0,1,0,1,0,0,1,0],[1,1,0,0,-1,0,-1,0,1,0,0,1,0,0,0,0,0,0],[-1,-1,0,1,1,-1,0,1,1,0,0,1,0,0,0,0,0,0],[0,1,-1,-1,0,0,1,0,1,0,0,0,0,0,0,0,1,0],[1,0,1,0,-1,1,0,0,-1,0,1,0,0,0,0,0,0,0],[1,0,-1,0,0,0,-1,1,1,0,0,0,0,1,0,0,0,0],[-1,0,-1,1,1,-1,1,1,0,0,1,0,0,0,0,0,0,1],[1,-1,0,1,-1,1,0,1,-1,0,0,0,0,0,0,1,0,0],[1,0,1,-1,0,1,-1,0,0,0,1,0,0,1,0,0,1,1],[1,0,1,0,1,-1,-1,0,0,0,1,0,1,0,0,0,1,1],[-1,1,0,-1,-1,1,0,0,1,0,0,0,0,0,0,1,0,0],[1,-1,1,0,0,0,-1,1,0,0,0,0,0,1,1,0,0,1],[0,-1,1,1,0,-1,-1,1,1,1,0,0,0,1,0,0,0,0],[0,-1,0,-1,1,1,1,0,0,0,0,1,0,0,0,0,0,0],[0,0,0,1,-1,1,-1,1,0,1,0,1,0,0,0,0,0,1],[-1,1,-1,1,1,0,1,-1,0,0,0,0,0,0,1,0,0,0],[0,1,1,-1,1,1,-1,-1,0,1,0,0,0,0,0,0,0,1],[-1,-1,0,1,0,1,0,0,1,0,0,1,0,0,0,0,0,0],[0,1,0,1,1,0,-1,0,-1,0,0,0,0,0,0,0,1,0],[1,0,-1,0,-1,0,1,1,0,0,1,0,1,0,1,0,0,1],[0,-1,1,-1,1,0,-1,1,1,1,0,0,0,0,0,0,0,0],[0,1,0,-1,-1,0,1,0,1,0,0,0,0,0,1,0,0,0],[1,1,-1,-1,-1,0,1,1,0,0,0,0,0,0,1,0,0,0],[-1,0,1,-1,-1,1,1,0,0,0,0,0,0,0,0,0,0,1],[1,-1,0,1,0,1,0,0,-1,0,0,1,0,1,0,1,1,0],[1,0,1,0,1,0,0,-1,-1,0,0,0,0,0,0,1,0,0],[-1,0,0,1,-1,1,1,0,0,0,1,1,0,0,0,0,1,1],[0,0,-1,0,-1,1,0,1,1,0,0,0,0,0,0,1,0,0],[-1,1,1,0,-1,-1,1,1,0,0,0,0,1,0,0,0,0,1],[0,-1,1,1,1,-1,-1,0,1,1,0,0,0,0,0,0,0,0],[1,0,0,-1,-1,1,-1,1,0,0,0,1,0,0,0,0,0,0],[-1,0,0,1,-1,1,0,-1,1,0,1,1,0,0,0,0,0,0],[-1,0,0,0,0,1,1,1,-1,0,1,1,0,1,0,0,0,0],[0,0,-1,1,1,-1,0,0,1,1,0,0,0,0,0,0,0,0],[0,1,1,1,0,-1,0,0,-1,1,0,0,0,1,0,1,1,0],[0,1,0,-1,1,1,0,0,-1,0,0,0,0,0,0,0,1,0],[0,1,1,0,0,-1,0,-1,1,1,0,0,0,0,0,0,0,0],[-1,-1,1,1,-1,0,1,0,1,0,0,0,0,0,0,0,1,0],[1,-1,0,0,0,1,-1,-1,1,0,0,0,0,1,0,0,0,0],[1,1,0,0,0,0,1,-1,-1,0,0,1,1,1,1,0,0,0],[-1,0,-1,1,1,0,0,0,1,0,1,0,0,0,0,0,0,0],[0,-1,0,-1,1,1,0,1,0,1,0,0,0,0,0,0,0,0],[-1,0,1,1,0,-1,0,0,1,0,0,0,0,1,0,1,1,0],[0,0,1,1,1,-1,0,-1,0,0,0,0,0,0,0,1,0,0],[1,0,1,0,-1,0,-1,1,-1,0,1,0,0,0,0,0,0,0],[1,1,0,0,0,1,-1,0,-1,0,0,1,0,0,0,0,1,0],[0,1,1,-1,0,1,-1,0,-1,1,0,0,0,0,0,0,1,0],[0,1,1,0,0,-1,0,1,-1,1,0,0,1,1,0,1,0,0],[1,0,0,-1,1,0,-1,1,0,0,1,1,0,0,1,0,0,1],[1,-1,-1,0,-1,1,0,1,1,0,0,0,0,0,0,1,0,0],[1,1,0,0,1,-1,0,-1,0,0,0,1,1,0,0,1,0,1],[0,-1,0,1,0,1,0,-1,1,0,0,0,0,1,0,0,0,0],[-1,1,1,1,0,0,-1,-1,1,0,0,0,0,0,1,0,0,0],[1,-1,0,1,-1,-1,0,0,1,0,0,0,0,0,0,1,1,0],[0,0,1,-1,0,1,1,0,-1,0,0,0,0,1,0,0,0,0],[-1,-1,1,1,1,-1,0,0,1,0,0,0,0,0,0,1,0,0],[0,1,1,0,0,1,-1,-1,0,0,0,0,0,0,0,0,0,1],[0,0,-1,-1,1,-1,0,1,1,1,1,0,0,0,0,1,0,0],[1,-1,0,0,1,1,-1,1,-1,0,0,0,1,0,0,0,0,0],[1,1,0,0,0,0,1,-1,-1,0,0,1,1,1,1,0,0,0],[-1,0,1,0,0,1,0,1,-1,0,0,0,1,1,0,1,0,0],[1,0,0,-1,1,0,-1,1,0,0,1,1,0,0,1,0,0,1],[1,-1,-1,0,0,0,1,1,0,0,0,0,1,1,1,0,0,1],[0,1,0,0,-1,-1,1,1,-1,1,0,1,1,0,0,0,0,0],[0,1,1,1,-1,0,0,0,-1,1,0,0,0,0,0,0,0,0],[1,0,1,-1,0,-1,1,1,-1,0,0,0,0,1,0,0,0,0],[1,1,-1,-1,0,-1,0,1,1,0,0,0,0,1,0,0,0,0],[0,1,-1,0,-1,1,1,0,0,1,0,0,1,0,0,0,1,1],[1,1,0,0,0,0,-1,-1,1,0,0,1,1,1,1,0,0,0],[1,0,-1,-1,1,1,0,1,-1,0,1,0,0,0,0,0,0,0],[-1,0,0,-1,1,1,1,-1,1,0,0,1,0,0,0,0,0,0],[0,1,-1,-1,-1,1,1,0,1,0,0,0,0,0,0,0,1,0],[0,0,1,-1,0,-1,1,1,0,0,0,0,0,1,0,0,0,0],[0,-1,0,0,0,1,1,-1,1,0,0,1,0,1,0,0,0,0],[0,1,0,1,-1,0,1,-1,0,1,0,0,0,0,0,0,0,0],[0,1,1,-1,1,0,-1,-1,1,1,0,0,0,0,0,0,0,0],[0,0,0,0,1,1,-1,1,-1,1,1,1,1,0,0,0,0,0],[1,0,-1,-1,1,0,0,1,0,0,1,0,0,0,1,1,0,1],[1,1,0,-1,0,1,1,-1,-1,0,0,1,0,0,0,0,0,0],[1,1,0,0,0,0,-1,1,-1,0,0,1,1,1,1,0,0,0],[0,-1,1,1,1,0,-1,0,-1,0,0,0,0,0,0,0,1,0],[1,0,1,0,-1,1,1,-1,-1,0,1,0,0,0,0,0,0,0],[0,-1,1,1,0,-1,0,0,1,0,0,0,0,1,0,1,0,0],[0,0,1,-1,1,1,-1,1,-1,1,0,0,0,0,0,0,0,0],[0,-1,0,1,1,-1,1,1,-1,0,0,1,0,0,0,0,0,0],[-1,1,-1,1,-1,0,1,1,0,0,0,0,0,0,0,0,0,1],[-1,0,1,1,0,0,-1,1,-1,0,0,0,0,1,0,0,0,0],[0,-1,-1,1,1,0,0,0,1,1,0,0,0,0,0,0,0,0],[1,0,-1,1,-1,-1,0,1,0,0,0,0,0,0,0,1,0,1],[-1,0,1,0,1,1,-1,1,-1,0,0,0,1,0,0,0,0,0],[-1,0,-1,1,0,1,0,1,0,0,1,0,0,1,0,0,0,0],[0,1,0,-1,-1,0,0,1,1,0,0,0,0,0,1,1,0,0],[-1,1,0,0,-1,1,1,0,0,0,0,0,0,0,0,0,0,1],[1,1,0,-1,0,1,-1,-1,1,0,0,1,0,1,0,0,0,0],[0,-1,-1,1,-1,0,1,1,0,1,0,0,0,0,0,0,0,0],[1,-1,-1,-1,0,1,1,0,1,0,0,0,0,1,0,0,1,0],[1,0,0,1,-1,-1,-1,1,1,0,0,1,0,0,0,0,0,0],[0,-1,1,1,1,0,-1,0,0,0,0,0,0,0,1,0,0,0],[1,-1,0,-1,1,1,1,0,-1,0,0,1,0,0,0,0,0,0],[0,-1,-1,1,1,-1,0,1,1,1,0,0,0,0,0,0,0,0],[1,1,-1,0,-1,1,0,1,-1,0,0,0,0,0,0,1,0,0],[-1,1,0,1,1,-1,0,0,0,0,0,0,0,0,0,0,1,0],[1,0,0,0,1,0,1,-1,-1,0,1,1,1,0,1,0,0,0],[-1,-1,0,0,1,1,1,1,-1,0,0,1,0,0,0,0,0,0],[0,0,-1,0,1,-1,1,0,1,1,1,0,1,0,0,0,1,0],[0,1,-1,-1,1,0,0,0,1,1,0,0,0,0,1,1,1,0],[0,-1,0,-1,1,1,1,0,0,0,0,1,0,0,0,0,0,0],[1,0,-1,-1,0,1,1,-1,1,0,0,0,0,1,0,0,0,0],[-1,0,1,1,0,-1,-1,1,1,0,1,0,0,1,0,0,0,0],[1,0,-1,1,0,1,0,-1,0,0,1,0,0,1,0,1,0,1],[0,0,1,0,1,1,-1,-1,0,0,0,0,0,0,0,0,0,1],[1,1,0,-1,1,-1,1,0,-1,0,0,1,0,0,0,0,0,0],[0,0,-1,0,1,1,1,-1,0,0,0,0,1,0,0,0,0,0],[0,-1,1,1,-1,1,-1,1,0,0,0,0,0,0,0,0,0,1],[-1,-1,0,-1,1,1,0,1,1,0,0,1,0,0,0,1,0,0],[0,1,-1,1,1,0,-1,-1,1,1,0,0,0,0,1,0,0,0],[-1,1,1,-1,0,1,1,0,-1,0,0,0,0,1,0,0,0,0],[1,-1,1,-1,-1,1,1,0,0,0,0,0,0,0,0,0,1,0],[0,0,1,-1,-1,0,0,1,1,0,0,0,0,0,1,0,0,0],[0,1,1,1,1,-1,-1,0,-1,0,0,0,0,0,0,0,1,0],[1,0,1,-1,0,-1,0,1,0,0,0,0,0,1,0,0,0,0],[0,1,1,0,-1,0,0,-1,1,1,0,0,1,0,1,1,0,0],[-1,-1,1,0,-1,1,1,1,0,0,0,0,0,0,0,0,0,1],[1,1,0,0,-1,1,-1,-1,1,0,0,1,0,0,0,0,0,0],[-1,1,1,0,-1,-1,1,0,1,0,0,0,1,0,0,0,0,0],[0,0,0,1,-1,0,1,1,-1,1,0,0,0,0,0,0,0,0],[0,-1,1,-1,1,0,-1,1,1,1,0,0,0,0,0,0,0,0],[1,1,0,1,-1,1,-1,0,-1,0,0,1,0,0,0,0,1,0],[0,-1,1,1,-1,-1,1,1,0,1,0,0,0,0,0,0,0,1],[0,1,1,-1,1,1,0,-1,-1,0,0,0,0,0,0,1,0,0],[1,0,0,0,1,1,-1,0,-1,0,0,0,0,0,0,0,1,0],[1,1,0,0,1,-1,0,-1,-1,0,0,1,0,0,0,1,0,0],[1,-1,1,0,-1,0,0,1,0,0,0,0,1,0,1,1,0,1],[1,1,-1,0,0,1,0,0,-1,0,0,0,0,0,0,1,0,0],[-1,0,-1,0,1,1,1,1,-1,0,1,0,0,0,0,0,0,0],[0,-1,1,1,-1,1,1,0,-1,1,0,0,0,0,0,0,1,0],[1,1,0,1,0,-1,-1,-1,1,0,0,1,0,1,0,0,0,0],[-1,0,0,1,1,-1,1,0,0,0,0,1,0,0,0,0,0,0],[1,0,-1,0,1,0,1,0,-1,0,0,0,0,0,1,0,0,0],[0,-1,1,1,1,-1,-1,1,0,1,0,0,0,0,0,0,0,1],[0,0,1,1,-1,1,0,-1,0,0,1,0,0,0,0,0,0,1],[0,1,-1,0,1,0,0,-1,0,0,0,0,0,0,0,0,0,1],[1,-1,-1,-1,0,0,1,0,1,0,0,0,0,1,1,0,1,0],[-1,0,1,1,-1,1,-1,0,0,0,0,0,0,0,0,0,0,1],[-1,0,1,-1,0,1,0,1,0,0,0,0,0,0,0,1,0,1],[0,1,-1,0,-1,1,1,1,-1,1,0,0,0,0,0,0,0,0],[0,0,1,-1,1,0,0,1,-1,1,1,0,0,0,1,1,0,0],[1,0,1,-1,0,1,-1,-1,0,0,0,0,0,0,0,0,0,1],[-1,-1,1,0,-1,1,0,1,0,0,0,0,0,0,0,0,0,1],[0,1,-1,1,1,-1,1,-1,0,0,0,0,0,0,0,0,0,1],[1,1,0,-1,0,1,-1,1,-1,0,0,1,0,1,0,0,0,0],[-1,1,-1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,1],[0,-1,-1,1,-1,1,0,1,1,1,0,0,0,0,0,1,0,0],[1,-1,0,-1,1,0,1,0,-1,0,0,1,0,0,0,0,0,0],[1,-1,0,0,0,1,0,1,-1,0,0,0,1,1,0,1,0,0],[1,1,0,0,0,-1,-1,1,-1,0,0,1,0,0,0,0,0,0],[1,0,0,-1,0,1,0,-1,1,0,1,1,0,1,0,1,0,0],[0,1,-1,0,0,1,1,0,-1,0,0,0,1,1,0,0,0,0],[-1,-1,1,1,-1,0,1,1,0,0,0,0,0,0,0,0,0,1],[0,1,1,1,1,-1,0,-1,-1,0,0,0,0,0,0,1,0,0],[-1,-1,0,0,1,1,1,-1,1,0,0,1,0,0,0,0,0,0],[0,1,1,-1,-1,1,0,-1,0,1,0,0,0,0,0,1,0,1],[1,-1,0,-1,1,-1,1,0,0,0,0,1,0,0,0,0,1,1],[0,1,1,1,-1,0,-1,-1,1,1,0,0,0,0,1,0,0,0],[1,-1,0,1,-1,-1,0,1,1,0,0,0,0,0,0,1,0,0],[-1,0,0,0,-1,1,1,1,0,0,0,0,0,0,0,0,0,1],[1,-1,-1,1,0,0,0,0,1,0,0,0,0,1,1,1,1,0],[1,1,0,0,1,-1,-1,0,0,0,0,1,1,0,0,0,1,1],[-1,1,-1,1,1,-1,1,0,0,0,0,0,0,0,0,0,0,1],[0,1,-1,-1,1,1,0,0,0,0,0,0,0,0,0,0,1,0],[-1,-1,0,0,0,1,1,1,0,0,0,1,0,0,0,0,0,1],[0,-1,-1,-1,1,1,1,0,1,1,0,0,0,0,0,0,0,0],[-1,1,-1,-1,1,0,1,0,1,0,0,0,0,0,0,0,1,0],[0,1,0,0,1,1,-1,-1,0,0,0,0,1,0,0,0,0,1],[0,1,0,1,-1,1,-1,-1,0,1,0,1,0,0,0,0,0,1],[0,-1,0,1,0,0,1,-1,1,1,0,0,0,1,0,0,0,0],[-1,0,1,1,-1,-1,1,0,1,0,0,0,0,0,0,0,1,0],[1,0,0,0,-1,-1,1,0,1,0,0,0,1,0,0,0,0,0],[0,-1,1,0,-1,1,0,1,0,0,0,0,0,0,0,0,0,1],[1,0,1,0,0,-1,-1,0,1,0,1,0,1,1,0,0,1,0],[0,-1,1,1,0,-1,1,-1,0,0,0,0,0,1,0,0,0,0],[-1,0,0,1,-1,1,0,1,0,0,1,1,0,0,0,1,0,1],[0,-1,-1,-1,1,1,1,1,0,1,0,0,0,0,0,0,0,0],[-1,-1,1,0,1,0,0,1,0,0,0,0,0,0,0,1,0,0],[1,0,1,0,-1,1,-1,1,-1,0,1,0,0,0,0,0,0,0],[1,1,0,-1,-1,1,0,0,-1,0,0,1,0,0,0,0,0,0],[1,0,0,1,1,0,-1,-1,0,0,0,0,0,0,0,0,0,1],[1,-1,0,1,-1,0,-1,1,1,0,0,1,0,0,0,0,0,0],[0,1,-1,0,1,0,1,-1,0,1,0,0,1,0,1,0,0,1],[-1,1,1,0,-1,0,1,-1,1,0,0,0,0,0,1,0,0,0],[1,0,1,-1,0,1,-1,0,0,0,1,0,0,1,0,0,1,1],[-1,1,0,-1,1,0,1,0,0,0,0,1,0,0,1,0,1,1],[0,-1,0,1,1,-1,1,-1,1,1,0,1,0,0,0,0,0,0],[0,1,-1,1,0,0,-1,0,1,0,0,0,0,1,0,0,0,0],[-1,0,1,1,-1,0,0,0,1,0,0,0,0,0,1,0,0,0],[1,0,-1,1,1,0,0,0,-1,0,0,0,0,0,1,0,0,0],[0,0,0,1,0,-1,1,-1,1,1,0,0,0,0,0,0,0,0],[-1,1,1,1,1,0,-1,-1,0,0,0,0,0,0,0,0,0,1],[1,-1,1,1,0,0,-1,-1,1,0,0,0,0,1,0,0,0,0],[0,0,1,-1,1,0,-1,0,1,1,0,0,0,0,0,0,0,0],[-1,-1,0,0,1,1,0,1,0,0,0,1,1,0,0,0,0,0],[1,0,1,1,0,-1,0,0,-1,0,1,0,0,1,0,1,1,0],[0,-1,0,1,1,0,1,-1,0,1,0,1,0,0,1,0,0,1],[-1,0,0,0,1,1,1,0,-1,0,1,1,1,0,0,0,1,0],[1,-1,0,-1,1,1,-1,1,0,0,0,0,0,0,0,0,0,1],[0,0,1,-1,1,0,-1,0,1,1,0,0,0,0,0,0,0,0],[0,0,1,-1,1,1,0,-1,0,1,1,0,0,0,0,1,0,1],[1,-1,0,1,0,-1,0,1,0,0,0,0,0,0,0,1,0,0],[1,-1,0,1,0,-1,-1,1,0,0,0,1,0,0,0,0,0,0],[1,1,-1,1,-1,1,0,0,-1,0,0,0,0,0,0,1,0,0],[-1,0,-1,0,1,1,1,0,0,0,1,0,0,0,0,0,0,0],[0,-1,0,1,-1,0,0,1,0,1,0,1,0,0,0,0,0,0],[1,1,0,0,1,-1,0,0,-1,0,0,1,0,0,0,0,0,0],[0,1,-1,0,-1,1,1,-1,1,1,0,0,1,0,0,0,0,0],[-1,0,1,0,0,-1,1,1,-1,0,0,0,0,1,0,0,0,0],[1,0,-1,0,-1,0,1,0,1,0,1,0,1,0,1,0,1,0],[1,0,-1,1,0,-1,0,0,1,0,1,0,0,1,0,1,1,0],[0,-1,1,0,0,0,1,1,-1,0,0,0,0,1,0,0,0,0],[0,1,-1,1,1,-1,-1,0,1,1,0,0,0,0,0,0,1,0],[0,0,1,1,-1,1,-1,0,0,0,0,0,0,0,0,0,0,1],[-1,1,1,1,0,0,1,-1,-1,0,0,0,0,1,0,0,0,0],[1,0,-1,-1,1,-1,1,0,0,0,0,0,0,0,0,0,0,1],[0,-1,1,1,0,0,0,-1,1,0,0,0,0,1,0,0,0,0],[0,0,0,1,1,-1,-1,0,1,1,0,0,0,0,0,0,0,0],[0,0,-1,1,0,0,-1,1,1,1,1,0,0,1,0,0,0,0],[1,-1,-1,0,0,1,0,0,1,0,0,0,0,1,0,0,0,0],[-1,0,1,1,-1,0,1,0,0,0,1,0,0,0,0,0,1,1],[-1,0,1,1,0,-1,0,1,0,0,0,0,0,1,0,1,0,0],[0,0,1,1,0,1,-1,0,-1,0,0,0,0,1,0,0,1,0],[1,-1,1,0,1,1,-1,-1,0,0,0,0,0,0,0,0,0,1],[0,-1,-1,-1,1,1,0,1,1,1,0,0,0,0,0,0,0,0],[0,1,1,-1,0,-1,0,0,1,1,0,0,0,1,0,0,0,0],[1,0,1,-1,0,0,-1,-1,1,0,1,0,0,1,1,0,0,0],[-1,-1,1,0,1,0,-1,0,1,0,0,0,1,0,0,0,0,0],[0,0,0,0,1,1,-1,-1,1,1,1,1,1,0,0,0,0,0],[-1,1,0,1,-1,0,1,-1,1,0,0,1,0,0,1,0,0,0],[1,-1,0,0,1,-1,0,1,0,0,0,0,0,0,0,0,0,1],[0,-1,1,-1,1,1,-1,1,0,1,0,0,0,0,0,0,0,0],[0,1,0,1,0,-1,1,0,-1,1,0,1,0,0,0,0,0,0],[0,-1,1,1,1,-1,-1,1,0,1,0,0,0,0,0,0,0,1],[1,-1,-1,0,0,1,1,-1,1,0,0,0,0,1,0,0,0,0],[1,0,-1,0,0,1,0,-1,1,0,0,0,0,1,0,0,0,0],[1,0,-1,0,0,1,0,1,-1,0,0,0,1,1,0,0,0,0],[0,1,-1,-1,0,1,-1,1,1,1,0,0,0,1,0,0,0,0],[0,0,0,-1,1,1,1,-1,0,0,0,1,0,0,0,0,0,0],[1,-1,0,0,0,1,-1,1,-1,0,0,1,1,1,0,0,0,0],[1,-1,0,-1,0,0,0,1,1,0,0,1,0,1,1,1,0,0],[0,0,-1,1,0,1,-1,0,1,0,0,0,0,1,0,0,0,0],[1,1,-1,1,1,-1,-1,0,0,0,0,0,0,0,0,0,0,1],[1,-1,0,-1,1,1,0,0,-1,0,0,1,0,0,0,1,1,0],[1,-1,0,-1,-1,0,1,1,0,0,0,0,0,0,1,0,0,0],[0,1,1,0,-1,-1,0,1,0,1,0,0,1,0,0,0,0,0],[0,1,1,-1,0,1,0,0,-1,1,0,0,0,0,0,0,0,0],[1,1,0,0,-1,1,1,-1,-1,0,0,1,1,0,0,0,0,0],[0,0,1,-1,1,-1,0,1,0,1,1,0,0,0,0,1,0,1],[1,0,-1,-1,1,1,1,-1,0,0,0,0,0,0,0,0,0,1],[0,0,1,1,-1,0,-1,0,1,0,0,0,0,0,1,0,0,0],[0,1,0,1,0,-1,-1,0,1,1,0,0,0,1,0,0,0,0],[1,1,0,-1,1,-1,0,0,0,0,0,1,0,0,0,1,1,1],[0,0,-1,1,0,-1,1,0,1,1,1,0,0,1,0,0,1,0],[1,1,0,1,-1,1,-1,-1,0,0,0,1,0,0,0,0,0,1],[0,0,0,0,-1,1,-1,1,1,0,0,1,0,0,0,0,0,0],[-1,0,1,1,1,0,0,-1,0,0,1,0,0,0,1,1,0,1],[1,0,0,-1,1,0,1,-1,0,0,1,1,0,0,1,0,0,1],[1,0,1,0,-1,-1,-1,0,1,0,1,0,1,0,0,0,0,0],[-1,1,-1,-1,0,0,0,1,1,0,0,0,0,0,0,1,0,0],[-1,0,1,1,-1,-1,1,0,1,0,0,0,0,0,0,0,1,0],[1,0,1,1,0,-1,0,0,-1,0,1,0,0,1,0,1,1,0],[0,-1,1,0,1,-1,0,1,0,0,0,0,0,0,0,1,0,0],[1,0,0,1,-1,0,0,-1,1,0,1,0,0,0,0,1,0,0],[-1,1,0,-1,0,1,1,-1,1,0,0,1,0,0,0,0,0,0],[0,1,1,-1,0,-1,1,1,-1,0,0,0,0,1,0,0,0,0],[-1,0,1,1,0,1,0,-1,0,0,1,0,0,1,0,1,0,1],[0,0,0,-1,1,1,0,1,-1,0,1,0,0,0,0,0,0,0],[-1,1,-1,0,0,1,0,1,0,0,0,0,0,1,0,0,0,0],[1,-1,1,-1,0,-1,0,0,1,0,0,0,0,1,0,0,0,0],[0,-1,1,1,-1,1,-1,1,0,0,0,0,0,0,0,0,0,1],[-1,-1,0,-1,1,1,1,0,0,0,0,1,0,0,0,0,0,0],[1,1,-1,-1,0,-1,0,0,1,0,0,0,0,1,0,0,0,0],[-1,0,0,-1,0,1,1,1,0,0,1,1,0,1,0,0,0,1],[0,0,1,0,0,-1,1,-1,1,0,0,0,0,1,0,0,0,0],[1,0,0,0,0,1,-1,-1,1,0,1,1,1,1,0,0,0,0],[-1,1,-1,1,0,-1,1,0,1,0,0,0,0,0,0,0,1,0],[1,1,0,-1,-1,1,1,0,-1,0,0,1,0,0,0,0,0,0],[-1,1,0,-1,1,0,1,0,-1,0,0,1,0,0,1,0,1,0],[0,0,0,1,-1,1,-1,0,1,0,0,1,0,0,0,0,0,0],[0,0,0,-1,1,-1,1,0,1,1,1,1,0,0,0,0,1,0],[1,0,1,1,0,-1,-1,1,-1,0,1,0,0,0,0,0,0,0],[0,-1,1,1,-1,0,0,1,0,0,0,0,0,0,0,1,0,1],[-1,0,1,0,1,1,-1,0,0,0,0,0,1,0,0,0,0,0],[-1,1,0,1,1,-1,1,-1,0,0,0,1,0,0,0,0,0,0],[-1,1,-1,1,0,1,1,-1,0,0,0,0,0,1,0,0,0,0],[-1,1,1,-1,0,0,0,1,-1,0,0,0,0,1,0,1,0,0],[0,0,-1,1,-1,0,1,0,1,1,1,0,0,0,1,0,1,0],[1,0,1,-1,-1,1,1,0,-1,0,1,0,0,0,0,0,0,0],[0,1,1,1,-1,-1,1,0,-1,1,0,0,0,0,0,0,0,0],[0,-1,1,1,0,0,-1,0,1,0,0,0,0,0,1,0,0,0],[-1,1,1,0,-1,1,-1,1,0,0,0,0,1,0,0,0,0,1],[-1,1,-1,1,0,1,0,-1,1,0,0,0,0,1,0,0,0,0],[1,1,-1,0,0,0,-1,1,0,0,0,0,0,1,0,0,0,0],[1,-1,-1,1,1,-1,0,1,0,0,0,0,0,0,0,0,0,1],[-1,0,0,1,1,-1,0,0,1,0,1,1,0,0,0,1,1,0],[-1,1,1,1,0,-1,0,-1,1,0,0,0,0,1,0,1,0,0],[0,-1,1,1,1,0,-1,-1,1,1,0,0,0,0,1,0,0,0],[1,1,-1,-1,1,0,0,0,-1,0,0,0,0,0,1,0,1,0],[1,0,-1,1,-1,1,0,1,-1,0,0,0,0,0,0,1,0,0],[0,1,0,0,-1,1,1,0,-1,1,0,0,0,0,0,0,0,0],[1,0,0,0,0,-1,-1,1,1,0,0,0,0,1,0,0,0,0],[-1,-1,1,1,0,-1,0,1,1,0,0,0,0,0,0,1,0,0],[0,-1,-1,1,1,0,1,0,-1,1,0,0,0,0,1,0,0,0],[0,-1,0,1,-1,0,-1,1,1,0,0,1,0,0,0,0,0,0],[1,0,-1,-1,0,1,0,0,1,0,0,0,0,1,0,0,0,0],[-1,-1,0,0,-1,1,0,1,1,0,0,1,0,0,0,0,0,0],[0,1,1,-1,0,0,1,-1,0,1,0,0,0,1,1,0,0,1],[-1,1,0,1,0,1,-1,1,-1,0,0,0,0,1,0,0,0,0],[1,0,-1,0,1,1,0,-1,0,0,1,0,1,0,0,1,0,1],[1,-1,1,-1,0,1,0,1,-1,0,0,0,0,1,0,1,0,0],[0,0,1,1,1,0,0,-1,-1,0,0,0,0,0,0,1,0,0],[1,0,-1,0,0,1,1,-1,0,0,0,0,1,0,0,0,0,0],[-1,1,-1,0,-1,1,1,0,1,0,0,0,0,0,0,0,1,0],[0,-1,1,0,0,1,1,0,-1,0,0,0,0,1,0,0,0,0],[0,0,0,-1,1,1,-1,1,0,1,0,0,0,0,0,0,0,0],[1,1,-1,1,1,0,0,-1,-1,0,0,0,0,0,1,1,0,0],[0,0,1,-1,-1,0,1,0,1,0,0,0,0,0,1,0,0,0],[1,-1,0,0,-1,0,1,1,0,0,0,1,1,0,1,0,0,1],[0,0,1,1,-1,0,-1,1,0,1,1,0,0,0,1,0,0,1],[-1,-1,1,1,-1,0,0,1,1,0,0,0,0,0,1,1,0,0],[0,0,-1,1,-1,1,0,0,1,1,1,0,0,0,0,1,1,0],[0,0,1,-1,1,1,-1,1,-1,1,0,0,0,0,0,0,0,0],[-1,1,1,1,1,-1,0,-1,0,0,0,0,0,0,0,1,0,0],[0,1,1,-1,0,-1,1,0,0,0,0,0,0,1,0,0,0,0],[-1,1,0,-1,1,1,1,0,-1,0,0,1,0,0,0,0,1,0],[0,0,0,-1,1,0,1,-1,1,1,1,1,0,0,1,0,0,0],[0,-1,1,1,-1,1,0,0,0,0,0,0,0,0,0,0,1,1],[1,-1,-1,1,1,0,0,0,0,0,0,0,0,0,1,1,1,1],[-1,-1,1,1,0,-1,0,1,0,0,0,0,0,1,0,1,0,1],[1,-1,1,1,0,-1,0,-1,1,0,0,0,0,1,0,0,0,0],[-1,-1,0,0,0,1,-1,1,1,0,0,1,1,0,0,0,0,0],[-1,0,1,1,1,-1,0,0,0,0,0,0,0,0,0,1,0,0],[1,0,1,-1,1,1,-1,0,-1,0,0,0,0,0,0,0,1,0],[-1,-1,0,1,0,0,1,1,0,0,0,1,0,0,0,0,0,1],[0,1,1,-1,-1,1,0,1,-1,1,0,0,0,0,0,0,0,0],[1,1,-1,1,0,1,-1,-1,0,0,0,0,0,1,0,0,0,1]]},function(t,e,n){var r=n(45)("wks"),i=n(44),s=n(12).Symbol,a="function"==typeof s;(t.exports=function(t){return r[t]||(r[t]=a&&s[t]||(a?s:i)("Symbol."+t))}).store=r},function(t,e,n){var r=n(58);t.exports=function(t){return Object(r(t))}},function(t,e,n){var r=n(71),i=Math.max,s=Math.min;t.exports=function(t,e){return(t=r(t))<0?i(t+e,0):s(t,e)}},function(t,e,n){var r=n(71),i=Math.min;t.exports=function(t){return t>0?i(r(t),9007199254740991):0}},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var r=function(){function t(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}return function(e,n,r){return n&&t(e.prototype,n),r&&t(e,r),e}}(),i=d(n(192)),s=d(n(92)),a=d(n(193)),o=d(n(194)),u=d(n(195)),h=d(n(197)),l=d(n(141)),c=d(n(72)),p=d(n(198)),f=n(199);function d(t){return t&&t.__esModule?t:{default:t}}var g=function(){function t(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),Object.assign(this,this.constructor.defaults,e),this.trainOpts={},this.updateTrainingOptions(Object.assign({},this.constructor.trainDefaults,e)),this.sizes=null,this.outputLayer=null,this.biases=null,this.weights=null,this.outputs=null,this.deltas=null,this.changes=null,this.errors=null,this.errorCheckInterval=1,this.constructor.prototype.hasOwnProperty("runInput")||(this.runInput=null),this.constructor.prototype.hasOwnProperty("calculateDeltas")||(this.calculateDeltas=null),this.inputLookup=null,this.inputLookupLength=null,this.outputLookup=null,this.outputLookupLength=null}return r(t,null,[{key:"trainDefaults",get:function(){return{iterations:2e4,errorThresh:.005,log:!1,logPeriod:10,learningRate:.3,momentum:.1,callback:null,callbackPeriod:10,timeout:1/0,praxis:null,beta1:.9,beta2:.999,epsilon:1e-8}}},{key:"defaults",get:function(){return{leakyReluAlpha:.01,binaryThresh:.5,hiddenLayers:null,activation:"sigmoid"}}}]),r(t,[{key:"initialize",value:function(){if(!this.sizes)throw new Error("Sizes must be set before initializing");this.outputLayer=this.sizes.length-1,this.biases=[],this.weights=[],this.outputs=[],this.deltas=[],this.changes=[],this.errors=[];for(var t=0;t<=this.outputLayer;t++){var e=this.sizes[t];if(this.deltas[t]=(0,c.default)(e),this.errors[t]=(0,c.default)(e),this.outputs[t]=(0,c.default)(e),t>0){this.biases[t]=(0,u.default)(e),this.weights[t]=new Array(e),this.changes[t]=new Array(e);for(var n=0;n<e;n++){var r=this.sizes[t-1];this.weights[t][n]=(0,u.default)(r),this.changes[t][n]=(0,c.default)(r)}}}this.setActivation(),"adam"===this.trainOpts.praxis&&this._setupAdam()}},{key:"setActivation",value:function(t){switch(this.activation=t||this.activation,this.activation){case"sigmoid":this.runInput=this.runInput||this._runInputSigmoid,this.calculateDeltas=this.calculateDeltas||this._calculateDeltasSigmoid;break;case"relu":this.runInput=this.runInput||this._runInputRelu,this.calculateDeltas=this.calculateDeltas||this._calculateDeltasRelu;break;case"leaky-relu":this.runInput=this.runInput||this._runInputLeakyRelu,this.calculateDeltas=this.calculateDeltas||this._calculateDeltasLeakyRelu;break;case"tanh":this.runInput=this.runInput||this._runInputTanh,this.calculateDeltas=this.calculateDeltas||this._calculateDeltasTanh;break;default:throw new Error("unknown activation "+this.activation+", The activation should be one of ['sigmoid', 'relu', 'leaky-relu', 'tanh']")}}},{key:"run",value:function(t){if(!this.isRunnable)return null;this.inputLookup&&(t=s.default.toArray(this.inputLookup,t,this.inputLookupLength));var e=this.runInput(t).slice(0);return this.outputLookup&&(e=s.default.toObject(this.outputLookup,e)),e}},{key:"_runInputSigmoid",value:function(t){this.outputs[0]=t;for(var e=null,n=1;n<=this.outputLayer;n++){for(var r=0;r<this.sizes[n];r++){for(var i=this.weights[n][r],s=this.biases[n][r],a=0;a<i.length;a++)s+=i[a]*t[a];this.outputs[n][r]=1/(1+Math.exp(-s))}e=t=this.outputs[n]}return e}},{key:"_runInputRelu",value:function(t){this.outputs[0]=t;for(var e=null,n=1;n<=this.outputLayer;n++){for(var r=0;r<this.sizes[n];r++){for(var i=this.weights[n][r],s=this.biases[n][r],a=0;a<i.length;a++)s+=i[a]*t[a];this.outputs[n][r]=s<0?0:s}e=t=this.outputs[n]}return e}},{key:"_runInputLeakyRelu",value:function(t){this.outputs[0]=t;for(var e=this.leakyReluAlpha,n=null,r=1;r<=this.outputLayer;r++){for(var i=0;i<this.sizes[r];i++){for(var s=this.weights[r][i],a=this.biases[r][i],o=0;o<s.length;o++)a+=s[o]*t[o];this.outputs[r][i]=a<0?0:e*a}n=t=this.outputs[r]}return n}},{key:"_runInputTanh",value:function(t){this.outputs[0]=t;for(var e=null,n=1;n<=this.outputLayer;n++){for(var r=0;r<this.sizes[n];r++){for(var i=this.weights[n][r],s=this.biases[n][r],a=0;a<i.length;a++)s+=i[a]*t[a];this.outputs[n][r]=Math.tanh(s)}e=t=this.outputs[n]}return e}},{key:"verifyIsInitialized",value:function(t){var e=this;this.sizes||(this.sizes=[],this.sizes.push(t[0].input.length),this.hiddenLayers?this.hiddenLayers.forEach(function(t){e.sizes.push(t)}):this.sizes.push(Math.max(3,Math.floor(t[0].input.length/2))),this.sizes.push(t[0].output.length),this.initialize())}},{key:"updateTrainingOptions",value:function(t){var e=this.constructor.trainDefaults;for(var n in e)e.hasOwnProperty(n)&&(this.trainOpts[n]=t.hasOwnProperty(n)?t[n]:e[n]);this.validateTrainingOptions(this.trainOpts),this.setLogMethod(t.log||this.trainOpts.log),this.activation=t.activation||this.activation}},{key:"validateTrainingOptions",value:function(t){var e={iterations:function(t){return"number"==typeof t&&t>0},errorThresh:function(t){return"number"==typeof t&&t>0&&t<1},log:function(t){return"function"==typeof t||"boolean"==typeof t},logPeriod:function(t){return"number"==typeof t&&t>0},learningRate:function(t){return"number"==typeof t&&t>0&&t<1},momentum:function(t){return"number"==typeof t&&t>0&&t<1},callback:function(t){return"function"==typeof t||null===t},callbackPeriod:function(t){return"number"==typeof t&&t>0},timeout:function(t){return"number"==typeof t&&t>0}};for(var n in e)if(e.hasOwnProperty(n)&&t.hasOwnProperty(n)&&!e[n](t[n]))throw new Error("["+n+", "+t[n]+"] is out of normal training range, your network will probably not train.")}},{key:"getTrainOptsJSON",value:function(){var t=this;return Object.keys(this.constructor.trainDefaults).reduce(function(e,n){return"timeout"===n&&t.trainOpts[n]===1/0?e:"callback"===n?e:(t.trainOpts[n]&&(e[n]=t.trainOpts[n]),"log"===n&&(e.log="function"==typeof e.log),e)},{})}},{key:"setLogMethod",value:function(t){this.trainOpts.log="function"==typeof t?t:!!t&&console.log}},{key:"calculateTrainingError",value:function(t){for(var e=0,n=0;n<t.length;++n)e+=this.trainPattern(t[n],!0);return e/t.length}},{key:"trainPatterns",value:function(t){for(var e=0;e<t.length;++e)this.trainPattern(t[e])}},{key:"trainingTick",value:function(t,e,n){return!(e.iterations>=this.trainOpts.iterations||e.error<=this.trainOpts.errorThresh||Date.now()>=n)&&(e.iterations++,this.trainOpts.log&&e.iterations%this.trainOpts.logPeriod==0?(e.error=this.calculateTrainingError(t),this.trainOpts.log("iterations: "+e.iterations+", training error: "+e.error)):e.iterations%this.errorCheckInterval==0?e.error=this.calculateTrainingError(t):this.trainPatterns(t),this.trainOpts.callback&&e.iterations%this.trainOpts.callbackPeriod==0&&this.trainOpts.callback({iterations:e.iterations,error:e.error}),!0)}},{key:"prepTraining",value:function(t,e){this.updateTrainingOptions(e),t=this.formatData(t);var n=Date.now()+this.trainOpts.timeout;return this.verifyIsInitialized(t),{data:t,status:{error:1,iterations:0},endTime:n}}},{key:"train",value:function(t){var e,n,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},i=this.prepTraining(t,r);for(t=i.data,e=i.status,n=i.endTime;this.trainingTick(t,e,n););return e}},{key:"trainAsync",value:function(t){var e,n,r=this,s=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},a=this.prepTraining(t,s);return t=a.data,e=a.status,n=a.endTime,new Promise(function(s,a){try{var o=new i.default(new Array(r.trainOpts.iterations),{delay:!0,each:function(){return r.trainingTick(t,e,n)||o.stop()},done:function(){return s(e)}});o.tick()}catch(t){a({trainError:t,status:e})}})}},{key:"trainPattern",value:function(t,e){return this.runInput(t.input),this.calculateDeltas(t.output),this.adjustWeights(),e?(0,o.default)(this.errors[this.outputLayer]):null}},{key:"_calculateDeltasSigmoid",value:function(t){for(var e=this.outputLayer;e>=0;e--)for(var n=0;n<this.sizes[e];n++){var r=this.outputs[e][n],i=0;if(e===this.outputLayer)i=t[n]-r;else for(var s=this.deltas[e+1],a=0;a<s.length;a++)i+=s[a]*this.weights[e+1][a][n];this.errors[e][n]=i,this.deltas[e][n]=i*r*(1-r)}}},{key:"_calculateDeltasRelu",value:function(t){for(var e=this.outputLayer;e>=0;e--)for(var n=0;n<this.sizes[e];n++){var r=this.outputs[e][n],i=0;if(e===this.outputLayer)i=t[n]-r;else for(var s=this.deltas[e+1],a=0;a<s.length;a++)i+=s[a]*this.weights[e+1][a][n];this.errors[e][n]=i,this.deltas[e][n]=r>0?i:0}}},{key:"_calculateDeltasLeakyRelu",value:function(t){for(var e=this.leakyReluAlpha,n=this.outputLayer;n>=0;n--)for(var r=0;r<this.sizes[n];r++){var i=this.outputs[n][r],s=0;if(n===this.outputLayer)s=t[r]-i;else for(var a=this.deltas[n+1],o=0;o<a.length;o++)s+=a[o]*this.weights[n+1][o][r];this.errors[n][r]=s,this.deltas[n][r]=i>0?s:e*s}}},{key:"_calculateDeltasTanh",value:function(t){for(var e=this.outputLayer;e>=0;e--)for(var n=0;n<this.sizes[e];n++){var r=this.outputs[e][n],i=0;if(e===this.outputLayer)i=t[n]-r;else for(var s=this.deltas[e+1],a=0;a<s.length;a++)i+=s[a]*this.weights[e+1][a][n];this.errors[e][n]=i,this.deltas[e][n]=(1-r*r)*i}}},{key:"adjustWeights",value:function(){for(var t=1;t<=this.outputLayer;t++)for(var e=this.outputs[t-1],n=0;n<this.sizes[t];n++){for(var r=this.deltas[t][n],i=0;i<e.length;i++){var s=this.changes[t][n][i];s=this.trainOpts.learningRate*r*e[i]+this.trainOpts.momentum*s,this.changes[t][n][i]=s,this.weights[t][n][i]+=s}this.biases[t][n]+=this.trainOpts.learningRate*r}}},{key:"_setupAdam",value:function(){this.biasChangesLow=[],this.biasChangesHigh=[],this.changesLow=[],this.changesHigh=[],this.iterations=0;for(var t=0;t<=this.outputLayer;t++){var e=this.sizes[t];if(t>0){this.biasChangesLow[t]=(0,c.default)(e),this.biasChangesHigh[t]=(0,c.default)(e),this.changesLow[t]=new Array(e),this.changesHigh[t]=new Array(e);for(var n=0;n<e;n++){var r=this.sizes[t-1];this.changesLow[t][n]=(0,c.default)(r),this.changesHigh[t][n]=(0,c.default)(r)}}}this.adjustWeights=this._adjustWeightsAdam}},{key:"_adjustWeightsAdam",value:function(){var t=this.trainOpts;this.iterations++;for(var e=1;e<=this.outputLayer;e++)for(var n=this.outputs[e-1],r=0;r<this.sizes[e];r++){for(var i=this.deltas[e][r],s=0;s<n.length;s++){var a=i*n[s],o=this.changesLow[e][r][s]*t.beta1+(1-t.beta1)*a,u=this.changesHigh[e][r][s]*t.beta2+(1-t.beta2)*a*a,h=o/(1-Math.pow(t.beta1,this.iterations)),l=u/(1-Math.pow(t.beta2,this.iterations));this.changesLow[e][r][s]=o,this.changesHigh[e][r][s]=u,this.weights[e][r][s]+=this.trainOpts.learningRate*h/(Math.sqrt(l)+t.epsilon)}var c=this.deltas[e][r],p=this.biasChangesLow[e][r]*t.beta1+(1-t.beta1)*c,f=this.biasChangesHigh[e][r]*t.beta2+(1-t.beta2)*c*c,d=this.biasChangesLow[e][r]/(1-Math.pow(t.beta1,this.iterations)),g=this.biasChangesHigh[e][r]/(1-Math.pow(t.beta2,this.iterations));this.biasChangesLow[e][r]=p,this.biasChangesHigh[e][r]=f,this.biases[e][r]+=t.learningRate*d/(Math.sqrt(g)+t.epsilon)}}},{key:"formatData",value:function(t){if(Array.isArray(t)||(t=[t]),!Array.isArray(t[0].input))if(this.inputLookup)this.inputLookupLength=Object.keys(this.inputLookup).length;else{var e=new p.default(t,"input");this.inputLookup=e.table,this.inputLookupLength=e.length}if(!Array.isArray(t[0].output))if(this.outputLookup)this.outputLookupLength=Object.keys(this.outputLookup).length;else{var n=new p.default(t,"output");this.outputLookup=n.table,this.outputLookupLength=n.length}if(void 0===this._formatInput&&(this._formatInput=v(t[0].input,this.inputLookup),this._formatOutput=v(t[0].output,this.outputLookup)),this._formatInput&&this._formatOutput){for(var r=[],i=0;i<t.length;i++)r.push({input:this._formatInput(t[i].input),output:this._formatOutput(t[i].output)});return r}if(this._formatInput){for(var s=[],a=0;a<t.length;a++)s.push({input:this._formatInput(t[a].input),output:t[a].output});return s}if(this._formatOutput){for(var o=[],u=0;u<t.length;u++)o.push({input:t[u].input,output:this._formatOutput(t[u].output)});return o}return t}},{key:"addFormat",value:function(t){this.inputLookup=s.default.addKeys(t.input,this.inputLookup),this.inputLookup&&(this.inputLookupLength=Object.keys(this.inputLookup).length),this.outputLookup=s.default.addKeys(t.output,this.outputLookup),this.outputLookup&&(this.outputLookupLength=Object.keys(this.outputLookup).length)}},{key:"test",value:function(t){var e=this,n=1===(t=this.formatData(t))[0].output.length,r=[],i=0;if(n){for(var s=0,u=0,h=0,l=0,c=function(n){var a=e.runInput(t[n].input),c=t[n].output,p=a[0]>e.binaryThresh?1:0,f=c[0];if(p!==f){var d=t[n];r.push({input:d.input,output:d.output,actual:p,expected:f})}0===p&&0===f?l++:1===p&&1===f?h++:0===p&&1===f?u++:1===p&&0===f&&s++,i+=(0,o.default)(a.map(function(t,e){return c[e]-t}))},p=0;p<t.length;p++)c(p);return{error:i/t.length,misclasses:r,total:t.length,trueNeg:l,truePos:h,falseNeg:u,falsePos:s,precision:h>0?h/(h+s):0,recall:h>0?h/(h+u):0,accuracy:(l+h)/t.length}}var f=function(n){var s=e.runInput(t[n].input),u=t[n].output,h=s.indexOf((0,a.default)(s)),l=u.indexOf((0,a.default)(u));if(h!==l){var c=t[n];r.push({input:c.input,output:c.output,actual:h,expected:l})}i+=(0,o.default)(s.map(function(t,e){return u[e]-t}))};for(p=0;p<t.length;p++)f(p);return{error:i/t.length,misclasses:r,total:t.length}}},{key:"toJSON",value:function(){for(var t=[],e=0;e<=this.outputLayer;e++){t[e]={};var n=void 0;n=0===e&&this.inputLookup?Object.keys(this.inputLookup):this.outputLookup&&e===this.outputLayer?Object.keys(this.outputLookup):(0,h.default)(0,this.sizes[e]);for(var r=0;r<n.length;r++){var i=n[r];if(t[e][i]={},e>0)for(var s in t[e][i].bias=this.biases[e][r],t[e][i].weights={},t[e-1]){var a=s;1===e&&this.inputLookup&&(a=this.inputLookup[s]),t[e][i].weights[s]=this.weights[e][r][a]}}}return{sizes:this.sizes.slice(0),layers:t,outputLookup:null!==this.outputLookup,inputLookup:null!==this.inputLookup,activation:this.activation,trainOpts:this.getTrainOptsJSON()}}},{key:"fromJSON",value:function(t){Object.assign(this,this.constructor.defaults,t),this.sizes=t.sizes,this.initialize();for(var e=0;e<=this.outputLayer;e++){var n=t.layers[e];if(0!==e||n[0]&&!t.inputLookup?e!==this.outputLayer||n[0]&&!t.outputLookup||(this.outputLookup=s.default.toHash(n)):(this.inputLookup=s.default.toHash(n),this.inputLookupLength=Object.keys(this.inputLookup).length),e>0){var r=Object.keys(n);for(var i in this.sizes[e]=r.length,r){var a=r[i];this.biases[e][i]=n[a].bias,this.weights[e][i]=(0,l.default)(n[a].weights)}}}return t.hasOwnProperty("trainOpts")&&this.updateTrainingOptions(t.trainOpts),this}},{key:"toFunction",value:function(){var t=this.activation,e=this.leakyReluAlpha,n=!1;function r(i,s,a){if(0===s)return"string"==typeof a?"input['"+a+"']":"input["+a+"]";var o=i[s][a],u=["(",o.bias];for(var h in o.weights)o.weights[h]<0?u.push(o.weights[h]+"*"+r(i,s-1,h)):u.push("+"+o.weights[h]+"*"+r(i,s-1,h));switch(u.push(")"),t){case"sigmoid":return"1/(1+1/Math.exp("+u.join("")+"))";case"relu":return n=!0,"((v="+u.join("")+")<0?0:v)";case"leaky-relu":return n=!0,"((v="+u.join("")+")<0?0:"+e+"*v)";case"tanh":return"Math.tanh("+u.join("")+")";default:throw new Error("unknown activation type "+t)}}var i=this.toJSON().layers,s=[],a=void 0;for(var o in i[i.length-1])s.push(r(i,i.length-1,o));return a=this.outputLookup?"{"+Object.keys(this.outputLookup).map(function(t,e){return"'"+t+"':"+s[e]})+"}":"["+s.join(",")+"]",new Function("input",(n?"var v;":"")+"return "+a+";")}},{key:"isRunnable",get:function(){var t=this;if(!this.runInput)return console.error("Activation function has not been initialized, did you run train()?"),!1;var e=["sizes","outputLayer","biases","weights","outputs","deltas","changes","errors"].filter(function(e){return null===t[e]});return!(e.length>0)||(console.error("Some settings have not been initialized correctly, did you run train()? Found issues with: "+e.join(", ")),!1)}}]),t}();function v(t,e){if(t.buffer instanceof ArrayBuffer)return null;if(Array.isArray(t))return f.arrayToFloat32Array;var n=Object.keys(e).length;return function(t){var r=new Float32Array(n);for(var i in e)r[e[i]]=t[i]||0;return r}}e.default=g},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default=function(t){if(Array.isArray(t))return t;var e=Object.keys(t),n=new Float32Array(e.length);for(var r in e)n[r]=t[e[r]];return n}},function(t,e,n){"use strict";var r=function(){function t(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}return function(e,n,r){return n&&t(e.prototype,n),r&&t(e,r),e}}();var i=n(13),s=n(143);t.exports=function(){function t(e,n){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),n=n||{},this.kernel=n.kernel,this.canvas=n.canvas,this.webGl=n.webGl,this.fn=null,this.functionBuilder=e,this.fnString=null,this.endianness=i.systemEndianness()}return r(t,[{key:"textureToArray",value:function(t){return this.createKernel(function(t){return t[this.thread.z][this.thread.y][this.thread.x]})(t)}},{key:"deleteTexture",value:function(t){this.webGl.deleteTexture(t.texture)}},{key:"buildPromiseKernel",value:function(){throw new Error("not yet implemented")}},{key:"getMode",value:function(){throw new Error('"mode" not implemented on BaseRunner')}},{key:"buildKernel",value:function(t,e){e=Object.assign({},e||{});var n=t.toString();return e.functionBuilder||(e.functionBuilder=this.functionBuilder),e.canvas||(e.canvas=this.canvas),e.webGl||(e.webGl=this.webgl),s(new this.Kernel(n,e))}}]),t}()},function(t,e,n){"use strict";var r=n(13);t.exports=function(t){var e=function(){return t.run.apply(t,arguments)};return r.allPropertiesOf(t).forEach(function(n){"_"===n[0]&&"_"===n[1]||("function"==typeof t[n]?e[n]="add"===n.substring(0,3)||"set"===n.substring(0,3)?function(){return t[n].apply(t,arguments),e}:t[n].bind(t):(e.__defineGetter__(n,function(){return t[n]}),e.__defineSetter__(n,function(e){t[n]=e})))}),e.kernel=t,e}},function(t,e,n){"use strict";var r=function(){function t(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}return function(e,n,r){return n&&t(e.prototype,n),r&&t(e,r),e}}();t.exports=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.nodeMap={},this.nativeFunctions={},this.gpu=e,this.rootKernel=null,this.Node=null}return r(t,[{key:"addNativeFunction",value:function(t,e){this.nativeFunctions[t]=e}},{key:"addFunction",value:function(t,e,n){this.addFunctionNode(new this.Node(t,e,n).setBuilder(this))}},{key:"addFunctions",value:function(t,e){if(t)if(Array.isArray(t))for(var n=0;n<t.length;n++)this.addFunction(null,t[n],e);else for(var r in t)this.addFunction(r,t[r],e)}},{key:"addNativeFunctions",value:function(t){for(var e in t)t.hasOwnProperty(e)&&this.addNativeFunction(e,t[e])}},{key:"addFunctionNode",value:function(t){this.nodeMap[t.functionName]=t,t.isRootKernel&&(this.rootKernel=t)}},{key:"traceFunctionCalls",value:function(t,e,n){t=t||"kernel",e=e||[];var r=this.nodeMap[t];if(r){var i=e.indexOf(t);if(-1===i){e.push(t),n&&(r.parent=n),r.getFunctionString();for(var s=0;s<r.calledFunctions.length;++s)this.traceFunctionCalls(r.calledFunctions[s],e,r)}else{var a=e.splice(i,1)[0];e.push(a)}}return this.nativeFunctions[t]&&(e.indexOf(t)>=0||e.push(t)),e}},{key:"addKernel",value:function(t,e){var n=new this.Node("kernel",t,e);return n.setBuilder(this),n.isRootKernel=!0,this.addFunctionNode(n),n}},{key:"addSubKernel",value:function(t,e){var n=new this.Node(null,t,e);return n.setBuilder(this),n.isSubKernel=!0,this.addFunctionNode(n),n}},{key:"getPrototypeString",value:function(t){return this.getPrototypes(t).join("\n")}},{key:"getPrototypes",value:function(t){return this.rootKernel.generate(),t?this.getPrototypesFromFunctionNames(this.traceFunctionCalls(t,[]).reverse()):this.getPrototypesFromFunctionNames(Object.keys(this.nodeMap))}},{key:"getStringFromFunctionNames",value:function(t){for(var e=[],n=0;n<t.length;++n){this.nodeMap[t[n]]&&e.push(this.nodeMap[t[n]].getFunctionString())}return e.join("\n")}},{key:"getPrototypesFromFunctionNames",value:function(t,e){for(var n=[],r=0;r<t.length;++r){var i=t[r],s=this.nodeMap[i];s?n.push(s.getFunctionPrototypeString(e)):this.nativeFunctions[i]&&n.push(this.nativeFunctions[i])}return n}},{key:"getPrototypeStringFromFunctionNames",value:function(t,e){return this.getPrototypesFromFunctionNames(t,e).toString()}},{key:"getString",value:function(t,e){return void 0===e&&(e={}),t?this.getStringFromFunctionNames(this.traceFunctionCalls(t,[],e).reverse(),e):this.getStringFromFunctionNames(Object.keys(this.nodeMap),e)}}]),t}()},function(t,e,n){"use strict";var r=function(){function t(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}return function(e,n,r){return n&&t(e.prototype,n),r&&t(e,r),e}}();var i=n(204),s=n(13),a=/decode32\(\s+encode32\(/g,o=/encode32\(\s+decode32\(/g;t.exports=function(t){function e(){return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),function(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}(this,(e.__proto__||Object.getPrototypeOf(e)).apply(this,arguments))}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}(e,i),r(e,[{key:"generate",value:function(){return this.debug,this.prototypeOnly?this.astFunctionPrototype(this.getJsAST(),[]).join("").trim():(this.functionStringArray=this.astGeneric(this.getJsAST(),[]),this.functionString=this.functionStringArray.join("").trim().replace(a,"((").replace(o,"(("),this.functionString)}},{key:"astFunctionDeclaration",value:function(t,e){return this.builder.addFunction(null,s.getAstString(this.jsFunctionString,t)),e}},{key:"astFunctionPrototype",value:function(t,e){if(this.isRootKernel||this.isSubKernel)return e;var n=this.returnType,r=u[n];if(!r)throw new Error("unknown type "+n);e.push(r),e.push(" "),e.push(this.functionName),e.push("(");for(var i=0;i<this.paramNames.length;++i)i>0&&e.push(", "),e.push(this.paramTypes[i]),e.push(" "),e.push("user_"),e.push(this.paramNames[i]);return e.push(");\n"),e}},{key:"astFunctionExpression",value:function(t,e){if(this.isRootKernel)e.push("void");else{var n=this.returnType,r=u[n];if(!r)throw new Error("unknown type "+n);e.push(r)}if(e.push(" "),e.push(this.functionName),e.push("("),!this.isRootKernel)for(var i=0;i<this.paramNames.length;++i){var s=this.paramNames[i];i>0&&e.push(", ");var a=this.getParamType(s),o=u[a];if(!o)throw new Error("unknown type "+a);e.push(o),e.push(" "),e.push("user_"),e.push(s)}e.push(") {\n");for(var h=0;h<t.body.body.length;++h)this.astGeneric(t.body.body[h],e),e.push("\n");return e.push("}\n"),e}},{key:"astReturnStatement",value:function(t,e){return this.isRootKernel?(e.push("kernelResult = "),this.astGeneric(t.argument,e),e.push(";"),e.push("return;")):this.isSubKernel?(e.push(this.functionName+"Result = "),this.astGeneric(t.argument,e),e.push(";"),e.push("return "+this.functionName+"Result;")):(e.push("return "),this.astGeneric(t.argument,e),e.push(";")),e}},{key:"astLiteral",value:function(t,e){if(isNaN(t.value))throw this.astErrorOutput("Non-numeric literal not supported : "+t.value,t);e.push(t.value);var n=this.isState("in-get-call-parameters");return Number.isInteger(t.value)?n||e.push(".0"):n&&(e.pop(),e.push("int("),e.push(t.value),e.push(")")),e}},{key:"astBinaryExpression",value:function(t,e){var n=this.isState("in-get-call-parameters");return n&&(this.pushState("not-in-get-call-parameters"),e.push("int")),e.push("("),"%"===t.operator?(e.push("mod("),this.astGeneric(t.left,e),e.push(","),this.astGeneric(t.right,e),e.push(")")):"==="===t.operator?(this.astGeneric(t.left,e),e.push("=="),this.astGeneric(t.right,e)):"!=="===t.operator?(this.astGeneric(t.left,e),e.push("!="),this.astGeneric(t.right,e)):this.fixIntegerDivisionAccuracy&&"/"===t.operator?(e.push("div_with_int_check("),this.astGeneric(t.left,e),e.push(", "),this.astGeneric(t.right,e),e.push(")")):(this.astGeneric(t.left,e),e.push(t.operator),this.astGeneric(t.right,e)),e.push(")"),n&&this.popState("not-in-get-call-parameters"),e}},{key:"astIdentifierExpression",value:function(t,e){if("Identifier"!==t.type)throw this.astErrorOutput("IdentifierExpression - not an Identifier",t);var n=!this.isState("in-get-call-parameters");switch(t.name){case"gpu_threadX":n&&e.push("float("),e.push("threadId.x"),n&&e.push(")");break;case"gpu_threadY":n&&e.push("float("),e.push("threadId.y"),n&&e.push(")");break;case"gpu_threadZ":n&&e.push("float("),e.push("threadId.z"),n&&e.push(")");break;case"gpu_outputX":e.push("uOutputDim.x");break;case"gpu_outputY":e.push("uOutputDim.y");break;case"gpu_outputZ":e.push("uOutputDim.z");break;case"Infinity":e.push("3.402823466e+38");break;default:var r=this.getUserParamName(t.name);null!==r?this.pushParameter(e,"user_"+r):this.pushParameter(e,"user_"+t.name)}return e}},{key:"astForStatement",value:function(t,e){if("ForStatement"!==t.type)throw this.astErrorOutput("Invalid for statment",t);if(t.test&&"BinaryExpression"===t.test.type){if("Identifier"===t.test.right.type&&"<"===t.test.operator&&!1===this.isIdentifierConstant(t.test.right.name)){if(this.loopMaxIterations||(console.warn("Warning: loopMaxIterations is not set! Using default of 1000 which may result in unintended behavior."),console.warn("Set loopMaxIterations or use a for loop of fixed length to silence this message.")),e.push("for ("),this.astGeneric(t.init,e),this.astGeneric(t.test.left,e),e.push(t.test.operator),e.push("LOOP_MAX"),e.push(";"),this.astGeneric(t.update,e),e.push(")"),e.push("{\n"),e.push("if ("),this.astGeneric(t.test.left,e),e.push(t.test.operator),this.astGeneric(t.test.right,e),e.push(") {\n"),"BlockStatement"===t.body.type)for(var n=0;n<t.body.body.length;n++)this.astGeneric(t.body.body[n],e);else this.astGeneric(t.body,e);return e.push("\n} else {\n"),e.push("break;\n"),e.push("}\n"),e.push("}\n"),e}var r=JSON.parse(JSON.stringify(t.init.declarations)),i=t.update.argument;if(!Array.isArray(r)||r.length<1)throw this.jsFunctionString,new Error("Error: Incompatible for loop declaration");if(r.length>1){for(var s=null,a=0;a<r.length;a++){var o=r[a];o.id.name===i.name?(s=o,r.splice(a,1)):(e.push("float "),this.astGeneric(o,e),e.push(";"))}e.push("for (float "),this.astGeneric(s,e),e.push(";")}else e.push("for ("),this.astGeneric(t.init,e);return this.astGeneric(t.test,e),e.push(";"),this.astGeneric(t.update,e),e.push(")"),this.astGeneric(t.body,e),e}throw this.astErrorOutput("Invalid for statement",t)}},{key:"astWhileStatement",value:function(t,e){if("WhileStatement"!==t.type)throw this.astErrorOutput("Invalid while statment",t);return e.push("for (float i = 0.0; i < LOOP_MAX; i++) {"),e.push("if ("),this.astGeneric(t.test,e),e.push(") {\n"),this.astGeneric(t.body,e),e.push("} else {\n"),e.push("break;\n"),e.push("}\n"),e.push("}\n"),e}},{key:"astDoWhileStatement",value:function(t,e){if("DoWhileStatement"!==t.type)throw this.astErrorOutput("Invalid while statment",t);return e.push("for (float i = 0.0; i < LOOP_MAX; i++) {"),this.astGeneric(t.body,e),e.push("if (!"),this.astGeneric(t.test,e),e.push(") {\n"),e.push("break;\n"),e.push("}\n"),e.push("}\n"),e}},{key:"astAssignmentExpression",value:function(t,e){if("%="!==t.operator)return this.astGeneric(t.left,e),e.push(t.operator),this.astGeneric(t.right,e),e;this.astGeneric(t.left,e),e.push("="),e.push("mod("),this.astGeneric(t.left,e),e.push(","),this.astGeneric(t.right,e),e.push(")")}},{key:"astEmptyStatement",value:function(t,e){return e}},{key:"astBlockStatement",value:function(t,e){e.push("{\n");for(var n=0;n<t.body.length;n++)this.astGeneric(t.body[n],e);return e.push("}\n"),e}},{key:"astExpressionStatement",value:function(t,e){return this.astGeneric(t.expression,e),e.push(";"),e}},{key:"astVariableDeclaration",value:function(t,e){for(var n=0;n<t.declarations.length;n++){var r=t.declarations[n];n>0&&e.push(",");var i=[];this.astGeneric(r,i);var s="Number";if(0===n){var a=r.init;if(a)if(a.object){if("MemberExpression"===a.object.type&&a.object.object)if("ThisExpression"!==a.object.object.type||!a.object.property||"thread"!==a.object.property.name&&"output"!==a.object.property.name){if("Identifier"===a.object.object.type){var o=this.getParamType(a.object.object.name);s=h[o]}else if(a.object.object.object&&"Identifier"===a.object.object.object.type){var l=this.getParamType(a.object.object.object.name);s=h[l]}else if(a.object.object.object&&a.object.object.object.object&&"ThisExpression"===a.object.object.object.object.type&&"constants"===a.object.object.object.property.name){var c=this.getConstantType(a.object.object.property.name);s=h[c]}else if(a.object.object.object&&a.object.object.object.object&&a.object.object.object.object.object&&"ThisExpression"===a.object.object.object.object.object.type&&"constants"===a.object.object.object.object.property.name){var p=this.getConstantType(a.object.object.object.property.name);s=h[p]}}else s="Integer";if(!s)throw new Error("unknown lookup type "+h)}else if(a.name&&this.declarations[a.name])s=this.declarations[a.name];else if("ArrayExpression"===a.type)s="Array("+a.elements.length+")";else if("CallExpression"===a.type){var f=this.builder.nodeMap[a.callee.name];f&&f.returnType&&(s=f.returnType)}var d=u[s];if(!d)throw new Error("type "+s+" not handled");e.push(d+" ")}this.declarations[r.id.name]=s,e.push.apply(e,i)}return e.push(";"),e}},{key:"astVariableDeclarator",value:function(t,e){return this.astGeneric(t.id,e),null!==t.init&&(e.push("="),this.astGeneric(t.init,e)),e}},{key:"astIfStatement",value:function(t,e){return e.push("if ("),this.astGeneric(t.test,e),e.push(")"),"BlockStatement"===t.consequent.type?this.astGeneric(t.consequent,e):(e.push(" {\n"),this.astGeneric(t.consequent,e),e.push("\n}\n")),t.alternate&&(e.push("else "),"BlockStatement"===t.alternate.type?this.astGeneric(t.alternate,e):(e.push(" {\n"),this.astGeneric(t.alternate,e),e.push("\n}\n"))),e}},{key:"astBreakStatement",value:function(t,e){return e.push("break;\n"),e}},{key:"astContinueStatement",value:function(t,e){return e.push("continue;\n"),e}},{key:"astLogicalExpression",value:function(t,e){return e.push("("),this.astGeneric(t.left,e),e.push(t.operator),this.astGeneric(t.right,e),e.push(")"),e}},{key:"astUpdateExpression",value:function(t,e){return t.prefix?(e.push(t.operator),this.astGeneric(t.argument,e)):(this.astGeneric(t.argument,e),e.push(t.operator)),e}},{key:"astUnaryExpression",value:function(t,e){return t.prefix?(e.push(t.operator),this.astGeneric(t.argument,e)):(this.astGeneric(t.argument,e),e.push(t.operator)),e}},{key:"astThisExpression",value:function(t,e){return e.push("this"),e}},{key:"astMemberExpression",value:function(t,e){if(t.object.type,t.computed)if("Identifier"===t.object.type||"MemberExpression"===t.object.type&&t.object.object.object&&"ThisExpression"===t.object.object.object.type&&"constants"===t.object.object.property.name){var n=t.object.name,r=(this.functionName,!1);if(this.paramNames){var i=this.paramNames.indexOf(n);i>=0&&"Number"===this.paramTypes[i]&&(r=!0)}if(r)this.astGeneric(t.object,e),e.push("[int("),this.astGeneric(t.property,e),e.push(")]");else{var s=this.isState("in-get-call-parameters"),a=this.isState("multi-member-expression");a&&this.popState("multi-member-expression"),this.pushState("not-in-get-call-parameters");var o=null;switch(t.object.name?o=this.declarations[t.object.name]?this.declarations[t.object.name]:this.getParamType(t.object.name):t.object&&t.object.object&&t.object.object.object&&"ThisExpression"===t.object.object.object.type&&(o=this.getConstantType(t.object.property.name)),o){case"Array(2)":case"Array(3)":case"Array(4)":this.astGeneric(t.object,e),e.push("["),e.push(t.property.raw),e.push("]"),a&&this.popState("not-in-get-call-parameters");break;case"HTMLImageArray":e.push("getImage3D("),this.astGeneric(t.object,e),e.push(", ivec2("),this.astGeneric(t.object,e),e.push("Size[0],"),this.astGeneric(t.object,e),e.push("Size[1]), ivec3("),this.astGeneric(t.object,e),e.push("Dim[0],"),this.astGeneric(t.object,e),e.push("Dim[1],"),this.astGeneric(t.object,e),e.push("Dim[2]"),e.push("), "),this.popState("not-in-get-call-parameters"),this.pushState("in-get-call-parameters"),this.astGeneric(t.property,e),a||this.popState("in-get-call-parameters"),e.push(")");break;case"ArrayTexture(4)":case"HTMLImage":e.push("getImage2D("),this.astGeneric(t.object,e),e.push(", ivec2("),this.astGeneric(t.object,e),e.push("Size[0],"),this.astGeneric(t.object,e),e.push("Size[1]), ivec3("),this.astGeneric(t.object,e),e.push("Dim[0],"),this.astGeneric(t.object,e),e.push("Dim[1],"),this.astGeneric(t.object,e),e.push("Dim[2]"),e.push("), "),this.popState("not-in-get-call-parameters"),this.pushState("in-get-call-parameters"),this.astGeneric(t.property,e),a||this.popState("in-get-call-parameters"),e.push(")");break;default:s&&e.push("int("),e.push("get("),this.astGeneric(t.object,e),e.push(", ivec2("),this.astGeneric(t.object,e),e.push("Size[0],"),this.astGeneric(t.object,e),e.push("Size[1]), ivec3("),this.astGeneric(t.object,e),e.push("Dim[0],"),this.astGeneric(t.object,e),e.push("Dim[1],"),this.astGeneric(t.object,e),e.push("Dim[2]"),e.push("), "),this.astGeneric(t.object,e),e.push("BitRatio"),e.push(", "),this.popState("not-in-get-call-parameters"),this.pushState("in-get-call-parameters"),this.astGeneric(t.property,e),a||this.popState("in-get-call-parameters"),e.push(")"),s&&e.push(")")}}}else{t.object;this.states.length;var u=this.isState("in-get-call-parameters");u||this.pushState("multi-member-expression"),this.astGeneric(t.object,e),this.isState("multi-member-expression")&&this.popState("multi-member-expression");var h=!u&&this.isState("in-get-call-parameters"),l=e.pop();e.push(","),t.property;var c=this.isState("should-pop-in-get-call-parameters");c&&this.popState("should-pop-in-get-call-parameters"),this.astGeneric(t.property,e),e.push(l),h?this.pushState("should-pop-in-get-call-parameters"):c&&this.popState("in-get-call-parameters")}else{var p=this.astMemberExpressionUnroll(t),f=p.toLowerCase();0===p.indexOf("this.constants.")&&(p="constants_"+p.slice("this.constants.".length));var d=!this.isState("in-get-call-parameters");switch(f){case"this.thread.x":d&&e.push("float("),e.push("threadId.x"),d&&e.push(")");break;case"this.thread.y":d&&e.push("float("),e.push("threadId.y"),d&&e.push(")");break;case"this.thread.z":d&&e.push("float("),e.push("threadId.z"),d&&e.push(")");break;case"this.output.x":e.push(this.output[0]+".0");break;case"this.output.y":e.push(this.output[1]+".0");break;case"this.output.z":e.push(this.output[2]+".0");break;default:t.object&&t.object.name&&this.declarations[t.object.name]&&e.push("user_"),e.push(p)}}return t.object.type,e}},{key:"astSequenceExpression",value:function(t,e){for(var n=0;n<t.expressions.length;n++)n>0&&e.push(","),this.astGeneric(t.expressions,e);return e}},{key:"astCallExpression",value:function(t,e){if(t.callee){var n=this.astMemberExpressionUnroll(t.callee);0===n.indexOf("Math.")&&(n=n.slice("Math.".length)),0===n.indexOf("this.")&&(n=n.slice("this.".length)),"atan2"===n&&(n="atan"),this.calledFunctions.indexOf(n)<0&&this.calledFunctions.push(n),this.hasOwnProperty("funcName")||(this.calledFunctionsArguments[n]=[]);var r=[];this.calledFunctionsArguments[n].push(r),e.push(n),e.push("(");for(var i=0;i<t.arguments.length;++i){var s=t.arguments[i];if(i>0&&e.push(", "),this.astGeneric(s,e),"Identifier"===s.type){var a=this.paramNames.indexOf(s.name);-1===a?r.push(null):r.push({name:s.name,type:this.paramTypes[a]||"Number"})}else r.push(null)}return e.push(")"),e}throw this.astErrorOutput("Unknown CallExpression",t)}},{key:"astArrayExpression",value:function(t,e){var n=t.elements.length;e.push("vec"+n+"(");for(var r=0;r<n;++r){r>0&&e.push(", ");var i=t.elements[r];this.astGeneric(i,e)}return e.push(")"),e}},{key:"getFunctionPrototypeString",value:function(){return this.webGlFunctionPrototypeString?this.webGlFunctionPrototypeString:this.webGlFunctionPrototypeString=this.generate()}},{key:"build",value:function(){return this.getFunctionPrototypeString().length>0}}]),e}();var u={Array:"sampler2D","Array(2)":"vec2","Array(3)":"vec3","Array(4)":"vec4",Array2D:"sampler2D",Array3D:"sampler2D",Float:"float",Input:"sampler2D",Integer:"float",Number:"float",NumberTexture:"sampler2D","ArrayTexture(4)":"sampler2D"},h={Array:"Number",Array2D:"Number",Array3D:"Number",HTMLImage:"Array(4)",HTMLImageArray:"Array(4)",NumberTexture:"Number","ArrayTexture(4)":"Array(4)"}},function(t,e,n){"use strict";var r=function(){function t(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}return function(e,n,r){return n&&t(e.prototype,n),r&&t(e,r),e}}();var i=n(95),s=n(13),a=n(73),o=n(323),u=n(324);t.exports=function(t){function e(){return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),function(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}(this,(e.__proto__||Object.getPrototypeOf(e)).apply(this,arguments))}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}(e,i),r(e,[{key:"initWebGl",value:function(){return s.initWebGl2(this.getCanvas())}},{key:"validateOptions",value:function(){var t=s.isFloatReadPixelsSupportedWebGL2();if(!0===this.floatOutput&&!0!==this.floatOutputForce&&!t)throw new Error("Float texture outputs are not supported on this browser");void 0===this.floatTextures&&(this.floatTextures=!0,this.floatOutput=t);var e=s.hasIntegerDivisionAccuracyBug();if(null===this.fixIntegerDivisionAccuracy?this.fixIntegerDivisionAccuracy=e:this.fixIntegerDivisionAccuracy&&!e&&(this.fixIntegerDivisionAccuracy=!1),s.checkOutput(this.output),!this.output||0===this.output.length){if(1!==arguments.length)throw new Error("Auto output only supported for kernels with only one input");var n=s.getArgumentType(arguments[0]);if("Array"===n)this.output=s.getDimensions(n);else{if("NumberTexture"!==n&&"ArrayTexture(4)"!==n)throw new Error("Auto output not supported for input type: "+n);this.output=arguments[0].output}}if(this.texSize=s.dimToTexSize({floatTextures:this.floatTextures,floatOutput:this.floatOutput},this.output,!0),this.graphical){if(2!==this.output.length)throw new Error("Output must have 2 dimensions on graphical mode");this.floatOutput&&(this.floatOutput=!1,console.warn("Cannot use graphical mode and float output at the same time")),this.texSize=s.clone(this.output)}else void 0===this.floatOutput&&(this.floatOutput=!0);(this.floatOutput||this.floatOutputForce)&&this._webGl.getExtension("EXT_color_buffer_float")}},{key:"run",value:function(){null===this.program&&this.build.apply(this,arguments);var t=this.paramNames,e=this.paramTypes,n=this.texSize,r=this._webGl;r.useProgram(this.program),r.scissor(0,0,n[0],n[1]),this.hardcodeConstants||(this.setUniform3iv("uOutputDim",new Int32Array(this.threadDim)),this.setUniform2iv("uTexSize",n)),this.setUniform2f("ratio",n[0]/this.maxTexSize[0],n[1]/this.maxTexSize[1]),this.argumentsLength=0;for(var i=0;i<t.length;i++)this._addArgument(arguments[i],e[i],t[i]);if(this.graphical)return this.outputToTexture?(r.bindRenderbuffer(r.RENDERBUFFER,null),r.bindFramebuffer(r.FRAMEBUFFER,this.framebuffer),this.outputTexture&&!this.outputImmutable||this._setupOutputTexture(),r.drawArrays(r.TRIANGLE_STRIP,0,4),new a(this.outputTexture,n,this.threadDim,this.output,this._webGl,"ArrayTexture(4)")):(r.bindRenderbuffer(r.RENDERBUFFER,null),r.bindFramebuffer(r.FRAMEBUFFER,null),void r.drawArrays(r.TRIANGLE_STRIP,0,4));r.bindFramebuffer(r.FRAMEBUFFER,this.framebuffer),this.outputImmutable&&this._setupOutputTexture();var s=this.outputTexture;if(null!==this.subKernelOutputVariableNames&&(this.outputImmutable&&(this.subKernelOutputTextures=[],this._setupSubOutputTextures(this.subKernelOutputVariableNames.length)),r.drawBuffers(this.drawBuffersMap)),r.drawArrays(r.TRIANGLE_STRIP,0,4),null!==this.subKernelOutputTextures){if(null!==this.subKernels){var o=[];o.result=this.renderOutput(s);for(var u=0;u<this.subKernels.length;u++)o.push(new a(this.subKernelOutputTextures[u],n,this.threadDim,this.output,this._webGl));return o}if(null!==this.subKernelProperties){var h={result:this.renderOutput(s)},l=0;for(var c in this.subKernelProperties)this.subKernelProperties.hasOwnProperty(c)&&(h[c]=new a(this.subKernelOutputTextures[l],n,this.threadDim,this.output,this._webGl),l++);return h}}return this.renderOutput(s)}},{key:"getOutputTexture",value:function(){return this.outputTexture}},{key:"_setupOutputTexture",value:function(){var t=this._webGl,e=this.texSize,n=this.outputTexture=this._webGl.createTexture();t.activeTexture(t.TEXTURE0+this.constantsLength+this.paramNames.length),t.bindTexture(t.TEXTURE_2D,n),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MIN_FILTER,t.NEAREST),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MAG_FILTER,t.NEAREST),this.floatOutput?t.texImage2D(t.TEXTURE_2D,0,t.RGBA32F,e[0],e[1],0,t.RGBA,t.FLOAT,null):t.texImage2D(t.TEXTURE_2D,0,t.RGBA,e[0],e[1],0,t.RGBA,t.UNSIGNED_BYTE,null),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,n,0)}},{key:"_setupSubOutputTextures",value:function(t){for(var e=this._webGl,n=this.texSize,r=this.drawBuffersMap=[e.COLOR_ATTACHMENT0],i=this.subKernelOutputTextures=[],s=0;s<t;s++){var a=this._webGl.createTexture();i.push(a),r.push(e.COLOR_ATTACHMENT0+s+1),e.activeTexture(e.TEXTURE0+this.constantsLength+this.paramNames.length+s),e.bindTexture(e.TEXTURE_2D,a),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.NEAREST),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,e.NEAREST),this.floatOutput?e.texImage2D(e.TEXTURE_2D,0,e.RGBA32F,n[0],n[1],0,e.RGBA,e.FLOAT,null):e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n[0],n[1],0,e.RGBA,e.UNSIGNED_BYTE,null),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0+s+1,e.TEXTURE_2D,a,0)}}},{key:"_addArgument",value:function(t,e,n){var r=this._webGl,i=this.getArgumentTexture(n);switch(t instanceof a&&(e=t.type),e){case"Array":var o=s.getDimensions(t,!0),u=s.dimToTexSize({floatTextures:this.floatTextures,floatOutput:this.floatOutput},o);r.activeTexture(r.TEXTURE0+this.constantsLength+this.argumentsLength),r.bindTexture(r.TEXTURE_2D,i),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_WRAP_S,r.CLAMP_TO_EDGE),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_WRAP_T,r.CLAMP_TO_EDGE),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MIN_FILTER,r.NEAREST),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MAG_FILTER,r.NEAREST);var h=u[0]*u[1],l=this._formatArrayTransfer(t,h),c=l.valuesFlat,p=l.bitRatio,f=void 0;this.floatTextures?r.texImage2D(r.TEXTURE_2D,0,r.RGBA32F,u[0],u[1],0,r.RGBA,r.FLOAT,c):(f=new Uint8Array(c.buffer),r.texImage2D(r.TEXTURE_2D,0,r.RGBA,u[0]/p,u[1],0,r.RGBA,r.UNSIGNED_BYTE,f)),this.hardcodeConstants||(this.setUniform3iv("user_"+n+"Dim",o),this.setUniform2iv("user_"+n+"Size",u)),this.setUniform1i("user_"+n+"BitRatio",p),this.setUniform1i("user_"+n,this.argumentsLength);break;case"Integer":case"Float":case"Number":this.setUniform1f("user_"+n,t);break;case"Input":var d=t.size,g=s.dimToTexSize({floatTextures:this.floatTextures,floatOutput:this.floatOutput},d);r.activeTexture(r.TEXTURE0+this.constantsLength+this.argumentsLength),r.bindTexture(r.TEXTURE_2D,i),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_WRAP_S,r.CLAMP_TO_EDGE),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_WRAP_T,r.CLAMP_TO_EDGE),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MIN_FILTER,r.NEAREST),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MAG_FILTER,r.NEAREST);var v=g[0]*g[1],y=this._formatArrayTransfer(t.value,v),m=y.valuesFlat,b=y.bitRatio;if(this.floatTextures)r.texImage2D(r.TEXTURE_2D,0,r.RGBA32F,g[0],g[1],0,r.RGBA,r.FLOAT,inputArray);else{var x=new Uint8Array(m.buffer);r.texImage2D(r.TEXTURE_2D,0,r.RGBA,g[0]/b,g[1],0,r.RGBA,r.UNSIGNED_BYTE,x)}this.hardcodeConstants||(this.setUniform3iv("user_"+n+"Dim",d),this.setUniform2iv("user_"+n+"Size",g)),this.setUniform1i("user_"+n+"BitRatio",b),this.setUniform1i("user_"+n,this.argumentsLength);break;case"HTMLImage":var _=t,T=[_.width,_.height,1],w=[_.width,_.height];r.activeTexture(r.TEXTURE0+this.constantsLength+this.argumentsLength),r.bindTexture(r.TEXTURE_2D,i),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_WRAP_S,r.CLAMP_TO_EDGE),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_WRAP_T,r.CLAMP_TO_EDGE),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MIN_FILTER,r.NEAREST),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MAG_FILTER,r.NEAREST),r.pixelStorei(r.UNPACK_FLIP_Y_WEBGL,!0);var E=r.RGBA,k=r.RGBA,S=r.UNSIGNED_BYTE;r.texImage2D(r.TEXTURE_2D,0,E,k,S,_),this.setUniform3iv("user_"+n+"Dim",T),this.setUniform2iv("user_"+n+"Size",w),this.setUniform1i("user_"+n,this.argumentsLength);break;case"HTMLImageArray":var O=t,A=[O[0].width,O[0].height,O.length],P=[O[0].width,O[0].height];r.activeTexture(r.TEXTURE0+this.constantsLength+this.argumentsLength),r.bindTexture(r.TEXTURE_2D_ARRAY,i),r.texParameteri(r.TEXTURE_2D_ARRAY,r.TEXTURE_MAG_FILTER,r.NEAREST),r.texParameteri(r.TEXTURE_2D_ARRAY,r.TEXTURE_MIN_FILTER,r.NEAREST),r.pixelStorei(r.UNPACK_FLIP_Y_WEBGL,!0);var R=r.RGBA,L=O[0].width,I=O[0].height,C=O.length,D=r.RGBA,N=r.UNSIGNED_BYTE;r.texImage3D(r.TEXTURE_2D_ARRAY,0,R,L,I,C,0,D,N,null);for(var j=0;j<O.length;j++){r.texSubImage3D(r.TEXTURE_2D_ARRAY,0,0,0,j,O[j].width,O[j].height,1,D,N,O[j])}this.setUniform3iv("user_"+n+"Dim",A),this.setUniform2iv("user_"+n+"Size",P),this.setUniform1i("user_"+n,this.argumentsLength);break;case"ArrayTexture(4)":case"NumberTexture":var F=t,M=F.dimensions,G=F.size;r.activeTexture(r.TEXTURE0+this.constantsLength+this.argumentsLength),r.bindTexture(r.TEXTURE_2D,F.texture),this.setUniform3iv("user_"+n+"Dim",M),this.setUniform2iv("user_"+n+"Size",G),this.setUniform1i("user_"+n+"BitRatio",1),this.setUniform1i("user_"+n,this.argumentsLength);break;default:throw new Error("Input type not supported (WebGL): "+t)}this.argumentsLength++}},{key:"_getMainConstantsString",value:function(){var t=[];if(this.constants)for(var e in this.constants)if(this.constants.hasOwnProperty(e)){var n=this.constants[e],r=s.getArgumentType(n);switch(r){case"Integer":t.push("const float constants_"+e+" = "+parseInt(n)+".0");break;case"Float":t.push("const float constants_"+e+" = "+parseFloat(n));break;case"Array":case"Input":case"HTMLImage":case"ArrayTexture(4)":case"NumberTexture":t.push("uniform highp sampler2D constants_"+e,"uniform highp ivec2 constants_"+e+"Size","uniform highp ivec3 constants_"+e+"Dim","uniform highp int constants_"+e+"BitRatio");break;case"HTMLImageArray":t.push("uniform highp sampler2DArray constants_"+e,"uniform highp ivec2 constants_"+e+"Size","uniform highp ivec3 constants_"+e+"Dim","uniform highp int constants_"+e+"BitRatio");break;default:throw new Error("Unsupported constant "+e+" type "+r)}}return this._linesToString(t)}},{key:"_addConstant",value:function(t,e,n){var r=this._webGl,i=this.getArgumentTexture(n);switch(t instanceof a&&(e=t.type),e){case"Array":var o=s.getDimensions(t,!0),u=s.dimToTexSize({floatTextures:this.floatTextures,floatOutput:this.floatOutput},o);r.activeTexture(r.TEXTURE0+this.constantsLength),r.bindTexture(r.TEXTURE_2D,i),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_WRAP_S,r.CLAMP_TO_EDGE),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_WRAP_T,r.CLAMP_TO_EDGE),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MIN_FILTER,r.NEAREST),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MAG_FILTER,r.NEAREST);var h=u[0]*u[1],l=this._formatArrayTransfer(t,h),c=l.valuesFlat,p=l.bitRatio,f=void 0;this.floatTextures?r.texImage2D(r.TEXTURE_2D,0,r.RGBA,u[0],u[1],0,r.RGBA,r.FLOAT,c):(f=new Uint8Array(c.buffer),r.texImage2D(r.TEXTURE_2D,0,r.RGBA,u[0]/p,u[1],0,r.RGBA,r.UNSIGNED_BYTE,f)),this.hardcodeConstants||(this.setUniform3iv("constants_"+n+"Dim",o),this.setUniform2iv("constants_"+n+"Size",u)),this.setUniform1i("constants_"+n+"BitRatio",p),this.setUniform1i("constants_"+n,this.constantsLength);break;case"Input":var d=t.size,g=s.dimToTexSize({floatTextures:this.floatTextures,floatOutput:this.floatOutput},d);r.activeTexture(r.TEXTURE0+this.constantsLength),r.bindTexture(r.TEXTURE_2D,i),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_WRAP_S,r.CLAMP_TO_EDGE),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_WRAP_T,r.CLAMP_TO_EDGE),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MIN_FILTER,r.NEAREST),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MAG_FILTER,r.NEAREST);var v=g[0]*g[1],y=this._formatArrayTransfer(t.value,v),m=y.valuesFlat,b=y.bitRatio;if(this.floatTextures)r.texImage2D(r.TEXTURE_2D,0,r.RGBA32F,g[0],g[1],0,r.RGBA,r.FLOAT,inputArray);else{var x=new Uint8Array(m.buffer);r.texImage2D(r.TEXTURE_2D,0,r.RGBA,g[0]/b,g[1],0,r.RGBA,r.UNSIGNED_BYTE,x)}this.hardcodeConstants||(this.setUniform3iv("constants_"+n+"Dim",d),this.setUniform2iv("constants_"+n+"Size",g)),this.setUniform1i("constants_"+n+"BitRatio",b),this.setUniform1i("constants_"+n,this.constantsLength);break;case"HTMLImage":var _=t,T=[_.width,_.height,1],w=[_.width,_.height];r.activeTexture(r.TEXTURE0+this.constantsLength),r.bindTexture(r.TEXTURE_2D,i),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_WRAP_S,r.CLAMP_TO_EDGE),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_WRAP_T,r.CLAMP_TO_EDGE),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MIN_FILTER,r.NEAREST),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MAG_FILTER,r.NEAREST),r.pixelStorei(r.UNPACK_FLIP_Y_WEBGL,!0);var E=r.RGBA,k=r.RGBA,S=r.UNSIGNED_BYTE;r.texImage2D(r.TEXTURE_2D,0,E,k,S,_),this.setUniform3iv("constants_"+n+"Dim",T),this.setUniform2iv("constants_"+n+"Size",w),this.setUniform1i("constants_"+n,this.constantsLength);break;case"HTMLImageArray":var O=t,A=[O[0].width,O[0].height,O.length],P=[O[0].width,O[0].height];r.activeTexture(r.TEXTURE0+this.constantsLength),r.bindTexture(r.TEXTURE_2D_ARRAY,i),r.texParameteri(r.TEXTURE_2D_ARRAY,r.TEXTURE_MAG_FILTER,r.NEAREST),r.texParameteri(r.TEXTURE_2D_ARRAY,r.TEXTURE_MIN_FILTER,r.NEAREST),r.pixelStorei(r.UNPACK_FLIP_Y_WEBGL,!0);var R=r.RGBA,L=O[0].width,I=O[0].height,C=O.length,D=r.RGBA,N=r.UNSIGNED_BYTE;r.texImage3D(r.TEXTURE_2D_ARRAY,0,R,L,I,C,0,D,N,null);for(var j=0;j<O.length;j++){r.texSubImage3D(r.TEXTURE_2D_ARRAY,0,0,0,j,O[j].width,O[j].height,1,D,N,O[j])}this.setUniform3iv("constants_"+n+"Dim",A),this.setUniform2iv("constants_"+n+"Size",P),this.setUniform1i("constants_"+n,this.constantsLength);break;case"ArrayTexture(4)":case"NumberTexture":var F=t,M=F.dimensions,G=F.size;r.activeTexture(r.TEXTURE0+this.constantsLength),r.bindTexture(r.TEXTURE_2D,F.texture),this.setUniform3iv("constants_"+n+"Dim",M),this.setUniform2iv("constants_"+n+"Size",G),this.setUniform1i("constants_"+n+"BitRatio",1),this.setUniform1i("constants_"+n,this.constantsLength);break;case"Integer":case"Float":default:throw new Error("Input type not supported (WebGL): "+t)}}},{key:"_getGetResultString",value:function(){return this.floatTextures?"  return texel[channel];":"  return decode(texel, x, bitRatio);"}},{key:"_getHeaderString",value:function(){return""}},{key:"_getTextureCoordinate",value:function(){var t=this.subKernelOutputVariableNames;return null===t||t.length<1?"in highp vec2 vTexCoord;\n":"out highp vec2 vTexCoord;\n"}},{key:"_getMainParamsString",value:function(t){for(var e=[],n=this.paramTypes,r=this.paramNames,i=0;i<r.length;i++){var a=t[i],o=r[i],u=n[i];if(this.hardcodeConstants)if("Array"===u||"NumberTexture"===u||"ArrayTexture(4)"===u){var h=s.getDimensions(a,!0),l=s.dimToTexSize({floatTextures:this.floatTextures,floatOutput:this.floatOutput},h);e.push("uniform highp sampler2D user_"+o,"highp ivec2 user_"+o+"Size = ivec2("+l[0]+", "+l[1]+")","highp ivec3 user_"+o+"Dim = ivec3("+h[0]+", "+h[1]+", "+h[2]+")","uniform highp int user_"+o+"BitRatio")}else"Integer"===u?e.push("highp float user_"+o+" = "+a+".0"):"Float"===u&&e.push("highp float user_"+o+" = "+a);else"Array"===u||"NumberTexture"===u||"ArrayTexture(4)"===u||"Input"===u||"HTMLImage"===u?(e.push("uniform highp sampler2D user_"+o,"uniform highp ivec2 user_"+o+"Size","uniform highp ivec3 user_"+o+"Dim"),"HTMLImage"!==u&&e.push("uniform highp int user_"+o+"BitRatio")):"HTMLImageArray"===u?e.push("uniform highp sampler2DArray user_"+o,"uniform highp ivec2 user_"+o+"Size","uniform highp ivec3 user_"+o+"Dim"):"Integer"!==u&&"Float"!==u||e.push("uniform float user_"+o)}return this._linesToString(e)}},{key:"_getKernelString",value:function(){var t=[],e=this.subKernelOutputVariableNames;if(null!==e){t.push("float kernelResult = 0.0"),t.push("layout(location = 0) out vec4 data0");for(var n=0;n<e.length;n++)t.push("float "+e[n]+" = 0.0","layout(location = "+(n+1)+") out vec4 data"+(n+1))}else t.push("out vec4 data0"),t.push("float kernelResult = 0.0");return this._linesToString(t)+this.functionBuilder.getPrototypeString("kernel")}},{key:"_getMainResultString",value:function(){var t=this.subKernelOutputVariableNames,e=[];if(this.floatOutput&&e.push("  index *= 4"),this.graphical)e.push("  threadId = indexTo3D(index, uOutputDim)","  kernel()","  data0 = actualColor");else if(this.floatOutput)for(var n=["r","g","b","a"],r=0;r<n.length;++r){if(e.push("  threadId = indexTo3D(index, uOutputDim)"),e.push("  kernel()"),t){e.push("  data0."+n[r]+" = kernelResult");for(var i=0;i<t.length;++i)e.push("  data"+(i+1)+"."+n[r]+" = "+t[i])}else e.push("  data0."+n[r]+" = kernelResult");r<n.length-1&&e.push("  index += 1")}else if(null!==t){e.push("  threadId = indexTo3D(index, uOutputDim)"),e.push("  kernel()"),e.push("  data0 = encode32(kernelResult)");for(var s=0;s<t.length;s++)e.push("  data"+(s+1)+" = encode32("+t[s]+")")}else e.push("  threadId = indexTo3D(index, uOutputDim)","  kernel()","  data0 = encode32(kernelResult)");return this._linesToString(e)}},{key:"_addKernels",value:function(){var t=this,e=this.functionBuilder;this._webGl;e.addFunctions(this.functions,{constants:this.constants,output:this.output}),e.addNativeFunctions(this.nativeFunctions),e.addKernel(this.fnString,{prototypeOnly:!1,constants:this.constants,output:this.output,debug:this.debug,loopMaxIterations:this.loopMaxIterations,paramNames:this.paramNames,paramTypes:this.paramTypes,constantTypes:this.constantTypes,fixIntegerDivisionAccuracy:this.fixIntegerDivisionAccuracy}),null!==this.subKernels?(this.subKernelOutputTextures=[],this.subKernelOutputVariableNames=[],this.subKernels.forEach(function(e){return t._addSubKernel(e)})):null!==this.subKernelProperties&&(this.subKernelOutputTextures=[],this.subKernelOutputVariableNames=[],Object.keys(this.subKernelProperties).forEach(function(e){return t._addSubKernel(t.subKernelProperties[e])}))}},{key:"_getFragShaderString",value:function(t){return null!==this.compiledFragShaderString?this.compiledFragShaderString:this.compiledFragShaderString=this._replaceArtifacts(this.constructor.fragShaderString,this._getFragShaderArtifactMap(t))}},{key:"_getVertShaderString",value:function(t){return null!==this.compiledVertShaderString?this.compiledVertShaderString:this.compiledVertShaderString=this.constructor.vertShaderString}}],[{key:"fragShaderString",get:function(){return o}},{key:"vertShaderString",get:function(){return u}}]),e}()},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var r=function(){function t(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}return function(e,n,r){return n&&t(e.prototype,n),r&&t(e,r),e}}(),i=y(n(31)),s=y(n(96)),a=y(n(212)),o=y(n(97)),u=y(n(72)),h=y(n(148)),l=n(74),c=y(n(215)),p=y(n(216)),f=y(n(92)),d=y(n(198)),g=y(n(348)),v=n(199);function y(t){return t&&t.__esModule?t:{default:t}}var m=function(t){function e(){return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),function(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}(this,(e.__proto__||Object.getPrototypeOf(e)).apply(this,arguments))}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}(e,o.default),r(e,[{key:"createOutputMatrix",value:function(){var t=this.model,e=this.outputSize,n=this.hiddenLayers[this.hiddenLayers.length-1];t.outputConnector=new s.default(e,n,.08),t.output=new s.default(e,1,.08)}},{key:"bindEquation",value:function(){var t=this.model,e=this.hiddenLayers,n=t.hiddenLayers,r=new a.default,s=[],o=t.equationConnections.length>0?t.equationConnections[t.equationConnections.length-1]:this.initialLayerInputs,u=this.getEquation(r,r.input(new i.default(this.inputSize,1)),o[0],n[0]);s.push(u);for(var h=1,l=e.length;h<l;h++)u=this.getEquation(r,u,o[h],n[h]),s.push(u);t.equationConnections.push(s),r.add(r.multiply(t.outputConnector,u),t.output),t.equations.push(r)}},{key:"mapModel",value:function(){var t=this.model,e=t.hiddenLayers,n=t.allMatrices;if(this.initialLayerInputs=this.hiddenLayers.map(function(t){return new i.default(t,1)}),this.createHiddenLayers(),!t.hiddenLayers.length)throw new Error("net.hiddenLayers not set");for(var r=0,s=e.length;r<s;r++){var a=e[r];for(var o in a)a.hasOwnProperty(o)&&n.push(a[o])}if(this.createOutputMatrix(),!t.outputConnector)throw new Error("net.model.outputConnector not set");if(!t.output)throw new Error("net.model.output not set");n.push(t.outputConnector),n.push(t.output)}},{key:"backpropagate",value:function(){for(var t=this.model.equations.length-1;t>-1;t--)this.model.equations[t].backpropagate()}},{key:"run",value:function(t){return 1===this.inputSize?this.outputLookup?(this.run=this.runObject,this.runObject(t)):(this.run=this.runNumbers,this.runNumbers(t)):(this.run=this.runArrays,this.runArrays(t))}},{key:"forecast",value:function(t,e){return 1===this.inputSize?this.outputLookup?(this.forecast=this.runObject,this.runObject(t)):(this.forecast=this.forecastNumbers,this.forecastNumbers(t,e)):this.outputLookup?(this.forecast=this.forecastObjects,this.forecastObjects(t,e)):(this.forecast=this.forecastArrays,this.forecastArrays(t,e))}},{key:"train",value:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.trainOpts=e=Object.assign({},this.constructor.trainDefaults,e);var n=e.iterations,r=e.errorThresh,i=!0===e.log?console.log:e.log,s=e.logPeriod,a=e.callback,o=e.callbackPeriod;1!==this.inputSize&&this.inputSize||this.setSize(t),t=this.formatData(t);var u=1/0,h=void 0;for(this.verifyIsInitialized(t),h=0;h<n&&u>r;h++){for(var l=0,c=0;c<t.length;c++){l+=this.trainPattern(t[c],!0)}if(u=l/t.length,isNaN(u))throw new Error("network error rate is unexpected NaN, check network configurations and try again");i&&h%s==0&&i("iterations: "+h+", training error: "+u),a&&h%o==0&&a({error:u,iterations:h})}return{error:u,iterations:h}}},{key:"verifyIsInitialized",value:function(t){t[0].input?this.trainInput=this.trainInputOutput:t[0].length>0&&(t[0][0].length>0?this.trainInput=this.trainArrays:this.inputSize>1?this.trainInput=this.trainArrays:this.trainInput=this.trainNumbers),this.model||this.initialize()}},{key:"setSize",value:function(t){switch(f.default.dataShape(t).join(",")){case"array,array,number":case"array,object,number":case"array,datum,array,number":case"array,datum,object,number":break;case"array,array,array,number":this.inputSize=this.outputSize=t[0][0].length;break;case"array,array,object,number":this.inputSize=this.outputSize=Object.keys(f.default.toTable2D(t)).length;break;case"array,datum,array,array,number":this.inputSize=this.outputSize=t[0].input[0].length;break;case"array,datum,array,object,number":this.inputSize=Object.keys(f.default.toInputTable2D(t)).length,this.outputSize=Object.keys(f.default.toOutputTable2D(t)).length;break;default:throw new Error("unknown data shape or configuration")}}},{key:"trainNumbers",value:function(t){for(var e=this.model.equations;e.length<t.length;)this.bindEquation();for(var n=0,r=0,i=t.length-1;r<i;r++)n+=e[r].predictTarget(t[r],t[r+1]);return this.end(),n/t.length}},{key:"runNumbers",value:function(t){if(!this.isRunnable)return null;var e=this.model.equations;for(this.inputLookup&&(t=f.default.toArray(this.inputLookup,t,this.inputLookupLength));e.length<=t.length;)this.bindEquation();for(var n=void 0,r=0;r<t.length;r++)n=e[r].runInput([t[r]]);return this.end(),n.weights[0]}},{key:"forecastNumbers",value:function(t,e){if(!this.isRunnable)return null;for(var n=this.model.equations,r=t.length+e;n.length<=r;)this.bindEquation();for(var i=void 0,s=0,a=0;a<t.length;a++)i=n[s++].runInput([t[a]]);for(var o=[i.weights[0]],u=0,h=e-1;u<h;u++)i=n[s++].runInput(i.weights),o.push(i.weights[0]);return this.end(),o}},{key:"runObject",value:function(t){if(this.inputLookup===this.outputLookup){var e=f.default.toArrayShort(this.inputLookup,t);return f.default.toObjectPartial(this.outputLookup,this.forecastNumbers(e,this.outputLookupLength-e.length),e.length)}return f.default.toObject(this.outputLookup,this.forecastNumbers(f.default.toArray(this.inputLookup,t,this.inputLookupLength),this.outputLookupLength))}},{key:"forecastObjects",value:function(t,e){var n=this;return t=t.map(function(t){return f.default.toArray(n.outputLookup,t,n.outputLookupLength)}),this.forecastArrays(t,e).map(function(t){return f.default.toObject(n.outputLookup,t)})}},{key:"trainInputOutput",value:function(t){for(var e=this.model,n=t.input,r=t.output,i=n.length+r.length,s=e.equations;s.length<i;)this.bindEquation();for(var a=0,o=0,u=0,h=n.length-1;u<h;u++)a+=s[o++].predictTarget(n[u],n[u+1]);a+=s[o++].predictTarget(n[n.length-1],r[0]);for(var l=0,c=r.length-1;l<c;l++)a+=s[o++].predictTarget(r[l],r[l+1]);return this.end(),a/i}},{key:"trainArrays",value:function(t){for(var e=this.model.equations;e.length<t.length;)this.bindEquation();for(var n=0,r=0,i=t.length-1;r<i;r++)n+=e[r].predictTarget(t[r],t[r+1]);return this.end(),n/t.length}},{key:"runArrays",value:function(t){if(!this.isRunnable)return null;for(var e=this.model.equations;e.length<=t.length;)this.bindEquation();this.inputLookup&&(t=f.default.toArrays(this.inputLookup,t,this.inputLookupLength));for(var n=void 0,r=0;r<t.length;r++){n=e[r].runInput(t[r]).weights}return this.end(),this.outputLookup?f.default.toObject(this.outputLookup,n):n}},{key:"forecastArrays",value:function(t,e){if(!this.isRunnable)return null;for(var n=this.model.equations,r=t.length+e;n.length<=r;)this.bindEquation();for(var i=void 0,s=0,a=0;a<t.length;a++)i=n[s++].runInput(t[a]);for(var o=[i.weights],u=0,h=e-1;u<h;u++)i=n[s++].runInput(i.weights),o.push(i.weights.slice(0));return this.end(),o}},{key:"end",value:function(){this.model.equations[this.model.equations.length-1].runInput(new Float32Array(this.outputSize))}},{key:"formatData",value:function(t){var e=[];switch(f.default.dataShape(t).join(",")){case"array,number":if(1!==this.inputSize)throw new Error("inputSize must be 1 for this data size");if(1!==this.outputSize)throw new Error("outputSize must be 1 for this data size");for(var n=0;n<t.length;n++)e.push(Float32Array.from([t[n]]));return[e];case"array,array,number":if(1===this.inputSize&&1===this.outputSize){for(var r=0;r<t.length;r++)e.push((0,v.arrayToFloat32Arrays)(t[r]));return e}if(this.inputSize!==t[0].length)throw new Error("inputSize must match data input size");if(this.outputSize!==t[0].length)throw new Error("outputSize must match data input size");for(var i=0;i<t.length;i++)e.push(Float32Array.from(t[i]));return[e];case"array,object,number":if(1!==this.inputSize)throw new Error("inputSize must be 1 for this data size");if(1!==this.outputSize)throw new Error("outputSize must be 1 for this data size");if(!this.inputLookup){var s=new d.default(t);this.inputLookup=this.outputLookup=s.table,this.inputLookupLength=this.outputLookupLength=s.length}for(var a=0;a<t.length;a++)e.push((0,v.objectToFloat32Arrays)(t[a]));return e;case"array,datum,array,number":if(1!==this.inputSize)throw new Error("inputSize must be 1 for this data size");if(1!==this.outputSize)throw new Error("outputSize must be 1 for this data size");for(var o=0;o<t.length;o++){var u=t[o];e.push({input:(0,v.arrayToFloat32Arrays)(u.input),output:(0,v.arrayToFloat32Arrays)(u.output)})}return e;case"array,datum,object,number":if(1!==this.inputSize)throw new Error("inputSize must be 1 for this data size");if(1!==this.outputSize)throw new Error("outputSize must be 1 for this data size");if(!this.inputLookup){var h=new d.default(t,"input");this.inputLookup=h.table,this.inputLookupLength=h.length}if(!this.outputLookup){var l=new d.default(t,"output");this.outputLookup=l.table,this.outputLookupLength=l.length}for(var c=0;c<t.length;c++){var p=t[c];e.push({input:(0,v.objectToFloat32Arrays)(p.input),output:(0,v.objectToFloat32Arrays)(p.output)})}return e;case"array,array,array,number":for(var y=0;y<t.length;y++)e.push((0,v.arraysToFloat32Arrays)(t[y]));return e;case"array,array,object,number":if(!this.inputLookup){var m=new d.default(t);this.inputLookup=this.outputLookup=m.table,this.inputLookupLength=this.outputLookupLength=m.length}for(var b=0;b<t.length;b++){for(var x=[],_=0;_<t[b].length;_++)x.push((0,v.objectToFloat32Array)(t[b][_],this.inputLookup,this.inputLookupLength));e.push(x)}return e;case"array,datum,array,array,number":if(1===this.inputSize&&1===this.outputSize)for(var T=0;T<t.length;T++){var w=t[T];e.push({input:Float32Array.from(w.input),output:Float32Array.from(w.output)})}else{if(this.inputSize!==t[0].input[0].length)throw new Error("inputSize must match data input size");if(this.outputSize!==t[0].output[0].length)throw new Error("outputSize must match data output size");for(var E=0;E<t.length;E++){var k=t[E];e.push({input:(0,v.arraysToFloat32Arrays)(k.input),output:(0,v.arraysToFloat32Arrays)(k.output)})}}return e;case"array,datum,array,object,number":if(!this.inputLookup){var S=new g.default(t,"input");this.inputLookup=S.table,this.inputLookupLength=S.length}if(!this.outputLookup){var O=new g.default(t,"output");this.outputLookup=O.table,this.outputLookupLength=O.length}for(var A=0;A<t.length;A++){var P=t[A];e.push({input:(0,v.objectsToFloat32Arrays)(P.input,this.inputLookup,this.inputLookupLength),output:(0,v.objectsToFloat32Arrays)(P.output,this.outputLookup,this.outputLookupLength)})}return e;default:throw new Error("unknown data shape or configuration")}}},{key:"test",value:function(t){var e=this.formatData(t),n=[],r=0;switch(f.default.dataShape(t).join(",")){case"array,array,number":if(1===this.inputSize){for(var i=0;i<e.length;i++){var s=e[i],a=this.run(s.splice(0,s.length-1)),o=s[s.length-1][0]-a,u=o*o;if(r+=u,Math.abs(u)>this.trainOpts.errorThresh){var h=t[i];Object.assign(h,{value:s,actual:a}),n.push(h)}}break}throw new Error("unknown data shape or configuration");case"array,array,array,number":for(var l=0;l<e.length;l++){for(var c=e[l],p=this.run(c.splice(0,c.length-1)),d=c[c.length-1],g=0,v=0,y=0;y<p.length;y++){v++;var m=d[y]-p[y];g+=m*m}if(r+=g/v,Math.abs(g)>this.trainOpts.errorThresh){var b=t[l];n.push({value:b,actual:p})}}break;case"array,object,number":for(var x=0;x<e.length;x++){var _=e[x],T=this.run(f.default.toObjectPartial(this.outputLookup,_,0,_.length-1)),w=_[_.length-1],E=0,k=void 0;for(k in T);var S=w[x]-T[k];if(r+=E+=S*S,Math.abs(E)>this.trainOpts.errorThresh){var O=t[x];n.push({value:O,actual:T})}}break;case"array,array,object,number":for(var A=0;A<e.length;A++){var P=e[A],R=this.run(P.slice(0,P.length-1)),L=t[A][P.length-1],I=0,C=0;for(var D in R){var N=L[D]-R[D];I+=N*N,C++}if(r+=I/C,Math.abs(I)>this.trainOpts.errorThresh){var j=t[A];n.push({value:j,actual:R})}}break;case"array,datum,array,number":case"array,datum,object,number":for(var F=0;F<e.length;F++){for(var M=e[F],G=this.forecast(M.input,M.output.length),U=0,z=0,B=0;B<G.length;B++){var V=M.output[B][0]-G[B];U+=V*V,z++}if(r+=U/z,Math.abs(U)>this.trainOpts.errorThresh){var X=t[F];Object.assign(X,{actual:this.outputLookup?f.default.toObject(this.outputLookup,G):G}),n.push(X)}}break;case"array,datum,array,array,number":for(var K=0;K<e.length;K++){for(var W=e[K],q=this.forecast(W.input,W.output.length),H=0,J=0;J<q.length;J++)for(var Y=0;Y<q[J].length;Y++){var Q=W.output[J][Y]-q[J][Y];H+=Q*Q}if(r+=H,Math.abs(H)>this.trainOpts.errorThresh){var Z=t[K];n.push({input:Z.input,output:Z.output,actual:q})}}break;case"array,datum,array,object,number":for(var $=0;$<e.length;$++){for(var tt=e[$],et=this.forecast(tt.input,tt.output.length),nt=0,rt=0;rt<et.length;rt++)for(var it in et[rt]){var st=t[$].output[rt][it]-et[rt][it];nt+=st*st}if(r+=nt,Math.abs(nt)>this.trainOpts.errorThresh){var at=t[$];n.push({input:at.input,output:at.output,actual:et})}}break;default:throw new Error("unknown data shape or configuration")}return{error:r/e.length,misclasses:n,total:e.length}}},{key:"addFormat",value:function(t){switch(f.default.dataShape(t).join(",")){case"array,array,number":case"datum,array,array,number":case"array,number":case"datum,array,number":return;case"datum,object,number":this.inputLookup=f.default.addKeys(t.input,this.inputLookup),this.inputLookup&&(this.inputLookupLength=Object.keys(this.inputLookup).length),this.outputLookup=f.default.addKeys(t.output,this.outputLookup),this.outputLookup&&(this.outputLookupLength=Object.keys(this.outputLookup).length);break;case"object,number":this.inputLookup=this.outputLookup=f.default.addKeys(t,this.inputLookup),this.inputLookup&&(this.inputLookupLength=this.outputLookupLength=Object.keys(this.inputLookup).length);break;case"array,object,number":for(var e=0;e<t.length;e++)this.inputLookup=this.outputLookup=f.default.addKeys(t[e],this.inputLookup),this.inputLookup&&(this.inputLookupLength=this.outputLookupLength=Object.keys(this.inputLookup).length);break;case"datum,array,object,number":for(var n=0;n<t.input.length;n++)this.inputLookup=f.default.addKeys(t.input[n],this.inputLookup),this.inputLookup&&(this.inputLookupLength=Object.keys(this.inputLookup).length);for(var r=0;r<t.output.length;r++)this.outputLookup=f.default.addKeys(t.output[r],this.outputLookup),this.outputLookup&&(this.outputLookupLength=Object.keys(this.outputLookup).length);break;default:throw new Error("unknown data shape or configuration")}}},{key:"toJSON",value:function(){var t=this.constructor.defaults;this.model||this.initialize();var e=this.model,n={};for(var r in t)t.hasOwnProperty(r)&&(n[r]=this[r]);return{type:this.constructor.name,options:n,hiddenLayers:e.hiddenLayers.map(function(t){var e={};for(var n in t)e[n]=t[n].toJSON();return e}),outputConnector:this.model.outputConnector.toJSON(),output:this.model.output.toJSON()}}},{key:"fromJSON",value:function(t){var e=this.constructor.defaults,n=t.options;this.model=null,this.hiddenLayers=null;var r=[],s=[];(t.hiddenLayers||t.hiddenSizes).forEach(function(t){var e={};for(var n in t)e[n]=i.default.fromJSON(t[n]),r.push(e[n]);s.push(e)});var a=i.default.fromJSON(t.outputConnector);r.push(a);var o=i.default.fromJSON(t.output);r.push(o),Object.assign(this,e,n),n.hiddenSizes&&(this.hiddenLayers=n.hiddenSizes),this.model={hiddenLayers:s,output:o,allMatrices:r,outputConnector:a,equations:[],equationConnections:[]},this.initialLayerInputs=this.hiddenLayers.map(function(t){return new i.default(t,1)}),this.bindEquation()}},{key:"toFunction",value:function(){var t=this.model,e=this.model.equations,n=this.inputSize,r=this.inputLookup,i=this.inputLookupLength,s=this.outputLookup,a=this.outputLookupLength,o=e[1].states,f=JSON.stringify(this.toJSON());function d(n){for(var r=t.equationConnections[0],i=e[0].states,s=0,a=i.length;s<a;s++)if(i[s].product===n)return s;return r.indexOf(n)}function g(e,n){if(!e||!e.rows||!e.columns)return"null";if(e===t.outputConnector)return"json.outputConnector";if(e===t.output)return"json.output";for(var r=0,i=t.hiddenLayers.length;r<i;r++){var s=t.hiddenLayers[r];for(var a in s)if(s.hasOwnProperty(a)&&s[a]===e)return"json.hiddenLayers["+r+"]."+a}return function(t,e){for(var n=0,r=o.length;n<r;n++){var i=o[n];if(n===e){var s=d(t);switch(t){case i.left:if(s>-1)return"typeof prevStates["+s+"] === 'object' ? prevStates["+s+"].product : new Matrix("+t.rows+", "+t.columns+")";case i.right:if(s>-1)return"typeof prevStates["+s+"] === 'object' ? prevStates["+s+"].product : new Matrix("+t.rows+", "+t.columns+")";case i.product:return"new Matrix("+t.rows+", "+t.columns+")";default:throw Error("unknown state")}}if(t===i.product)return"states["+n+"].product";if(t===i.right)return"states["+n+"].right";if(t===i.left)return"states["+n+"].left"}}(e,n)}function v(t){return"src/recurrent/matrix/"+t.replace(/[A-Z]/g,function(t){return"-"+t.toLowerCase()})+".js"}for(var y,m=[],b={},x=[],_=0,T=o.length;_<T;_++){var w=o[_];m.push("states["+_+"] = {\n      name: '"+w.forwardFn.name+"',\n      left: "+g(w.left,_)+",\n      right: "+g(w.right,_)+",\n      product: "+g(w.product,_)+"\n    }");var E=w.forwardFn.name;b[E]||(b[E]=!0,x.push("        case '"+E+"':"+("forwardFn"!==E?" //compiled from "+v(E):"")+"\n          "+((y=(y=w.forwardFn.toString()).toString().split("{")).shift(),(y=(y=y.join("{")).split("}")).pop(),y.join("}").split("\n").join("\n        ").replace("product.weights = _input.weights = _this.inputValue;",r&&1===n?"product.weights = _i < input.length ? input[_i]: prevStates[prevStates.length - 1].product.weights;":1===n?"product.weights = [input[_i]];":"product.weights = input[_i];").replace("product.deltas[i] = 0;","").replace("product.deltas[column] = 0;","").replace("left.deltas[leftIndex] = 0;","").replace("right.deltas[rightIndex] = 0;","").replace("product.deltas = left.deltas.slice(0);",""))+"\n          break;"))}var k=1===this.inputSize&&this.outputLookup,S="\n  var input = "+(this.inputLookup?"lookupInput(rawInput)":"rawInput")+";\n  var json = "+f+";\n  var output = [];\n  var states = [];\n  var prevStates;\n  var state;\n  var max = "+(k?r===s?i:"input.length + "+(a-1):"input.length")+";\n  for (var _i = 0; _i < max; _i++) {\n    prevStates = states;\n    states = [];\n    "+m.join(";\n    ")+";\n    for (var stateIndex = 0, stateMax = "+m.length+"; stateIndex < stateMax; stateIndex++) {\n      state = states[stateIndex];\n      var product = state.product;\n      var left = state.left;\n      var right = state.right;\n      \n      switch (state.name) {\n"+x.join("\n")+"\n      }\n    }\n    "+(1===n&&r?"if (_i >= input.length - 1) { output.push(state.product.weights); }":"output = state.product.weights;")+"\n  }\n  "+(s?s===r?"return lookupOutputPartial(output, input)":"return lookupOutput(output)":1===n?"return output[0]":"return output")+";\n  "+(r?1===n?r===s?"function lookupInput(input) {\n            var table = "+JSON.stringify(r)+";\n            var result = [];\n            for (var p in table) {\n              if (!input.hasOwnProperty(p)) break;\n              result.push(Float32Array.from([input[p]]));\n            }\n            return result;\n          }":"function lookupInput(input) {\n          var table = "+JSON.stringify(r)+";\n          var result = [];\n          for (var p in table) {\n            result.push(Float32Array.from([input[p]]));\n          }\n          return result;\n        }":"function lookupInput(rawInputs) {\n        var table = "+JSON.stringify(r)+";\n        var result = [];\n        for (var i = 0; i < rawInputs.length; i++) {\n          var rawInput = rawInputs[i];\n          var input = new Float32Array("+i+");\n          for (var p in table) {\n            input[table[p]] = rawInput.hasOwnProperty(p) ? rawInput[p] : 0;\n          }\n          result.push(input);\n        }\n        return result;\n      }":"")+"\n  "+(s?1===n?r===s?"function lookupOutputPartial(output, input) {\n            var table = "+JSON.stringify(s)+";\n            var offset = input.length;\n            var result = {};\n            var i = 0;\n            for (var p in table) {\n              if (i++ < offset) continue;\n              result[p] = output[table[p] - offset][0];\n            }\n            return result;\n          }":"function lookupOutput(output) {\n          var table = "+JSON.stringify(s)+";\n          var result = {};\n          for (var p in table) {\n            result[p] = output[table[p]][0];\n          }\n          return result;\n        }":"function lookupOutput(output) {\n        var table = "+JSON.stringify(s)+";\n        var result = {};\n        for (var p in table) {\n          result[p] = output[table[p]];\n        }\n        return result;\n      }":"")+"\n  \n  function Matrix(rows, columns) {\n    this.rows = rows;\n    this.columns = columns;\n    this.weights = zeros(rows * columns);\n  }\n  "+u.default.toString()+"\n  "+h.default.toString().replace("_2.default","Matrix")+"\n  "+l.randomF.toString()+"\n  "+c.default.toString()+"\n  "+p.default.toString();return new Function("rawInput",S)}}]),e}();e.default=m,m.defaults={inputSize:1,hiddenLayers:[20],outputSize:1,learningRate:o.default.defaults.learningRate,decayRate:o.default.defaults.decayRate,smoothEps:o.default.defaults.smoothEps,regc:o.default.defaults.regc,clipval:o.default.defaults.clipval},m.trainDefaults=o.default.trainDefaults},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default=function(t){for(var e=new s.default(t.rows,t.columns),n=-999999,r=0;r<t.weights.length;r++)t.weights[r]>n&&(n=t.weights[r]);for(var i=0,a=0;a<t.weights.length;a++)e.weights[a]=Math.exp(t.weights[a]-n),i+=e.weights[a];for(var o=0;o<t.weights.length;o++)e.weights[o]/=i;return e};var r,i=n(31),s=(r=i)&&r.__esModule?r:{default:r}},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,function(t,e,n){"use strict";var r=n(30);t.exports=function(){var t=r(this),e="";return t.global&&(e+="g"),t.ignoreCase&&(e+="i"),t.multiline&&(e+="m"),t.unicode&&(e+="u"),t.sticky&&(e+="y"),e}},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.Block=void 0;var r=s(n(315)),i=s(n(316));function s(t){return t&&t.__esModule?t:{default:t}}e.default=r.default,e.Block=i.default,"undefined"!=typeof window&&(window.Thaw=r.default,window.Thaw.Block=i.default)},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default=function(t){return Math.max.apply(Math,(0,s.default)(t))};var r,i=n(141),s=(r=i)&&r.__esModule?r:{default:r}},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default=function(t){for(var e=0,n=0;n<t.length;n++)e+=t[n]*t[n];return e/t.length}},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default=function(t){for(var e=new Float32Array(t),n=0;n<t;n++)e[n]=(0,s.default)();return e};var r,i=n(196),s=(r=i)&&r.__esModule?r:{default:r}},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default=function(){return.4*Math.random()-.2}},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default=function(t,e){for(var n=[];t<e;t++)n.push(t);return n}},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default=function(t,e){if(this.length=0,e){this.prop=e;for(var n=this.table={},r=0;r<t.length;r++){var i=t[r],s=i[e];for(var a in s)n.hasOwnProperty(a)||(n[a]=this.length++)}}else if(Array.isArray(t[0]))for(var o=this.table={},u=0;u<t.length;u++)for(var h=t[u],l=0;l<h.length;l++){var c=h[l];for(var p in c)o.hasOwnProperty(p)||(o[p]=this.length++)}else for(var f=this.table={},d=0;d<t.length;d++){var g=t[d];for(var v in g)f.hasOwnProperty(v)||(f[v]=this.length++)}}},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.arraysToFloat32Arrays=function(t){for(var e=[],n=0;n<t.length;n++)e.push(Float32Array.from(t[n]));return e},e.arrayToFloat32Arrays=function(t){for(var e=[],n=0;n<t.length;n++)e.push(Float32Array.from([t[n]]));return e},e.arrayToFloat32Array=function(t){return Float32Array.from(t)},e.objectsToFloat32Arrays=function(t,e,n){for(var r=[],i=0;i<t.length;i++){var s=t[i],a=new Float32Array(n);for(var o in s)s.hasOwnProperty(o)&&(a[e[o]]=s[o]);r.push(a)}return r},e.objectToFloat32Arrays=function(t){var e=[];for(var n in t)e.push(Float32Array.from([t[n]]));return e},e.objectToFloat32Array=function(t,e,n){var r=new Float32Array(n);for(var i in t)t.hasOwnProperty(i)&&(r[e[i]]=t[i]);return r}},function(t,e,n){"use strict";var r=function(){function t(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}return function(e,n,r){return n&&t(e.prototype,n),r&&t(e,r),e}}();var i=function(){function t(){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t)}return r(t,null,[{key:"isCanvas",value:function(t){return null!==t&&(t.nodeName&&t.getContext&&"CANVAS"===t.nodeName.toUpperCase()||"undefined"!=typeof OffscreenCanvas&&t instanceof OffscreenCanvas)}},{key:"isCanvasSupported",value:function(){return s}},{key:"initCanvas",value:function(){if(!s)return null;var t="undefined"!=typeof document?document.createElement("canvas"):new OffscreenCanvas(0,0);return t.width=2,t.height=2,t}},{key:"isWebGl",value:function(t){return t&&"function"==typeof t.getExtension}},{key:"isWebGl2",value:function(t){return t&&"undefined"!=typeof WebGL2RenderingContext&&t instanceof WebGL2RenderingContext}},{key:"isWebGlSupported",value:function(){return u}},{key:"isWebGl2Supported",value:function(){return h}},{key:"isWebGlDrawBuffersSupported",value:function(){return l}},{key:"initWebGlDefaultOptions",value:function(){return{alpha:!1,depth:!1,antialias:!1}}},{key:"initWebGl",value:function(e){if((void 0!==s||null===e)&&!s)return null;if(!t.isCanvas(e))throw new Error("Invalid canvas object - "+e);var n=null,r=t.initWebGlDefaultOptions();try{n=e.getContext("experimental-webgl",r)}catch(t){}return null===n&&(n=e.getContext("webgl2",r)||e.getContext("webgl",r)),n&&(n.OES_texture_float=n.getExtension("OES_texture_float"),n.OES_texture_float_linear=n.getExtension("OES_texture_float_linear"),n.OES_element_index_uint=n.getExtension("OES_element_index_uint")),n}},{key:"initWebGl2",value:function(e){if((void 0!==s||null===e)&&!s)return null;if(!t.isCanvas(e))throw new Error("Invalid canvas object - "+e);return e.getContext("webgl2",t.initWebGlDefaultOptions())}},{key:"checkOutput",value:function(t){if(!t||!Array.isArray(t))throw new Error("kernel.output not an array");for(var e=0;e<t.length;e++)if(isNaN(t[e])||t[e]<1)throw new Error("kernel.output["+e+"] incorrectly defined as `"+t[e]+"`, needs to be numeric, and greater than 0")}}]),t}(),s="undefined"!=typeof document?i.isCanvas(document.createElement("canvas")):"undefined"!=typeof OffscreenCanvas,a=i.initWebGl(i.initCanvas()),o=i.initWebGl2(i.initCanvas()),u=i.isWebGl(a),h=i.isWebGl2(o),l=u&&Boolean(a.getExtension("WEBGL_draw_buffers"));u?(i.OES_texture_float=a.OES_texture_float,i.OES_texture_float_linear=a.OES_texture_float_linear,i.OES_element_index_uint=a.OES_element_index_uint):(i.OES_texture_float=!1,i.OES_texture_float_linear=!1,i.OES_element_index_uint=!1),t.exports=i},function(t,e,n){"use strict";var r=function(){function t(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}return function(e,n,r){return n&&t(e.prototype,n),r&&t(e,r),e}}();var i=n(142),s=n(95),a=n(203);t.exports=function(t){function e(t){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e);var n=function(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}(this,(e.__proto__||Object.getPrototypeOf(e)).call(this,new a,t));return n.Kernel=s,n.kernel=null,n}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}(e,i),r(e,[{key:"getMode",value:function(){return"gpu"}}]),e}()},function(t,e,n){"use strict";var r=function(){function t(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}return function(e,n,r){return n&&t(e.prototype,n),r&&t(e,r),e}}();var i=n(13),s=n(94);t.exports=function(){function t(e,n){for(var r in function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.paramNames=i.getParamNamesFromString(e),this.fnString=e,this.output=null,this.debug=!1,this.graphical=!1,this.loopMaxIterations=0,this.constants=null,this.wraparound=null,this.hardcodeConstants=null,this.outputToTexture=null,this.outputImmutable=null,this.texSize=null,this._canvas=null,this._webGl=null,this.threadDim=null,this.floatTextures=null,this.floatOutput=null,this.floatOutputForce=null,this.addFunction=null,this.functions=null,this.nativeFunctions=null,this.subKernels=null,this.subKernelProperties=null,this.subKernelNames=null,this.subKernelOutputVariableNames=null,this.functionBuilder=null,this.paramTypes=null,this.paramSizes=null,this.constantTypes=null,this.fixIntegerDivisionAccuracy=null,n)n.hasOwnProperty(r)&&this.hasOwnProperty(r)&&(this[r]=n[r]);n.hasOwnProperty("canvas")&&(this._canvas=n.canvas),n.hasOwnProperty("webGl")&&(this._webGl=n.webGl),n.hasOwnProperty("output")&&this.setOutput(n.output),this._canvas||(this._canvas=i.initCanvas())}return r(t,[{key:"build",value:function(){throw new Error('"build" not defined on Base')}},{key:"setupParams",value:function(t){this.paramTypes=[],this.paramSizes=[];for(var e=0;e<t.length;e++){var n=t[e];this.paramTypes.push(i.getArgumentType(n)),this.paramSizes.push(n.constructor===s?n.size:null)}}},{key:"setupConstants",value:function(){if(this.constantTypes={},this.constants)for(var t in this.constants)this.constantTypes[t]=i.getArgumentType(this.constants[t])}},{key:"setFunctions",value:function(t){return this.functions=t,this}},{key:"setOutput",value:function(t){return t.hasOwnProperty("x")?t.hasOwnProperty("y")?t.hasOwnProperty("z")?this.output=[t.x,t.y,t.z]:this.output=[t.x,t.y]:this.output=[t.x]:this.output=t,this}},{key:"setDebug",value:function(t){return this.debug=t,this}},{key:"setGraphical",value:function(t){return this.graphical=t,this}},{key:"setLoopMaxIterations",value:function(t){return this.loopMaxIterations=t,this}},{key:"setFixIntegerDivisionAccuracy",value:function(t){return this.fixIntegerDivisionAccuracy=t,this}},{key:"setConstants",value:function(t){return this.constants=t,this}},{key:"setWraparound",value:function(t){return console.warn("Wraparound mode is not supported and undocumented."),this.wraparound=t,this}},{key:"setHardcodeConstants",value:function(t){return this.hardcodeConstants=t,this}},{key:"setOutputToTexture",value:function(t){return this.outputToTexture=t,this}},{key:"setOutputImmutable",value:function(t){return this.outputImmutable=t,this}},{key:"setFloatTextures",value:function(t){return this.floatTextures=t,this}},{key:"setFloatOutput",value:function(t){return this.floatOutput=t,this}},{key:"setFloatOutputForce",value:function(t){return this.floatOutputForce=t,this}},{key:"setCanvas",value:function(t){return this._canvas=t,this}},{key:"setWebGl",value:function(t){return this._webGl=t,this}},{key:"getCanvas",value:function(){return this._canvas}},{key:"getWebGl",value:function(){return this._webGl}},{key:"validateOptions",value:function(){throw new Error("validateOptions not defined")}},{key:"exec",value:function(){return this.execute.apply(this,arguments)}},{key:"execute",value:function(){var t=this,e=1===arguments.length?[arguments[0]]:Array.apply(null,arguments);return i.newPromise(function(n,r){try{n(t.run.apply(t,e))}catch(t){r(t)}})}},{key:"addSubKernel",value:function(t){return null===this.subKernels&&(this.subKernels=[],this.subKernelNames=[]),this.subKernels.push(t),this.subKernelNames.push(i.getFunctionNameFromString(t)),this}},{key:"addSubKernelProperty",value:function(t,e){if(null===this.subKernelProperties&&(this.subKernelProperties={},this.subKernelNames=[]),this.subKernelProperties.hasOwnProperty(t))throw new Error("cannot add sub kernel "+t+", already defined");return this.subKernelProperties[t]=e,this.subKernelNames.push(i.getFunctionNameFromString(e)),this}},{key:"addNativeFunction",value:function(t,e){this.functionBuilder.addNativeFunction(t,e)}},{key:"destroy",value:function(){}}]),t}()},function(t,e,n){"use strict";var r=function(){function t(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}return function(e,n,r){return n&&t(e.prototype,n),r&&t(e,r),e}}();var i=n(144),s=n(145);function a(t){return Math.floor(t+.5)}t.exports=function(t){function e(){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e);var t=function(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}(this,(e.__proto__||Object.getPrototypeOf(e)).call(this));return t.Node=s,t}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}(e,i),r(e,[{key:"polyfillStandardFunctions",value:function(){this.addFunction("round",a)}}],[{key:"round",value:function(t){return a(t)}}]),e}()},function(module,exports,__webpack_require__){"use strict";var _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},_createClass=function(){function t(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}return function(e,n,r){return n&&t(e.prototype,n),r&&t(e,r),e}}();function _classCallCheck(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}var utils=__webpack_require__(13),acorn=__webpack_require__(322);module.exports=function(){function BaseFunctionNode(t,e,n){_classCallCheck(this,BaseFunctionNode),this.calledFunctions=[],this.calledFunctionsArguments={},this.builder=null,this.isRootKernel=!1,this.isSubKernel=!1,this.parent=null,this.debug=null,this.prototypeOnly=null,this.constants=null,this.output=null,this.declarations={},this.states=[],this.fixIntegerDivisionAccuracy=null;var r=void 0,i=void 0;if(n&&(n.hasOwnProperty("debug")&&(this.debug=n.debug),n.hasOwnProperty("prototypeOnly")&&(this.prototypeOnly=n.prototypeOnly),n.hasOwnProperty("constants")&&(this.constants=n.constants),n.hasOwnProperty("output")&&(this.output=n.output),n.hasOwnProperty("loopMaxIterations")&&(this.loopMaxIterations=n.loopMaxIterations),n.hasOwnProperty("paramTypes")&&(this.paramTypes=r=n.paramTypes),n.hasOwnProperty("constantTypes")?this.constantTypes=n.constantTypes:this.constantTypes={},n.hasOwnProperty("returnType")&&(i=n.returnType),n.hasOwnProperty("fixIntegerDivisionAccuracy")&&(this.fixIntegerDivisionAccuracy=n.fixIntegerDivisionAccuracy)),!e)throw"jsFunction, parameter is missing";if(this.jsFunctionString=e.toString(),!utils.isFunctionString(this.jsFunctionString))throw console.error("jsFunction, to string conversion check failed: not a function?",this.jsFunctionString),"jsFunction, to string conversion check failed: not a function?";if(utils.isFunction(e)?this.jsFunction=e:this.jsFunction=null,this.functionName=t||e&&e.name||utils.getFunctionNameFromString(this.jsFunctionString),!this.functionName)throw"jsFunction, missing name argument or value";if(this.paramNames=utils.getParamNamesFromString(this.jsFunctionString),r){if(Array.isArray(r)){if(r.length!==this.paramNames.length)throw"Invalid argument type array length, against function length -> ("+r.length+","+this.paramNames.length+")";this.paramTypes=r}else if("object"===(void 0===r?"undefined":_typeof(r))){var s=Object.keys(r);if(r.hasOwnProperty("returns")&&(this.returnType=r.returns,s.splice(s.indexOf("returns"),1)),s.length>0&&s.length!==this.paramNames.length)throw"Invalid argument type array length, against function length -> ("+s.length+","+this.paramNames.length+")";this.paramTypes=this.paramNames.map(function(t){return r.hasOwnProperty(t)?r[t]:"Number"})}}else this.paramTypes=[];this.returnType||(this.returnType=i||"Number")}return _createClass(BaseFunctionNode,[{key:"isIdentifierConstant",value:function(t){return!!this.constants&&this.constants.hasOwnProperty(t)}},{key:"isInput",value:function(t){return"Input"===this.paramTypes[this.paramNames.indexOf(t)]}},{key:"setBuilder",value:function(t){return this.builder=t,this}},{key:"pushState",value:function(t){this.states.push(t)}},{key:"popState",value:function(t){if(this.state!==t)throw new Error("Cannot popState "+t+" when in "+this.state);this.states.pop()}},{key:"isState",value:function(t){return this.state===t}},{key:"getJsFunction",value:function getJsFunction(){if(this.jsFunction)return this.jsFunction;if(this.jsFunctionString)return this.jsFunction=eval(this.jsFunctionString),this.jsFunction;throw"Missing jsFunction, and jsFunctionString parameter"}},{key:"astMemberExpressionUnroll",value:function(t){if("Identifier"===t.type)return t.name;if("ThisExpression"===t.type)return"this";if("MemberExpression"===t.type&&t.object&&t.property)return t.object.hasOwnProperty("name")&&"_"===t.object.name[0]?this.astMemberExpressionUnroll(t.property):this.astMemberExpressionUnroll(t.object)+"."+this.astMemberExpressionUnroll(t.property);if(t.hasOwnProperty("expressions")){var e=t.expressions[0];if("Literal"===e.type&&0===e.value&&2===t.expressions.length)return this.astMemberExpressionUnroll(t.expressions[1])}throw this.astErrorOutput("Unknown CallExpression_unroll",t)}},{key:"getJsAST",value:function(t){if(this.jsFunctionAST)return this.jsFunctionAST;if(null===(t=t||acorn))throw"Missing JS to AST parser";var e=t.parse("var "+this.functionName+" = "+this.jsFunctionString+";",{locations:!0});if(null===e)throw"Failed to parse JS code";var n=e.body[0].declarations[0].init;return this.jsFunctionAST=n,n}},{key:"getFunctionString",value:function(){return this.generate(),this.functionString}},{key:"setFunctionString",value:function(t){this.functionString=t}},{key:"getParamType",value:function(t){var e=this.paramNames.indexOf(t);if(-1===e)return this.declarations.hasOwnProperty(t)?this.declarations[t]:"Number";if(this.parent){if(this.paramTypes[e])return this.paramTypes[e];for(var n=this.parent.calledFunctionsArguments[this.functionName],r=0;r<n.length;r++){var i=n[r];if(null!==i[e])return this.paramTypes[e]=i[e].type}}else if(this.paramTypes[e])return this.paramTypes[e];return"Number"}},{key:"getConstantType",value:function(t){return this.constantTypes[t]?this.constantTypes[t]:null}},{key:"getUserParamName",value:function(t){var e=this.paramNames.indexOf(t);if(-1===e)return null;if(!this.parent||!this.isSubKernel)return null;for(var n=this.parent.calledFunctionsArguments[this.functionName],r=0;r<n.length;r++){var i=n[r][e];if(null!==i&&"Integer"!==i.type)return i.name}return null}},{key:"generate",value:function(t){throw new Error("generate not defined on BaseFunctionNode")}},{key:"astGeneric",value:function(t,e){if(null===t)throw this.astErrorOutput("NULL ast",t);if(Array.isArray(t)){for(var n=0;n<t.length;n++)this.astGeneric(t[n],e);return e}switch(t.type){case"FunctionDeclaration":return this.astFunctionDeclaration(t,e);case"FunctionExpression":return this.astFunctionExpression(t,e);case"ReturnStatement":return this.astReturnStatement(t,e);case"Literal":return this.astLiteral(t,e);case"BinaryExpression":return this.astBinaryExpression(t,e);case"Identifier":return this.astIdentifierExpression(t,e);case"AssignmentExpression":return this.astAssignmentExpression(t,e);case"ExpressionStatement":return this.astExpressionStatement(t,e);case"EmptyStatement":return this.astEmptyStatement(t,e);case"BlockStatement":return this.astBlockStatement(t,e);case"IfStatement":return this.astIfStatement(t,e);case"BreakStatement":return this.astBreakStatement(t,e);case"ContinueStatement":return this.astContinueStatement(t,e);case"ForStatement":return this.astForStatement(t,e);case"WhileStatement":return this.astWhileStatement(t,e);case"DoWhileStatement":return this.astDoWhileStatement(t,e);case"VariableDeclaration":return this.astVariableDeclaration(t,e);case"VariableDeclarator":return this.astVariableDeclarator(t,e);case"ThisExpression":return this.astThisExpression(t,e);case"SequenceExpression":return this.astSequenceExpression(t,e);case"UnaryExpression":return this.astUnaryExpression(t,e);case"UpdateExpression":return this.astUpdateExpression(t,e);case"LogicalExpression":return this.astLogicalExpression(t,e);case"MemberExpression":return this.astMemberExpression(t,e);case"CallExpression":return this.astCallExpression(t,e);case"ArrayExpression":return this.astArrayExpression(t,e);case"DebuggerStatement":return this.astDebuggerStatement(t,e)}throw this.astErrorOutput("Unknown ast type : "+t.type,t)}},{key:"astErrorOutput",value:function(t,e){return console.error(utils.getAstString(this.jsFunctionString,e)),console.error(t,e,this),t}},{key:"astDebuggerStatement",value:function(t,e){return e}},{key:"astFunctionDeclaration",value:function(t,e){return e}},{key:"astFunctionExpression",value:function(t,e){return e}},{key:"astReturnStatement",value:function(t,e){return e}},{key:"astLiteral",value:function(t,e){return e}},{key:"astBinaryExpression",value:function(t,e){return e}},{key:"astIdentifierExpression",value:function(t,e){return e}},{key:"astAssignmentExpression",value:function(t,e){return e}},{key:"astExpressionStatement",value:function(t,e){return e}},{key:"astEmptyStatement",value:function(t,e){return e}},{key:"astBlockStatement",value:function(t,e){return e}},{key:"astIfStatement",value:function(t,e){return e}},{key:"astBreakStatement",value:function(t,e){return e}},{key:"astContinueStatement",value:function(t,e){return e}},{key:"astForStatement",value:function(t,e){return e}},{key:"astWhileStatement",value:function(t,e){return e}},{key:"astDoWhileStatement",value:function(t,e){return e}},{key:"astVariableDeclaration",value:function(t,e){return e}},{key:"astVariableDeclarator",value:function(t,e){return e}},{key:"astThisExpression",value:function(t,e){return e}},{key:"astSequenceExpression",value:function(t,e){return e}},{key:"astUnaryExpression",value:function(t,e){return e}},{key:"astUpdateExpression",value:function(t,e){return e}},{key:"astLogicalExpression",value:function(t,e){return e}},{key:"astMemberExpression",value:function(t,e){return e}},{key:"astCallExpression",value:function(t,e){return e}},{key:"astArrayExpression",value:function(t,e){return e}},{key:"pushParameter",value:function(t,e){this.isState("in-get-call-parameters")?t.push("int("+e+")"):t.push(e)}},{key:"state",get:function(){return this.states[this.states.length-1]}}]),BaseFunctionNode}()},function(t,e,n){"use strict";var r=function(){function t(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}return function(e,n,r){return n&&t(e.prototype,n),r&&t(e,r),e}}();var i=n(142),s=n(206),a=n(146);t.exports=function(t){function e(t){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e);var n=function(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}(this,(e.__proto__||Object.getPrototypeOf(e)).call(this,new s,t));return n.Kernel=a,n.kernel=null,n}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}(e,i),r(e,[{key:"getMode",value:function(){return"gpu"}}]),e}()},function(t,e,n){"use strict";var r=n(144),i=n(207);t.exports=function(t){function e(){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e);var t=function(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}(this,(e.__proto__||Object.getPrototypeOf(e)).call(this));return t.Node=i,t}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}(e,r),e}()},function(t,e,n){"use strict";var r=function(){function t(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}return function(e,n,r){return n&&t(e.prototype,n),r&&t(e,r),e}}();var i=n(145),s=/decode32\(\s+encode32\(/g,a=/encode32\(\s+decode32\(/g;t.exports=function(t){function e(){return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),function(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}(this,(e.__proto__||Object.getPrototypeOf(e)).apply(this,arguments))}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}(e,i),r(e,[{key:"generate",value:function(){return this.debug&&console.log(this),this.prototypeOnly?this.astFunctionPrototype(this.getJsAST(),[]).join("").trim():(this.functionStringArray=this.astGeneric(this.getJsAST(),[]),this.functionString=this.functionStringArray.join("").trim().replace(s,"((").replace(a,"(("),this.functionString)}},{key:"astIdentifierExpression",value:function(t,e){if("Identifier"!==t.type)throw this.astErrorOutput("IdentifierExpression - not an Identifier",t);var n=!this.isState("in-get-call-parameters");switch(t.name){case"gpu_threadX":n&&e.push("float("),e.push("threadId.x"),n&&e.push(")");break;case"gpu_threadY":n&&e.push("float("),e.push("threadId.y"),n&&e.push(")");break;case"gpu_threadZ":n&&e.push("float("),e.push("threadId.z"),n&&e.push(")");break;case"gpu_outputX":e.push("uOutputDim.x");break;case"gpu_outputY":e.push("uOutputDim.y");break;case"gpu_outputZ":e.push("uOutputDim.z");break;case"Infinity":e.push("intBitsToFloat(2139095039)");break;default:var r=this.getUserParamName(t.name);null!==r?this.pushParameter(e,"user_"+r):this.pushParameter(e,"user_"+t.name)}return e}}]),e}()},function(t,e,n){"use strict";var r=function(){function t(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}return function(e,n,r){return n&&t(e.prototype,n),r&&t(e,r),e}}();n(13);var i=n(142),s=n(209),a=n(210);t.exports=function(t){function e(t){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e);var n=function(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}(this,(e.__proto__||Object.getPrototypeOf(e)).call(this,new a,t));return n.Kernel=s,n.kernel=null,n}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}(e,i),r(e,[{key:"getMode",value:function(){return"cpu"}}]),e}()},function(t,e,n){"use strict";var r=function(){function t(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}return function(e,n,r){return n&&t(e.prototype,n),r&&t(e,r),e}}();var i=n(202),s=n(13),a=n(325);t.exports=function(t){function e(t,n){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e);var r=function(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}(this,(e.__proto__||Object.getPrototypeOf(e)).call(this,t,n));return r._fn=null,r.run=null,r._canvasCtx=null,r._imageData=null,r._colorData=null,r._kernelString=null,r.thread={x:0,y:0,z:0},r.run=function(){return this.run=null,this.build.apply(this,arguments),this.run.apply(this,arguments)}.bind(r),r}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}(e,i),r(e,[{key:"validateOptions",value:function(){if(!this.output||0===this.output.length){if(1!==arguments.length)throw"Auto dimensions only supported for kernels with only one input";var t=s.getArgumentType(arguments[0]);if("Array"===t)this.output=s.getDimensions(t);else{if("NumberTexture"!==t&&"ArrayTexture(4)"!==t)throw"Auto dimensions not supported for input type: "+t;this.output=arguments[0].output}}s.checkOutput(this.output)}},{key:"build",value:function(){this.setupConstants(),this.setupParams(arguments),this.validateOptions();var t=this._canvas;t&&(this._canvasCtx=t.getContext("2d"));for(var e=this.threadDim=s.clone(this.output);e.length<3;)e.push(1);if(this.graphical){var n=this._canvas;if(!n)throw new Error("no canvas available for using graphical output");n.width=e[0],n.height=e[1],this._imageData=this._canvasCtx.createImageData(e[0],e[1]),this._colorData=new Uint8ClampedArray(e[0]*e[1]*4)}var r=this.getKernelString();this.debug&&(console.log("Options:"),console.dir(this),console.log("Function output:"),console.log(r)),this.kernelString=r,this.run=new Function([],r).bind(this)()}},{key:"color",value:function(t,e,n,r){void 0===r&&(r=1),t=Math.floor(255*t),e=Math.floor(255*e),n=Math.floor(255*n),r=Math.floor(255*r);var i=this.output[0],s=this.output[1],a=this.thread.x+(s-this.thread.y-1)*i;this._colorData[4*a+0]=t,this._colorData[4*a+1]=e,this._colorData[4*a+2]=n,this._colorData[4*a+3]=r}},{key:"getKernelString",value:function(){if(null!==this._kernelString)return this._kernelString;for(var t=this.functionBuilder,e=this.threadDim||(this.threadDim=s.clone(this.output));e.length<3;)e.push(1);if(t.addKernel(this.fnString,{prototypeOnly:!1,constants:this.constants,output:e,debug:this.debug,loopMaxIterations:this.loopMaxIterations,paramNames:this.paramNames,paramTypes:this.paramTypes,paramSizes:this.paramSizes,constantTypes:this.constantTypes}),t.addFunctions(this.functions,{constants:this.constants,output:e}),t.addNativeFunctions(this.nativeFunctions),null!==this.subKernels){this.subKernelOutputTextures=[],this.subKernelOutputVariableNames=[];for(var n=0;n<this.subKernels.length;n++){var r=this.subKernels[n];t.addSubKernel(r,{prototypeOnly:!1,constants:this.constants,output:this.output,debug:this.debug,loopMaxIterations:this.loopMaxIterations}),this.subKernelOutputVariableNames.push(r.name+"Result")}}else if(null!==this.subKernelProperties){this.subKernelOutputVariableNames=[];for(var i in this.subKernelProperties)if(this.subKernelProperties.hasOwnProperty(i)){var a=this.subKernelProperties[i];t.addSubKernel(a),this.subKernelOutputVariableNames.push(a.name+"Result"),0}}var o=t.getPrototypes("kernel"),u=null;return o.length>1?o=o.filter(function(t){return/^function/.test(t)?t:(u=t,!1)}):u=o.shift(),this._kernelString="\n\t\tvar LOOP_MAX = "+this._getLoopMaxString()+"\n\t\tvar constants = this.constants;\n\t\tvar _this = this;\n    return function ("+this.paramNames.map(function(t){return"user_"+t}).join(", ")+") {\n      "+this._processConstants()+"\n      "+this._processParams()+"\n      "+this._kernelLoop(u)+"\n      if (this.graphical) {\n        this._imageData.data.set(this._colorData);\n        this._canvasCtx.putImageData(this._imageData, 0, 0);\n        return;\n      }\n      "+this._kernelOutput()+"\n      "+(o.length>0?o.join("\n"):"")+"\n    }.bind(this);"}},{key:"toString",value:function(){return a(this)}},{key:"_getLoopMaxString",value:function(){return this.loopMaxIterations?" "+parseInt(this.loopMaxIterations)+";\n":" 1000;\n"}},{key:"_processConstants",value:function(){if(!this.constants)return"";var t=[];for(var e in this.constants){switch(this.constantTypes[e]){case"HTMLImage":t.push("  var constants_"+e+" = this._imageTo2DArray(this.constants."+e+")");break;case"HTMLImageArray":t.push("  var constants_"+e+" = this._imageTo3DArray(this.constants."+e+")");break;case"Input":t.push("  var constants_"+e+" = this.constants."+e+".value");break;default:t.push("  var constants_"+e+" = this.constants."+e)}}return t.join("\n")}},{key:"_processParams",value:function(){for(var t=[],e=0;e<this.paramTypes.length;e++)switch(this.paramTypes[e]){case"HTMLImage":t.push("  user_"+this.paramNames[e]+" = this._imageTo2DArray(user_"+this.paramNames[e]+")");break;case"HTMLImageArray":t.push("  user_"+this.paramNames[e]+" = this._imageTo3DArray(user_"+this.paramNames[e]+")");break;case"Input":t.push("  user_"+this.paramNames[e]+" = user_"+this.paramNames[e]+".value")}return t.join(";\n")}},{key:"_imageTo2DArray",value:function(t){var e=this._canvas;e.width<t.width&&(e.width=t.width),e.height<t.height&&(e.height=t.height);var n=this._canvasCtx;n.drawImage(t,0,0,t.width,t.height);for(var r=n.getImageData(0,0,t.width,t.height).data,i=new Array(t.height),s=0,a=t.height-1;a>=0;a--){i[a]=new Array(t.width);for(var o=0;o<t.width;o++){var u=r[s++]/255,h=r[s++]/255,l=r[s++]/255,c=r[s++]/255,p=[u,h,l,c];p.r=u,p.g=h,p.b=l,p.a=c,i[a][o]=p}}return i}},{key:"_imageTo3DArray",value:function(t){for(var e=new Array(t.length),n=0;n<t.length;n++)e[n]=this._imageTo2DArray(t[n]);return e}},{key:"_kernelLoop",value:function(t){switch(this.output.length){case 1:return this._kernel1DLoop(t);case 2:return this._kernel2DLoop(t);case 3:return this._kernel3DLoop(t);default:throw new Error("unsupported size kernel")}}},{key:"_kernel1DLoop",value:function(t){var e=this.threadDim;return"\n    var result = new Float32Array("+e[0]+");\n    "+this._mapSubKernels(function(t){return"var result_"+t+" = new Float32Array("+e[0]+");\n"}).join("")+"\n    for (var x = 0; x < "+e[0]+"; x++) {\n      this.thread.x = x;\n      this.thread.y = 0;\n      this.thread.z = 0;\n      var kernelResult;\n      "+t+"\n      result[x] = kernelResult;\n      "+this._mapSubKernels(function(t){return"result_"+t+"[x] = "+t+";\n"}).join("")+"\n    }"}},{key:"_kernel2DLoop",value:function(t){var e=this.threadDim;return"\n    var result = new Array("+e[1]+");\n    "+this._mapSubKernels(function(t){return"var result_"+t+" = new Array("+e[1]+");\n"}).join("")+"\n    for (var y = 0; y < "+e[1]+"; y++) {\n      this.thread.z = 0;\n      this.thread.y = y;\n      var resultX = result[y] = new Float32Array("+e[0]+");\n      "+this._mapSubKernels(function(t){return"var result_"+t+"X = result_"+t+"[y] = new Float32Array("+e[0]+");\n"}).join("")+"\n      for (var x = 0; x < "+e[0]+"; x++) {\n      \tthis.thread.x = x;\n        var kernelResult;\n        "+t+"\n        resultX[x] = kernelResult;\n        "+this._mapSubKernels(function(t){return"result_"+t+"X[x] = "+t+";\n"}).join("")+"\n      }\n    }"}},{key:"_kernel3DLoop",value:function(t){var e=this.threadDim;return"\n    var result = new Array("+e[2]+");\n    "+this._mapSubKernels(function(t){return"var result_"+t+" = new Array("+e[2]+");\n"}).join("")+"\n    for (var z = 0; z < "+e[2]+"; z++) {\n      this.thread.z = z;\n      var resultY = result[z] = new Array("+e[1]+");\n      "+this._mapSubKernels(function(t){return"var result_"+t+"Y = result_"+t+"[z] = new Array("+e[1]+");\n"}).join("")+"\n      for (var y = 0; y < "+e[1]+"; y++) {\n        this.thread.y = y;\n        var resultX = resultY[y] = new Float32Array("+e[0]+");\n        "+this._mapSubKernels(function(t){return"var result_"+t+"X = result_"+t+"Y[y] = new Float32Array("+e[0]+");\n"}).join("")+"\n        for (var x = 0; x < "+e[0]+"; x++) {\n        \tthis.thread.x = x;\n          var kernelResult;\n          "+t+"\n          resultX[x] = kernelResult;\n          "+this._mapSubKernels(function(t){return"result_"+t+"X[x] = "+t+";\n"}).join("")+"\n        }\n      }\n    }"}},{key:"_kernelOutput",value:function(){var t=this;return this.subKernelOutputVariableNames?"return {\n      result: result,\n      "+Object.keys(this.subKernelProperties||this.subKernelOutputVariableNames).map(function(e,n){return e+": result_"+t.subKernelOutputVariableNames[n]}).join(",\n")+"\n    };":"return result;"}},{key:"_mapSubKernels",value:function(t){return null===this.subKernelOutputVariableNames?[""]:this.subKernelOutputVariableNames.map(t)}}]),e}()},function(t,e,n){"use strict";var r=n(144),i=n(211);t.exports=function(t){function e(){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e);var t=function(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}(this,(e.__proto__||Object.getPrototypeOf(e)).call(this));return t.Node=i,t}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}(e,r),e}()},function(t,e,n){"use strict";var r=function(){function t(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}return function(e,n,r){return n&&t(e.prototype,n),r&&t(e,r),e}}();var i=n(204),s=n(13);t.exports=function(t){function e(t,n,r){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e);var i=function(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}(this,(e.__proto__||Object.getPrototypeOf(e)).call(this,t,n,r));return i.paramSizes=r?r.paramSizes:[],i.memberStates=[],i}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}(e,i),r(e,[{key:"pushMemberState",value:function(t){this.memberStates.push(t)}},{key:"popMemberState",value:function(t){if(this.memberState!==t)throw new Error("Cannot popMemberState "+t+" when in "+this.memberState);this.memberStates.pop()}},{key:"generate",value:function(){return this.debug&&console.log(this),this.functionStringArray=this.astGeneric(this.getJsAST(),[]),this.functionString=this.functionStringArray.join("").trim(),this.functionString}},{key:"getFunctionPrototypeString",value:function(){return this.webGlFunctionPrototypeString?this.webGlFunctionPrototypeString:this.webGlFunctionPrototypeString=this.generate()}},{key:"astFunctionDeclaration",value:function(t,e){return this.builder.addFunction(null,s.getAstString(this.jsFunctionString,t)),e}},{key:"astFunctionPrototype",value:function(t,e){if(this.isRootKernel||this.isSubKernel)return e;e.push(this.returnType),e.push(" "),e.push(this.functionName),e.push("(");for(var n=0;n<this.paramNames.length;++n)n>0&&e.push(", "),e.push("user_"),e.push(this.paramNames[n]);return e.push(");\n"),e}},{key:"astFunctionExpression",value:function(t,e){if(!this.isRootKernel){e.push("function"),e.push(" "),e.push(this.functionName),e.push("(");for(var n=0;n<this.paramNames.length;++n){var r=this.paramNames[n];n>0&&e.push(", "),e.push("user_"),e.push(r)}e.push(") {\n")}for(var i=0;i<t.body.body.length;++i)this.astGeneric(t.body.body[i],e),e.push("\n");return this.isRootKernel||e.push("}\n"),e}},{key:"astReturnStatement",value:function(t,e){return this.isRootKernel?(e.push("kernelResult = "),this.astGeneric(t.argument,e),e.push(";")):this.isSubKernel?(e.push(this.functionName+"Result = "),this.astGeneric(t.argument,e),e.push(";"),e.push("return "+this.functionName+"Result;")):(e.push("return "),this.astGeneric(t.argument,e),e.push(";")),e}},{key:"astLiteral",value:function(t,e){if(isNaN(t.value))throw this.astErrorOutput("Non-numeric literal not supported : "+t.value,t);return e.push(t.value),e}},{key:"astBinaryExpression",value:function(t,e){return e.push("("),this.astGeneric(t.left,e),e.push(t.operator),this.astGeneric(t.right,e),e.push(")"),e}},{key:"astIdentifierExpression",value:function(t,e){if("Identifier"!==t.type)throw this.astErrorOutput("IdentifierExpression - not an Identifier",t);switch(this.state){case"input-index-y":case"input-index-z":e.push("(")}switch(t.name){case"gpu_threadX":e.push("threadId.x");break;case"gpu_threadY":e.push("threadId.y");break;case"gpu_threadZ":e.push("threadId.z");break;case"gpu_outputX":e.push("uOutputDim.x");break;case"gpu_outputY":e.push("uOutputDim.y");break;case"gpu_outputZ":e.push("uOutputDim.z");break;case"Infinity":e.push("Infinity");break;default:if(this.constants&&this.constants.hasOwnProperty(t.name))e.push("constants_"+t.name);else{var n=this.getUserParamName(t.name);null!==n?e.push("user_"+n):e.push("user_"+t.name)}}switch(this.state){case"input-index-y":var r=this.paramSizes[this.paramNames.indexOf(this.memberState)];e.push(" * "+r[0]+")");break;case"input-index-z":var i=this.paramSizes[this.paramNames.indexOf(this.memberState)];e.push(" * "+i[0]*i[1]+")")}return e}},{key:"astForStatement",value:function(t,e){if("ForStatement"!==t.type)throw this.astErrorOutput("Invalid for statement",t);if(t.test&&"BinaryExpression"===t.test.type){if(("Identifier"===t.test.right.type||"Literal"===t.test.right.type)&&"<"===t.test.operator&&!1===this.isIdentifierConstant(t.test.right.name)){if(this.loopMaxIterations||(console.warn("Warning: loopMaxIterations is not set! Using default of 1000 which may result in unintended behavior."),console.warn("Set loopMaxIterations or use a for loop of fixed length to silence this message.")),e.push("for ("),this.astGeneric(t.init,e),";"!==e[e.length-1]&&e.push(";"),this.astGeneric(t.test.left,e),e.push(t.test.operator),e.push("LOOP_MAX"),e.push(";"),this.astGeneric(t.update,e),e.push(")"),e.push("{\n"),e.push("if ("),this.astGeneric(t.test.left,e),e.push(t.test.operator),this.astGeneric(t.test.right,e),e.push(") {\n"),"BlockStatement"===t.body.type)for(var n=0;n<t.body.body.length;n++)this.astGeneric(t.body.body[n],e);else this.astGeneric(t.body,e);return e.push("} else {\n"),e.push("break;\n"),e.push("}\n"),e.push("}\n"),e}if(t.init.declarations){var r=JSON.parse(JSON.stringify(t.init.declarations)),i=t.update.argument;if(!Array.isArray(r)||r.length<1)throw console.log(this.jsFunctionString),new Error("Error: Incompatible for loop declaration");if(r.length>1){for(var s=null,a=0;a<r.length;a++){var o=r[a];o.id.name===i.name?(s=o,r.splice(a,1)):(e.push("var "),this.astGeneric(o,e),e.push(";"))}e.push("for (let "),this.astGeneric(s,e),e.push(";")}else e.push("for ("),this.astGeneric(t.init,e);return this.astGeneric(t.test,e),e.push(";"),this.astGeneric(t.update,e),e.push(")"),this.astGeneric(t.body,e),e}}throw this.astErrorOutput("Invalid for statement",t)}},{key:"astWhileStatement",value:function(t,e){if("WhileStatement"!==t.type)throw this.astErrorOutput("Invalid while statement",t);return e.push("for (let i = 0; i < LOOP_MAX; i++) {"),e.push("if ("),this.astGeneric(t.test,e),e.push(") {\n"),this.astGeneric(t.body,e),e.push("} else {\n"),e.push("break;\n"),e.push("}\n"),e.push("}\n"),e}},{key:"astDoWhileStatement",value:function(t,e){if("DoWhileStatement"!==t.type)throw this.astErrorOutput("Invalid while statement",t);return e.push("for (let i = 0; i < LOOP_MAX; i++) {"),this.astGeneric(t.body,e),e.push("if (!"),this.astGeneric(t.test,e),e.push(") {\n"),e.push("break;\n"),e.push("}\n"),e.push("}\n"),e}},{key:"astAssignmentExpression",value:function(t,e){return this.astGeneric(t.left,e),e.push(t.operator),this.astGeneric(t.right,e),e}},{key:"astEmptyStatement",value:function(t,e){return e}},{key:"astBlockStatement",value:function(t,e){e.push("{\n");for(var n=0;n<t.body.length;n++)this.astGeneric(t.body[n],e);return e.push("}\n"),e}},{key:"astExpressionStatement",value:function(t,e){return this.astGeneric(t.expression,e),e.push(";"),e}},{key:"astVariableDeclaration",value:function(t,e){e.push("var ");for(var n=0;n<t.declarations.length;n++)this.declarations[t.declarations[n].id.name]="var",n>0&&e.push(","),this.astGeneric(t.declarations[n],e);return e.push(";"),e}},{key:"astVariableDeclarator",value:function(t,e){return this.astGeneric(t.id,e),null!==t.init&&(e.push("="),this.astGeneric(t.init,e)),e}},{key:"astIfStatement",value:function(t,e){return e.push("if ("),this.astGeneric(t.test,e),e.push(")"),"BlockStatement"===t.consequent.type?this.astGeneric(t.consequent,e):(e.push(" {\n"),this.astGeneric(t.consequent,e),e.push("\n}\n")),t.alternate&&(e.push("else "),"BlockStatement"===t.alternate.type?this.astGeneric(t.alternate,e):(e.push(" {\n"),this.astGeneric(t.alternate,e),e.push("\n}\n"))),e}},{key:"astBreakStatement",value:function(t,e){return e.push("break;\n"),e}},{key:"astContinueStatement",value:function(t,e){return e.push("continue;\n"),e}},{key:"astLogicalExpression",value:function(t,e){return e.push("("),this.astGeneric(t.left,e),e.push(t.operator),this.astGeneric(t.right,e),e.push(")"),e}},{key:"astUpdateExpression",value:function(t,e){return t.prefix?(e.push(t.operator),this.astGeneric(t.argument,e)):(this.astGeneric(t.argument,e),e.push(t.operator)),e}},{key:"astUnaryExpression",value:function(t,e){return t.prefix?(e.push(t.operator),this.astGeneric(t.argument,e)):(this.astGeneric(t.argument,e),e.push(t.operator)),e}},{key:"astThisExpression",value:function(t,e){return e.push("_this"),e}},{key:"astMemberExpression",value:function(t,e){if(t.computed)if("Identifier"===t.object.type||"MemberExpression"===t.object.type&&t.object.object.object&&"ThisExpression"===t.object.object.object.type&&"constants"===t.object.object.property.name)this.pushState("identifier"),this.astGeneric(t.object,e),this.popState("identifier"),e.push("["),this.isInput(t.object.name),this.astGeneric(t.property,e),e.push("]");else if(t.object.object)if(t.object.object.object&&this.isInput(t.object.object.object.name)){this.pushMemberState(t.object.object.object.name),this.pushState("input-index-z"),this.astGeneric(t.object,e);var n=e.pop();e.push(" + "),this.popState("input-index-z"),this.pushState("input-index"),this.astGeneric(t.property,e),this.popState("input-index"),e.push(n),this.popMemberState(t.object.object.object.name)}else if(this.isInput(t.object.object.name)){this.pushMemberState(t.object.object.name),this.isState("input-index-z")||this.pushState("input-index-y"),this.astGeneric(t.object,e);var r=e.pop();e.push(" + "),this.isState("input-index-z")||this.popState("input-index-y");var i=this.isState("input-index-z");i?this.pushState("input-index-y"):this.pushState("input-index"),this.astGeneric(t.property,e),i?this.popState("input-index-y"):this.popState("input-index"),e.push(r),this.popMemberState(t.object.object.name)}else{this.astGeneric(t.object,e);var s=e.pop();e.push("]["),this.astGeneric(t.property,e),e.push(s)}else{this.astGeneric(t.object,e);var a=e.pop();e.push("]["),this.astGeneric(t.property,e),e.push(a)}else{var o=this.astMemberExpressionUnroll(t);switch("Identifier"===t.property.type&&t.computed&&(o="user_"+o),0===o.indexOf("this.constants")?o="constants_"+o.substring(15):0===o.indexOf("this")&&(o="_"+o),this.state){case"input-index-y":case"input-index-z":e.push("(")}switch(o){case"_this.output.x":e.push(this.output[0]);break;case"_this.output.y":e.push(this.output[1]);break;case"_this.output.z":e.push(this.output[2]);break;default:t.object&&t.object.name&&this.declarations[t.object.name]&&e.push("user_"),e.push(o)}switch(this.state){case"input-index-y":var u=this.paramSizes[this.paramNames.indexOf(this.memberState)];e.push(" * "+u[0]+")");break;case"input-index-z":var h=this.paramSizes[this.paramNames.indexOf(this.memberState)];e.push(" * "+h[0]*h[1]+")")}}return e}},{key:"astSequenceExpression",value:function(t,e){for(var n=0;n<t.expressions.length;n++)n>0&&e.push(","),this.astGeneric(t.expressions,e);return e}},{key:"astCallExpression",value:function(t,e){if(t.callee){var n=this.astMemberExpressionUnroll(t.callee);this.calledFunctions.indexOf(n)<0&&this.calledFunctions.push(n),this.hasOwnProperty("funcName")||(this.calledFunctionsArguments[n]=[]);var r=[];this.calledFunctionsArguments[n].push(r),e.push(n),e.push("(");for(var i=0;i<t.arguments.length;++i){var s=t.arguments[i];if(i>0&&e.push(", "),this.astGeneric(s,e),"Identifier"===s.type){var a=this.paramNames.indexOf(s.name);-1===a?r.push(null):r.push({name:s.name,type:this.paramTypes[a]})}else r.push(null)}return e.push(")"),e}throw this.astErrorOutput("Unknown CallExpression",t)}},{key:"astArrayExpression",value:function(t,e){var n=t.elements.length;e.push("[");for(var r=0;r<n;++r){r>0&&e.push(", ");var i=t.elements[r];this.astGeneric(i,e)}return e.push("]"),e}},{key:"astDebuggerStatement",value:function(t,e){return e.push("debugger;"),e}},{key:"memberState",get:function(){return this.memberStates[this.memberStates.length-1]}}]),e}()},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var r=function(){function t(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}return function(e,n,r){return n&&t(e.prototype,n),r&&t(e,r),e}}(),i=T(n(31)),s=(T(n(331)),T(n(214)),T(n(332))),a=T(n(333)),o=T(n(334)),u=T(n(335)),h=T(n(336)),l=T(n(337)),c=T(n(338)),p=T(n(339)),f=T(n(340)),d=T(n(341)),g=T(n(342)),v=T(n(343)),y=T(n(344)),m=T(n(345)),b=T(n(346)),x=T(n(347)),_=T(n(148));function T(t){return t&&t.__esModule?t:{default:t}}var w=function(){function t(){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.inputRow=0,this.inputValue=null,this.states=[]}return r(t,[{key:"add",value:function(t,e){if(t.weights.length!==e.weights.length)throw new Error("misaligned matrices");var n=new i.default(t.rows,t.columns);return this.states.push({left:t,right:e,product:n,forwardFn:a.default,backpropagationFn:o.default}),n}},{key:"allOnes",value:function(t,e){var n=new i.default(t,e);return this.states.push({left:n,product:n,forwardFn:u.default}),n}},{key:"cloneNegative",value:function(t){var e=new i.default(t.rows,t.columns);return this.states.push({left:t,product:e,forwardFn:s.default}),e}},{key:"subtract",value:function(t,e){if(t.weights.length!==e.weights.length)throw new Error("misaligned matrices");return this.add(this.add(this.allOnes(t.rows,t.columns),this.cloneNegative(t)),e)}},{key:"multiply",value:function(t,e){if(t.columns!==e.rows)throw new Error("misaligned matrices");var n=new i.default(t.rows,e.columns);return this.states.push({left:t,right:e,product:n,forwardFn:h.default,backpropagationFn:l.default}),n}},{key:"multiplyElement",value:function(t,e){if(t.weights.length!==e.weights.length)throw new Error("misaligned matrices");var n=new i.default(t.rows,t.columns);return this.states.push({left:t,right:e,product:n,forwardFn:c.default,backpropagationFn:p.default}),n}},{key:"relu",value:function(t){var e=new i.default(t.rows,t.columns);return this.states.push({left:t,product:e,forwardFn:f.default,backpropagationFn:d.default}),e}},{key:"input",value:function(t){var e=this;return this.states.push({product:t,forwardFn:function(n){n.weights=t.weights=e.inputValue}}),t}},{key:"inputMatrixToRow",value:function(t){var e=this,n=new i.default(t.columns,1);return this.states.push({left:t,get right(){return e.inputRow},product:n,forwardFn:g.default,backpropagationFn:v.default}),n}},{key:"sigmoid",value:function(t){var e=new i.default(t.rows,t.columns);return this.states.push({left:t,product:e,forwardFn:y.default,backpropagationFn:m.default}),e}},{key:"tanh",value:function(t){var e=new i.default(t.rows,t.columns);return this.states.push({left:t,product:e,forwardFn:b.default,backpropagationFn:x.default}),e}},{key:"observe",value:function(t){return this.states.push({forwardFn:function(){0},backpropagationFn:function(){0}}),t}},{key:"runIndex",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;this.inputRow=t;for(var e=void 0,n=0,r=this.states.length;n<r;n++)(e=this.states[n]).hasOwnProperty("forwardFn")&&e.forwardFn(e.product,e.left,e.right);return e.product}},{key:"runInput",value:function(t){this.inputValue=t;for(var e=void 0,n=0,r=this.states.length;n<r;n++)(e=this.states[n]).hasOwnProperty("forwardFn")&&e.forwardFn(e.product,e.left,e.right);return e.product}},{key:"backpropagate",value:function(){for(var t=this.states.length,e=void 0;t-- >0;)(e=this.states[t]).hasOwnProperty("backpropagationFn")&&e.backpropagationFn(e.product,e.left,e.right);return e.product}},{key:"backpropagateIndex",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;this.inputRow=t;for(var e=this.states.length,n=void 0;e-- >0;)(n=this.states[e]).hasOwnProperty("backpropagationFn")&&n.backpropagationFn(n.product,n.left,n.right);return n.product}},{key:"predictTarget",value:function(t,e){for(var n=this.runInput(t),r=0,i=0;i<n.weights.length;i++){var s=n.weights[i]-e[i];r+=Math.abs(s),n.deltas[i]=s}return r}},{key:"predictTargetIndex",value:function(t,e){var n=this.runIndex(t),r=n,i=(0,_.default)(n);return r.deltas=i.weights.slice(0),r.deltas[e]-=1,-Math.log2(i.weights[e])}}]),t}();e.default=w},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default=function(t){if("undefined"!=typeof Float32Array)return new Float32Array(t).fill(1);for(var e=new Array(t),n=0;n<t;n++)e[n]=1;return e}},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default=function(t,e){t.rows=parseInt(e.rows),t.columns=parseInt(e.columns),t.weights=e.weights.slice(0),t.deltas=e.deltas.slice(0)}},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default=function(t){var e=r(0,1),n=0,i=0,s=t.weights;for(;;){if((n+=s[i])>e)return i;i++}};var r=n(74).randomF},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default=function(t){for(var e=t.weights,n=e[0],r=0,i=1;i<e.length;i++){var s=e[i];s<n||(r=i,n=s)}return r}},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var r=function(){function t(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}return function(e,n,r){return n&&t(e.prototype,n),r&&t(e,r),e}}();function i(t){if(Array.isArray(t)){for(var e=0,n=Array(t.length);e<t.length;e++)n[e]=t[e];return n}return Array.from(t)}var s=function(){function t(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),void 0!==e&&(this.values=e,this.indexTable={},this.characterTable={},this.characters=[],this.specialIndexes=[],this.buildCharactersFromIterable(e),this.buildTables(n))}return r(t,[{key:"buildCharactersFromIterable",value:function(t){for(var e={},n=0,r=t.length;n<r;n++){var i=t[n];if(i.hasOwnProperty("length"))for(var s=0,a=i.length;s<a;s++){var o=i[s];e.hasOwnProperty(o)||(e[o]=!0,this.characters.push(o))}else{var u=t[n];if(e.hasOwnProperty(u))continue;e[n]=!0,this.characters.push(u)}}}},{key:"buildTables",value:function(t){for(var e=this.characters.length,n=0;n<e;n++){var r=this.characters[n];n>=t&&(this.indexTable[r]=n,this.characterTable[n]=r)}}},{key:"toIndexes",value:function(t){for(var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=[],r=this.indexTable,i=0,s=t.length;i<s;i++){var a=t[i],o=r[a];if(void 0===o){if(!r.unrecognized)throw new Error('unrecognized character "'+a+'"');o=r.unrecognized}o<e||n.push(o)}return n}},{key:"toIndexesInputOutput",value:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,r=void 0;return r="string"==typeof t?this.toIndexes(t.split("").concat(["stop-input","start-output"]),n):this.toIndexes(t.concat(["stop-input","start-output"]),n),null===e?r:"string"==typeof e?r.concat(this.toIndexes(e.split(""),n)):r.concat(this.toIndexes(e,n))}},{key:"toCharacters",value:function(t){for(var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=[],r=this.characterTable,i=this.indexTable,s=0,a=t.length;s<a;s++){var o=t[s];if(!(o<e)){var u=r[o];if(void 0===u){if(!i.unrecognized)throw new Error('unrecognized index "'+o+'"');u=r[i.unrecognized]}else null!==u&&n.push(u)}}return n}},{key:"toString",value:function(t,e){return this.toCharacters(t,e).join("")}},{key:"addInputOutput",value:function(){this.addSpecial("stop-input"),this.addSpecial("start-output")}},{key:"addUnrecognized",value:function(){this.addSpecial("unrecognized")}},{key:"addSpecial",value:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=this.indexTable[t]=this.characters.length;this.characterTable[n]=e,this.specialIndexes.push(this.characters.length),this.characters.push(t)}},{key:"countSpecial",value:function(t){for(var e=0,n=0;n<this.specialIndexes;n++)for(var r=-1;r=t.indexOf(this.specialIndexes[n],r)>-1;)e++;return e}},{key:"toFunctionString",value:function(){return"\nvar characterTable = "+JSON.stringify(this.characterTable)+";\nvar indexTable = "+JSON.stringify(this.indexTable)+";\nvar characters = "+JSON.stringify(this.characters)+";\n"+this.toIndexes.toString().replace(/(let|var) indexTable = this[.]indexTable;\n/,"").replace(/this[.]/g,"")+"\n"+this.toIndexesInputOutput.toString().replace(/this[.]/g,"")+"\n"+this.toCharacters.toString().replace(/(let|var) characterTable = this[.]characterTable;\n/g,"").replace(/this[.]/,"")+"\n"}}],[{key:"fromAllPrintable",value:function(e){for(var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:["\n"],r=32;r<=126;r++)n.push(String.fromCharCode(r));return new t(n,e)}},{key:"fromAllPrintableInputOutput",value:function(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:["\n"],r=t.fromAllPrintable(e,n);return r.addInputOutput(),r}},{key:"fromStringInputOutput",value:function(e,n){var r,s=new t((r=String.prototype).concat.apply(r,i(new Set(e))),n);return s.addInputOutput(),s}},{key:"fromArrayInputOutput",value:function(e,n){var r=new t(e.filter(function(t,e,n){return n.indexOf(t)===e}).sort(),n);return r.addInputOutput(),r}},{key:"fromString",value:function(e,n){var r;return new t((r=String.prototype).concat.apply(r,i(new Set(e))),n)}},{key:"fromJSON",value:function(e){var n=new t;return n.indexTable=e.indexTable,n.characterTable=e.characterTable,n.values=e.values,n.characters=e.characters,n.specialIndexes=e.specialIndexes,n}}]),t}();e.default=s},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var r=function(){function t(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}return function(e,n,r){return n&&t(e.prototype,n),r&&t(e,r),e}}(),i=o(n(31)),s=o(n(96)),a=o(n(97));function o(t){return t&&t.__esModule?t:{default:t}}var u=function(t){function e(){return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),function(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}(this,(e.__proto__||Object.getPrototypeOf(e)).apply(this,arguments))}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}(e,a.default),r(e,[{key:"getModel",value:function(t,e){return{inputMatrix:new s.default(t,e,.08),inputHidden:new s.default(t,t,.08),inputBias:new i.default(t,1),forgetMatrix:new s.default(t,e,.08),forgetHidden:new s.default(t,t,.08),forgetBias:new i.default(t,1),outputMatrix:new s.default(t,e,.08),outputHidden:new s.default(t,t,.08),outputBias:new i.default(t,1),cellActivationMatrix:new s.default(t,e,.08),cellActivationHidden:new s.default(t,t,.08),cellActivationBias:new i.default(t,1)}}},{key:"getEquation",value:function(t,e,n,r){var i=t.sigmoid.bind(t),s=t.add.bind(t),a=t.multiply.bind(t),o=t.multiplyElement.bind(t),u=t.tanh.bind(t),h=i(s(s(a(r.inputMatrix,e),a(r.inputHidden,n)),r.inputBias)),l=i(s(s(a(r.forgetMatrix,e),a(r.forgetHidden,n)),r.forgetBias)),c=i(s(s(a(r.outputMatrix,e),a(r.outputHidden,n)),r.outputBias)),p=u(s(s(a(r.cellActivationMatrix,e),a(r.cellActivationHidden,n)),r.cellActivationBias)),f=o(l,n),d=o(h,p);return o(c,u(s(f,d)))}}]),e}();e.default=u},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var r=function(){function t(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}return function(e,n,r){return n&&t(e.prototype,n),r&&t(e,r),e}}(),i=o(n(31)),s=o(n(96)),a=o(n(97));function o(t){return t&&t.__esModule?t:{default:t}}var u=function(t){function e(){return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),function(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}(this,(e.__proto__||Object.getPrototypeOf(e)).apply(this,arguments))}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}(e,a.default),r(e,[{key:"getModel",value:function(t,e){return{updateGateInputMatrix:new s.default(t,e,.08),updateGateHiddenMatrix:new s.default(t,t,.08),updateGateBias:new i.default(t,1),resetGateInputMatrix:new s.default(t,e,.08),resetGateHiddenMatrix:new s.default(t,t,.08),resetGateBias:new i.default(t,1),cellWriteInputMatrix:new s.default(t,e,.08),cellWriteHiddenMatrix:new s.default(t,t,.08),cellWriteBias:new i.default(t,1)}}},{key:"getEquation",value:function(t,e,n,r){var i=t.sigmoid.bind(t),s=t.add.bind(t),a=t.multiply.bind(t),o=t.multiplyElement.bind(t),u=t.tanh.bind(t),h=t.allOnes.bind(t),l=t.cloneNegative.bind(t),c=i(s(s(a(r.updateGateInputMatrix,e),a(r.updateGateHiddenMatrix,n)),r.updateGateBias)),p=i(s(s(a(r.resetGateInputMatrix,e),a(r.resetGateHiddenMatrix,n)),r.resetGateBias)),f=u(s(s(a(r.cellWriteInputMatrix,e),a(r.cellWriteHiddenMatrix,o(p,n))),r.cellWriteBias));return s(o(s(h(c.rows,c.columns),l(c)),f),o(n,c))}}]),e}();e.default=u},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,function(t,e,n){"use strict";n.r(e);n(305),n(307),n(309);var r=n(312),i=n(135),s=n(59),a=i.map(function(t){return new Array(9).fill(0)[t[9]]=1,{input:t.slice(0,9),output:t.slice(9)}}),o=new r.NeuralNetwork({binaryThresh:.5,hiddenLayers:[3],activation:"sigmoid",leakyReluAlpha:.01});o.train(a),s.writeFileSync("trained-net.js","export default ".concat(o.toFunction().toString(),";")),console.log("youve fucking done it")},function(t,e,n){"use strict";n(306);var r=n(30),i=n(191),s=n(15),a=/./.toString,o=function(t){n(37)(RegExp.prototype,"toString",t,!0)};n(19)(function(){return"/a/b"!=a.call({source:"a",flags:"b"})})?o(function(){var t=r(this);return"/".concat(t.source,"/","flags"in t?t.flags:!s&&t instanceof RegExp?i.call(t):void 0)}):"toString"!=a.name&&o(function(){return a.call(this)})},function(t,e,n){n(15)&&"g"!=/./g.flags&&n(36).f(RegExp.prototype,"flags",{configurable:!0,get:n(191)})},function(t,e,n){"use strict";var r=n(308),i={};i[n(136)("toStringTag")]="z",i+""!="[object z]"&&n(37)(Object.prototype,"toString",function(){return"[object "+r(this)+"]"},!0)},function(t,e,n){var r=n(91),i=n(136)("toStringTag"),s="Arguments"==r(function(){return arguments}());t.exports=function(t){var e,n,a;return void 0===t?"Undefined":null===t?"Null":"string"==typeof(n=function(t,e){try{return t[e]}catch(t){}}(e=Object(t),i))?n:s?r(e):"Object"==(a=r(e))&&"function"==typeof e.callee?"Arguments":a}},function(t,e,n){var r=n(70);r(r.P,"Array",{fill:n(310)}),n(311)("fill")},function(t,e,n){"use strict";var r=n(137),i=n(138),s=n(139);t.exports=function(t){for(var e=r(this),n=s(e.length),a=arguments.length,o=i(a>1?arguments[1]:void 0,n),u=a>2?arguments[2]:void 0,h=void 0===u?n:i(u,n);h>o;)e[o++]=t;return e}},function(t,e,n){var r=n(136)("unscopables"),i=Array.prototype;null==i[r]&&n(33)(i,r,{}),t.exports=function(t){i[r][t]=!0}},function(t,e,n){var r={CrossValidate:n(313).default,likely:n(314).default,lookup:n(92).default,NeuralNetwork:n(140).default,NeuralNetworkGPU:n(317).default,TrainStream:n(330).default,recurrent:{RNNTimeStep:n(147).default,LSTMTimeStep:n(349).default,GRUTimeStep:n(350).default,RNN:n(97).default,LSTM:n(218).default,GRU:n(219).default},utilities:{max:n(193).default,mse:n(194).default,ones:n(213).default,random:n(74).default,randomWeight:n(196).default,randos:n(195).default,range:n(197).default,toArray:n(141).default,DataFormatter:n(217).default,zeros:n(72).default,toSVG:n(351).default}};"undefined"!=typeof window&&(window.brain=r),"undefined"!=typeof self&&(self.brain=r),t.exports=r},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var r=function(){function t(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}return function(e,n,r){return n&&t(e.prototype,n),r&&t(e,r),e}}();var i=function(){function t(e,n){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.Classifier=e,this.options=n,this.json=null}return r(t,[{key:"testPartition",value:function(t,e,n){var r=new this.Classifier(this.options),i=Date.now(),s=r.train(e,t),a=Date.now(),o=r.test(n),u=Date.now();return Object.assign({},o,{trainTime:a-i,testTime:u-a,iterations:s.iterations,error:s.error,total:o.total,learningRate:r.trainOpts.learningRate,hiddenLayers:r.hiddenLayers,network:r.toJSON()})}},{key:"shuffleArray",value:function(t){for(var e=t.length-1;e>0;e--){var n=Math.floor(Math.random()*(e+1)),r=t[e];t[e]=t[n],t[n]=r}return t}},{key:"train",value:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:4;if(t.length<n)throw new Error("Training set size is too small for "+t.length+" k folds of "+n);var r=t.length/n;if(t.constructor===Array)this.shuffleArray(t);else{var i={};this.shuffleArray(Object.keys(t)).forEach(function(e){i[e]=t[e]}),t=i}for(var s={trainTime:0,testTime:0,iterations:0,error:0},a={total:0},o={total:0,truePos:0,trueNeg:0,falsePos:0,falseNeg:0},u=[],h=void 0,l=null,c=0;c<n;c++){var p=t.slice(0),f=p.splice(c*r,r),d=p,g=this.testPartition(e,d,f);for(h in null===l&&(l=g.hasOwnProperty("falseNeg")&&g.hasOwnProperty("falsePos")&&g.hasOwnProperty("trueNeg")&&g.hasOwnProperty("truePos"))&&Object.assign(a,o),s)h in s&&(s[h]+=g[h]);for(h in a)h in a&&(a[h]+=g[h]);u.push(g)}for(h in s)h in s&&(s[h]/=n);return l&&(a.precision=a.truePos/(a.truePos+a.falsePos),a.recall=a.truePos/(a.truePos+a.falseNeg),a.accuracy=(a.trueNeg+a.truePos)/a.total),a.testSize=r,a.trainSize=t.length-r,this.json={avgs:s,stats:a,sets:u}}},{key:"toNeuralNetwork",value:function(){return this.fromJSON(this.json)}},{key:"toJSON",value:function(){return this.json}},{key:"fromJSON",value:function(t){var e=this.Classifier,n=t.sets.reduce(function(t,e){return t.error<e.error?t:e},{error:1/0}).network;if(e.fromJSON)return e.fromJSON(n);var r=new e;return r.fromJSON(n),r}}]),t}();e.default=i},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default=function(t,e){var n=e.run(t),r=null,i=-1;for(var s in n){var a=n[s];a>i&&(r=s,i=a)}return r}},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var r=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(t[r]=n[r])}return t},i=function(){function t(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}return function(e,n,r){return n&&t(e.prototype,n),r&&t(e,r),e}}();e.thaw=function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return new o(t,e)};var s=!1,a=[],o=function(){function t(e){var n=this,i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t);var o=r({},this.constructor.defaultSettings,i),u=o.each,h=o.done;this.items=e,this.i=0,this.options=i;var l=this.tick=function(){if(!(n.i<0||(n.timeout=setTimeout(l,0),s))){var t=e[n.i];if(n.i>=e.length)return null!==h&&(s=!0,h(t,n.i),s=!1),n.i=-1,void clearTimeout(n.timeout);null!==u?(s=!0,u(t,n.i),s=!1):void 0!==t&&t(),n.i++}};a.push(this),i.delay||l()}return i(t,null,[{key:"stopAll",value:function(){for(var t=0;t<a.length;t++)a[t].stop()}},{key:"defaultSettings",get:function(){return{each:null,done:null}}},{key:"isThawing",get:function(){return s}}]),i(t,[{key:"makeReady",value:function(){return this.i<0&&(this.i=this.items.length,!0)}},{key:"add",value:function(t){var e=this.makeReady();return this.items.push(t),e&&this.tick(),this}},{key:"insert",value:function(t){var e=this.makeReady();return this.items.splice(this.i,0,t),e&&this.tick(),this}},{key:"addArray",value:function(t){var e=this.makeReady();return this.items=this.items.concat(t),e&&this.tick(),this}},{key:"insertArray",value:function(t){var e=this.makeReady(),n=this.items,r=t,i=this.items.splice(this.i,this.items.length-this.i+1);return this.items=n.concat(r,i),e&&this.tick(),this}},{key:"stop",value:function(){return this.i=-1,clearTimeout(this.timeout),this.options.done&&this.options.done(),this}}]),t}();e.default=o},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var r,i=function(){function t(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}return function(e,n,r){return n&&t(e.prototype,n),r&&t(e,r),e}}(),s=n(192),a=(r=s)&&r.__esModule?r:{default:r};var o=function(){function t(e,n){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.index=0,this.thaws=[],this.count=n||200,this.options=e}return i(t,[{key:"add",value:function(t){return this._next().add(t),this}},{key:"addArray",value:function(t){return this._next().addArray(t),this}},{key:"insert",value:function(t){return this._next().insert(t),this}},{key:"insertArray",value:function(t){return this._next().insertArray(t),this}},{key:"stop",value:function(){for(var t=0;t<this.thaws.length;t++)this.thaws[t].stop();return this}},{key:"_next",value:function(){var t=null,e=this.thaws;return e.length<this.count?e.push(t=new a.default([],this.options)):t=e[this.index],this.index++,this.index>=this.count&&(this.index=0),t}}]),t}();e.default=o},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var r=function(){function t(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}return function(e,n,r){return n&&t(e.prototype,n),r&&t(e,r),e}}(),i=function t(e,n,r){null===e&&(e=Function.prototype);var i=Object.getOwnPropertyDescriptor(e,n);if(void 0===i){var s=Object.getPrototypeOf(e);return null===s?void 0:t(s,n,r)}if("value"in i)return i.value;var a=i.get;return void 0!==a?a.call(r):void 0},s=u(n(140)),a=u(n(92)),o=u(n(93));function u(t){return t&&t.__esModule?t:{default:t}}var h=function(t){function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e);var n=function(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}(this,(e.__proto__||Object.getPrototypeOf(e)).call(this,t));return n.forwardPropagate=[],n.backwardPropagate=[],n.changesPropagate=[],n.biasesPropagate=[],n.biasCopies=[],n.copyBias=[],n.changesCopies=[],n.copyChanges=[],n.weightsCopies=[],n.copyWeights=[],n.errorCheckInterval=100,n.gpu=new o.default({mode:t.mode}),n}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}(e,s.default),r(e,[{key:"initialize",value:function(){i(e.prototype.__proto__||Object.getPrototypeOf(e.prototype),"initialize",this).call(this),this.buildRunInput(),this.buildCalculateDeltas(),this.buildGetChanges(),this.buildChangeBiases(),this.buildGetMSE()}},{key:"setActivation",value:function(){}},{key:"trainPattern",value:function(t,e){return this.runInput(t.input),this.calculateDeltas(t.output),this.adjustWeights(),e?this.getMSE(this.errors[this.outputLayer])[0]:null}},{key:"adjustWeights",value:function(){this.getChanges(),this.changeBiases()}},{key:"buildRunInput",value:function(){var t=null;switch(this.activation){case"sigmoid":t=l;break;case"relu":t=c;break;case"leaky-relu":t=p;break;case"tanh":t=f;break;default:throw new Error("unknown activation "+this.activation)}for(var e=1;e<=this.outputLayer;e++)this.forwardPropagate[e]=this.gpu.createKernel(t,{output:[this.sizes[e]],outputToTexture:!0,hardcodeConstants:!0,constants:{size:this.sizes[e-1]}});this.texturizeInputData=this.gpu.createKernel(function(t){return t[this.thread.x]},{output:[this.sizes[1]],outputToTexture:!0,hardcodeConstants:!0,outputImmutable:!0})}},{key:"runInput",value:function(t){var e=void 0;this.outputs[0]=t;for(var n=1;n<=this.outputLayer;n++)this.outputs[n]=this.forwardPropagate[n](this.weights[n],this.biases[n],t),e=t=this.outputs[n];return e}},{key:"buildCalculateDeltas",value:function(){var t=null;switch(this.activation){case"sigmoid":t=g;break;case"relu":t=v;break;case"leaky-relu":t=y;break;case"tanh":t=m;break;default:throw new Error("unknown activation "+this.activation)}for(var e=this.outputLayer;e>0;e--)e===this.outputLayer?this.backwardPropagate[e]=this.gpu.createKernelMap({error:o.default.alias("calcErrorOutput",d),deltas:o.default.alias("calcDeltas",t)},function(e,n){var r=e[this.thread.x];return t(d(r,n),r)},{output:[this.sizes[e]],outputToTexture:!0,hardcodeConstants:!0}):this.backwardPropagate[e]=this.gpu.createKernelMap({error:o.default.alias("calcError",b),deltas:o.default.alias("calcDeltas",t)},function(e,n,r){var i=n[this.thread.x];return t(b(e,r),i)},{output:[this.sizes[e]],outputToTexture:!0,hardcodeConstants:!0,constants:{size:this.deltas[e+1].length}})}},{key:"calculateDeltas",value:function(t){for(var e=this.outputLayer;e>0;e--){var n=void 0;n=e===this.outputLayer?this.backwardPropagate[e](this.outputs[e],t):this.backwardPropagate[e](this.weights[e+1],this.outputs[e],this.deltas[e+1]),this.deltas[e]=n.deltas,this.errors[e]=n.error}}},{key:"buildGetChanges",value:function(){for(var t=1;t<=this.outputLayer;t++)this.changesPropagate[t]=this.gpu.createKernelMap({weights:o.default.alias("addWeights",_),changes:o.default.alias("calcChanges",x)},function(t,e,n,r){return _(x(r,e,t),n)},{output:[this.sizes[t-1],this.sizes[t]],outputToTexture:!0,hardcodeConstants:!0,constants:{size:this.outputs[t-1].length,learningRate:this.trainOpts.learningRate,momentum:this.trainOpts.momentum}}),this.copyChanges[t]=this.gpu.createKernel(function(t){return t[this.thread.y][this.thread.x]},{output:this.changesPropagate[t].output,outputToTexture:!0,hardCodeConstants:!0}),this.copyWeights[t]=this.gpu.createKernel(function(t){return t[this.thread.y][this.thread.x]},{output:this.changesPropagate[t].output,outputToTexture:!0,hardCodeConstants:!0})}},{key:"getChanges",value:function(){for(var t=1;t<=this.outputLayer;t++){var e=this.changesPropagate[t](this.outputs[t-1],this.deltas[t],this.weightsCopies[t]||this.weights[t],this.changesCopies[t]||this.changes[t]);this.changes[t]=e.changes,this.weights[t]=e.weights,this.changesCopies[t]=this.copyChanges[t](e.changes),this.weightsCopies[t]=this.copyWeights[t](e.weights)}}},{key:"buildChangeBiases",value:function(){for(var t=1;t<=this.outputLayer;t++)this.biasesPropagate[t]=this.gpu.createKernel(T,{output:[this.sizes[t]],outputToTexture:!0,hardcodeConstants:!0,constants:{learningRate:this.trainOpts.learningRate}}),this.copyBias[t]=this.gpu.createKernel(function(t){return t[this.thread.x]},{output:this.biasesPropagate[t].output,outputToTexture:!0,hardCodeConstants:!0})}},{key:"changeBiases",value:function(){for(var t=1;t<=this.outputLayer;t++)this.biases[t]=this.biasesPropagate[t](this.biasCopies[t]||this.biases[t],this.deltas[t]),this.biasCopies[t]=this.copyBias[t](this.biases[t])}},{key:"buildGetMSE",value:function(){this.getMSE=this.gpu.createKernel(w,{output:[1],hardcodeConstants:!0,constants:{size:this.sizes[this.outputLayer]}})}},{key:"run",value:function(t){if(!this.isRunnable)return null;this.inputLookup&&(t=a.default.toArray(this.inputLookup,t,this.inputLookupLength));var e=this.texturizeInputData(t),n=this.runInput(e),r=void 0;return r=n.toArray?n.toArray(this.gpu):n,this.outputLookup&&(r=a.default.toObject(this.outputLookup,r)),r}},{key:"prepTraining",value:function(t,e){var n=this;this.updateTrainingOptions(e),t=this.formatData(t);var r=Date.now()+this.trainOpts.timeout;this.verifyIsInitialized(t);var i=this.gpu.createKernel(function(t){return t[this.thread.x]},{output:[t[0].output.length],outputToTexture:!0,hardcodeConstants:!0,outputImmutable:!0});return{data:t.map(function(t){return{input:n.texturizeInputData(t.input),output:i(t.output)}}),status:{error:1,iterations:0},endTime:r}}},{key:"toJSON",value:function(){var t=this;if(!this.weights[1].toArray)return i(e.prototype.__proto__||Object.getPrototypeOf(e.prototype),"toJSON",this).call(this);for(var n=[],r=[],a=1;a<=this.outputLayer;a++)n[a]=Array.from(this.weights[a].toArray(this.gpu)),r[a]=Array.from(this.biases[a].toArray(this.gpu));return s.default.prototype.toJSON.call({inputLookup:this.inputLookup,outputLookup:this.outputLookup,outputLayer:this.outputLayer,sizes:this.sizes,getTrainOptsJSON:function(){return t.getTrainOptsJSON()},weights:n,biases:r})}}]),e}();function l(t,e,n){for(var r=e[this.thread.x],i=0;i<this.constants.size;i++)r+=t[this.thread.x][i]*n[i];return 1/(1+Math.exp(-r))}function c(t,e,n){for(var r=e[this.thread.x],i=0;i<this.constants.size;i++)r+=t[this.thread.x][i]*n[i];return r<0?0:r}function p(t,e,n){for(var r=e[this.thread.x],i=0;i<this.constants.size;i++)r+=t[this.thread.x][i]*n[i];return r<0?0:.01*r}function f(t,e,n){for(var r=e[this.thread.x],i=0;i<this.constants.size;i++)r+=t[this.thread.x][i]*n[i];return Math.tanh(r)}function d(t,e){return e[this.thread.x]-t}function g(t,e){return t*e*(1-e)}function v(t,e){return e>0?t:0}function y(t,e){return e>0?t:.01*t}function m(t,e){return(1-e*e)*t}function b(t,e){for(var n=0,r=0;r<this.constants.size;r++)n+=e[r]*t[r][this.thread.x];return n}function x(t,e,n){return this.constants.learningRate*e[this.thread.y]*n[this.thread.x]+this.constants.momentum*t[this.thread.y][this.thread.x]}function _(t,e){return t+e[this.thread.y][this.thread.x]}function T(t,e){return t[this.thread.x]+e[this.thread.x]*this.constants.learningRate}function w(t){for(var e=0,n=0;n<this.constants.size;n++)e+=Math.pow(t[n],2);return e/this.constants.size}e.default=h},function(t,e,n){"use strict";var r=function(){function t(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}return function(e,n,r){return n&&t(e.prototype,n),r&&t(e,r),e}}();var i=n(13),s=n(201),a=n(205),o=n(208),u=n(326),h=n(327),l=n(328),c=function(t){function e(t){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e);var n=function(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}(this,(e.__proto__||Object.getPrototypeOf(e)).call(this,t));t=t||{},n._canvas=t.canvas||null,n._webGl=t.webGl||null;var r=t.mode,l=void 0;if(i.isWebGlSupported())if(n._webGl)if("undefined"!=typeof WebGL2RenderingContext&&n._webGl.constructor===WebGL2RenderingContext)l="webgl2";else{if("undefined"==typeof WebGLRenderingContext||n._webGl.constructor!==WebGLRenderingContext)throw new Error("unknown WebGL Context");l="webgl"}else l=r||"gpu";else{if(r&&"cpu"!==r)throw new Error('A requested mode of "'+r+'" and is not supported');console.warn("Warning: gpu not supported, falling back to cpu support"),l="cpu"}n.kernels=[];var c={canvas:n._canvas,webGl:n._webGl};switch(l){case"cpu":n._runner=new o(c);break;case"gpu":var p=n.getGPURunner();n._runner=new p(c);break;case"webgl2":n._runner=new a(c);break;case"webgl":n._runner=new s(c);break;case"webgl2-validator":n._runner=new a(c),n._runner.Kernel=h;break;case"webgl-validator":n._runner=new s(c),n._runner.Kernel=u;break;default:throw new Error('"'+r+'" mode is not defined')}return n}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}(e,l),r(e,[{key:"createKernel",value:function(t,e){if(void 0===t)throw"Missing fn parameter";if(!i.isFunction(t)&&"string"!=typeof t)throw"fn parameter not a function";var n=Object.assign({webGl:this._webGl,canvas:this._canvas},e||{}),r=this._runner.buildKernel(t,n);return this._canvas||(this._canvas=r.getCanvas()),this._runner.canvas||(this._runner.canvas=r.getCanvas()),this.kernels.push(r),r}},{key:"createKernelMap",value:function(){var t=void 0,e=void 0;"function"==typeof arguments[arguments.length-2]?(t=arguments[arguments.length-2],e=arguments[arguments.length-1]):t=arguments[arguments.length-1],i.isWebGlDrawBuffersSupported()||(this._runner=new o(e));var n=this.createKernel(t,e);if(Array.isArray(arguments[0]))for(var r=arguments[0],s=0;s<r.length;s++)n.addSubKernel(r[s]);else{var a=arguments[0];for(var u in a)a.hasOwnProperty(u)&&n.addSubKernelProperty(u,a[u])}return n}},{key:"combineKernels",value:function(){var t=arguments[arguments.length-2],e=arguments[arguments.length-1];if("cpu"===this.getMode())return e;for(var n=arguments[0].getCanvas(),r=arguments[0].getWebGl(),s=0;s<arguments.length-1;s++)arguments[s].setCanvas(n).setWebGl(r).setOutputToTexture(!0);return function(){e.apply(null,arguments);var n=t.texSize,r=t.getWebGl(),s=t.threadDim,a=void 0;if(t.floatOutput){var o=n[0],u=Math.ceil(n[1]/4);a=new Float32Array(o*u*4),r.readPixels(0,0,o,u,r.RGBA,r.FLOAT,a)}else{var h=new Uint8Array(n[0]*n[1]*4);r.readPixels(0,0,n[0],n[1],r.RGBA,r.UNSIGNED_BYTE,h),a=new Float32Array(h.buffer)}return a=a.subarray(0,s[0]*s[1]*s[2]),1===t.output.length?a:2===t.output.length?i.splitArray(a,t.output[0]):3===t.output.length?i.splitArray(a,t.output[0]*t.output[1]).map(function(e){return i.splitArray(e,t.output[0])}):void 0}}},{key:"getGPURunner",value:function(){return"undefined"!=typeof WebGL2RenderingContext&&i.isWebGl2Supported()?a:"undefined"!=typeof WebGLRenderingContext?s:void 0}},{key:"addFunction",value:function(t,e){return this._runner.functionBuilder.addFunction(null,t,e),this}},{key:"addNativeFunction",value:function(t,e){return this._runner.functionBuilder.addNativeFunction(t,e),this}},{key:"getMode",value:function(){return this._runner.getMode()}},{key:"isWebGlSupported",value:function(){return i.isWebGlSupported()}},{key:"hasIntegerDivisionAccuracyBug",value:function(){return i.hasIntegerDivisionAccuracyBug()}},{key:"getCanvas",value:function(){return this._canvas}},{key:"getWebGl",value:function(){return this._webGl}},{key:"destroy",value:function(){var t=this;setTimeout(function(){for(var e=t.kernels,n=!t._webGl&&e.length&&e[0]._webGl,r=0;r<t.kernels.length;r++)t.kernels[r].destroy(!0);if(n){n.OES_texture_float=null,n.OES_texture_float_linear=null,n.OES_element_index_uint=null;var i=n.getExtension("WEBGL_lose_context");i&&i.loseContext()}},0)}}]),e}();Object.assign(c,l),t.exports=c},function(t,e,n){"use strict";t.exports="__HEADER__;\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nconst float LOOP_MAX = __LOOP_MAX__;\n\n__CONSTANTS__;\n\nvarying vec2 vTexCoord;\n\nvec4 round(vec4 x) {\n  return floor(x + 0.5);\n}\n\nfloat round(float x) {\n  return floor(x + 0.5);\n}\n\nvec2 integerMod(vec2 x, float y) {\n  vec2 res = floor(mod(x, y));\n  return res * step(1.0 - floor(y), -res);\n}\n\nvec3 integerMod(vec3 x, float y) {\n  vec3 res = floor(mod(x, y));\n  return res * step(1.0 - floor(y), -res);\n}\n\nvec4 integerMod(vec4 x, vec4 y) {\n  vec4 res = floor(mod(x, y));\n  return res * step(1.0 - floor(y), -res);\n}\n\nfloat integerMod(float x, float y) {\n  float res = floor(mod(x, y));\n  return res * (res > floor(y) - 1.0 ? 0.0 : 1.0);\n}\n\nint integerMod(int x, int y) {\n  return x - (y * int(x / y));\n}\n\n__DIVIDE_WITH_INTEGER_CHECK__;\n\n// Here be dragons!\n// DO NOT OPTIMIZE THIS CODE\n// YOU WILL BREAK SOMETHING ON SOMEBODY'S MACHINE\n// LEAVE IT AS IT IS, LEST YOU WASTE YOUR OWN TIME\nconst vec2 MAGIC_VEC = vec2(1.0, -256.0);\nconst vec4 SCALE_FACTOR = vec4(1.0, 256.0, 65536.0, 0.0);\nconst vec4 SCALE_FACTOR_INV = vec4(1.0, 0.00390625, 0.0000152587890625, 0.0); // 1, 1/256, 1/65536\nfloat decode32(vec4 rgba) {\n  __DECODE32_ENDIANNESS__;\n  rgba *= 255.0;\n  vec2 gte128;\n  gte128.x = rgba.b >= 128.0 ? 1.0 : 0.0;\n  gte128.y = rgba.a >= 128.0 ? 1.0 : 0.0;\n  float exponent = 2.0 * rgba.a - 127.0 + dot(gte128, MAGIC_VEC);\n  float res = exp2(round(exponent));\n  rgba.b = rgba.b - 128.0 * gte128.x;\n  res = dot(rgba, SCALE_FACTOR) * exp2(round(exponent-23.0)) + res;\n  res *= gte128.y * -2.0 + 1.0;\n  return res;\n}\n\nvec4 encode32(float f) {\n  float F = abs(f);\n  float sign = f < 0.0 ? 1.0 : 0.0;\n  float exponent = floor(log2(F));\n  float mantissa = (exp2(-exponent) * F);\n  // exponent += floor(log2(mantissa));\n  vec4 rgba = vec4(F * exp2(23.0-exponent)) * SCALE_FACTOR_INV;\n  rgba.rg = integerMod(rgba.rg, 256.0);\n  rgba.b = integerMod(rgba.b, 128.0);\n  rgba.a = exponent*0.5 + 63.5;\n  rgba.ba += vec2(integerMod(exponent+127.0, 2.0), sign) * 128.0;\n  rgba = floor(rgba);\n  rgba *= 0.003921569; // 1/255\n  __ENCODE32_ENDIANNESS__;\n  return rgba;\n}\n// Dragons end here\n\nfloat decode(vec4 rgba, int x, int bitRatio) {\n  if (bitRatio == 1) {\n    return decode32(rgba);\n  }\n  __DECODE32_ENDIANNESS__;\n  int channel = integerMod(x, bitRatio);\n  if (bitRatio == 4) {\n    if (channel == 0) return rgba.r * 255.0;\n    if (channel == 1) return rgba.g * 255.0;\n    if (channel == 2) return rgba.b * 255.0;\n    if (channel == 3) return rgba.a * 255.0;\n  }\n  else {\n    if (channel == 0) return rgba.r * 255.0 + rgba.g * 65280.0;\n    if (channel == 1) return rgba.b * 255.0 + rgba.a * 65280.0;\n  }\n}\n\nint index;\nivec3 threadId;\n\nivec3 indexTo3D(int idx, ivec3 texDim) {\n  int z = int(idx / (texDim.x * texDim.y));\n  idx -= z * int(texDim.x * texDim.y);\n  int y = int(idx / texDim.x);\n  int x = int(integerMod(idx, texDim.x));\n  return ivec3(x, y, z);\n}\n\nfloat get(sampler2D tex, ivec2 texSize, ivec3 texDim, int bitRatio,  int z, int y, int x) {\n  ivec3 xyz = ivec3(x, y, z);\n  __GET_WRAPAROUND__;\n  int index = xyz.x + texDim.x * (xyz.y + texDim.y * xyz.z);\n  __GET_TEXTURE_CHANNEL__;\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  __GET_TEXTURE_INDEX__;\n  vec4 texel = texture2D(tex, st / vec2(texSize));\n  __GET_RESULT__;\n  \n}\n\nvec4 getImage2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  ivec3 xyz = ivec3(x, y, z);\n  __GET_WRAPAROUND__;\n  int index = xyz.x + texDim.x * (xyz.y + texDim.y * xyz.z);\n  __GET_TEXTURE_CHANNEL__;\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  __GET_TEXTURE_INDEX__;\n  return texture2D(tex, st / vec2(texSize));\n}\n\nfloat get(sampler2D tex, ivec2 texSize, ivec3 texDim, int bitRatio, int y, int x) {\n  return get(tex, texSize, texDim, bitRatio, int(0), y, x);\n}\n\nvec4 getImage2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int y, int x) {\n  return getImage2D(tex, texSize, texDim, int(0), y, x);\n}\n\nfloat get(sampler2D tex, ivec2 texSize, ivec3 texDim, int bitRatio, int x) {\n  return get(tex, texSize, texDim, bitRatio, int(0), int(0), x);\n}\n\nvec4 getImage2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int x) {\n  return getImage2D(tex, texSize, texDim, int(0), int(0), x);\n}\n\n\nvec4 actualColor;\nvoid color(float r, float g, float b, float a) {\n  actualColor = vec4(r,g,b,a);\n}\n\nvoid color(float r, float g, float b) {\n  color(r,g,b,1.0);\n}\n\nvoid color(sampler2D image) {\n  actualColor = texture2D(image, vTexCoord);\n}\n\n__MAIN_PARAMS__;\n__MAIN_CONSTANTS__;\n__KERNEL__;\n\nvoid main(void) {\n  index = int(vTexCoord.s * float(uTexSize.x)) + int(vTexCoord.t * float(uTexSize.y)) * uTexSize.x;\n  __MAIN_RESULT__;\n}"},function(t,e,n){"use strict";t.exports="precision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nattribute vec2 aPos;\nattribute vec2 aTexCoord;\n\nvarying vec2 vTexCoord;\nuniform vec2 ratio;\n\nvoid main(void) {\n  gl_Position = vec4((aPos + vec2(1)) * ratio + vec2(-1), 0, 1);\n  vTexCoord = aTexCoord;\n}"},function(t,e,n){"use strict";var r=n(13),i=n(143);n(94),n(73);function s(t){return/^function /.test(t)&&(t=t.substring(9)),t.replace(/[_]typeof/g,"typeof")}function a(t){return t.replace(/[_]typeof/g,"typeof")}t.exports=function(t,e){return"() => {\n    "+i.toString()+";\n    const utils = {\n      allPropertiesOf: "+a(r.allPropertiesOf.toString())+",\n      clone: "+a(r.clone.toString())+",\n      splitArray: "+a(r.splitArray.toString())+",\n      getArgumentType: "+a(r.getArgumentType.toString())+",\n      getDimensions: "+a(r.getDimensions.toString())+",\n      dimToTexSize: "+a(r.dimToTexSize.toString())+",\n      flattenTo: "+a(r.flattenTo.toString())+",\n      flatten2dArrayTo: "+a(r.flatten2dArrayTo.toString())+",\n      flatten3dArrayTo: "+a(r.flatten3dArrayTo.toString())+",\n      systemEndianness: '"+a(r.systemEndianness())+"',\n      initWebGl: "+a(r.initWebGl.toString())+",\n      isArray: "+a(r.isArray.toString())+",\n      checkOutput: "+a(r.checkOutput.toString())+"\n    };\n    const Utils = utils;\n    const canvases = [];\n    const maxTexSizes = {};\n    let Texture = function() {};\n    let Input = function() {}; \n    class "+(e||"Kernel")+" {\n      constructor() {\n        this.maxTexSize = null;\n        this.argumentsLength = 0;\n        this.constantsLength = 0;\n        this._canvas = null;\n        this._webGl = null;\n        this.program = null;\n        this.outputToTexture = "+(t.outputToTexture?"true":"false")+";\n        this.paramNames = "+JSON.stringify(t.paramNames)+";\n        this.paramTypes = "+JSON.stringify(t.paramTypes)+";\n        this.texSize = "+JSON.stringify(t.texSize)+";\n        this.output = "+JSON.stringify(t.output)+";\n        this.compiledFragShaderString = `"+t.compiledFragShaderString+"`;\n\t\t    this.compiledVertShaderString = `"+t.compiledVertShaderString+"`;\n\t\t    this.programUniformLocationCache = {};\n\t\t    this.textureCache = {};\n\t\t    this.subKernelOutputTextures = null;\n\t\t    this.subKernelOutputVariableNames = null;\n\t\t    this.uniform1fCache = {};\n\t\t    this.uniform1iCache = {};\n\t\t    this.uniform2fCache = {};\n\t\t    this.uniform2fvCache = {};\n\t\t    this.uniform2ivCache = {};\n\t\t    this.uniform3fvCache = {};\n\t\t    this.uniform3ivCache = {};\n      }\n      _getFragShaderString() { return this.compiledFragShaderString; }\n      _getVertShaderString() { return this.compiledVertShaderString; }\n      validateOptions() {}\n      setupParams() {}\n      setupConstants() {}\n      setCanvas(canvas) { this._canvas = canvas; return this; }\n      setWebGl(webGl) { this._webGl = webGl; return this; }\n      setTexture(Type) { Texture = Type; }\n      setInput(Type) { Input = Type; }\n      "+s(t.getUniformLocation.toString())+"\n      "+s(t.build.toString())+"\n\t\t  "+s(t.run.toString())+"\n\t\t  "+s(t._addArgument.toString())+"\n\t\t  "+s(t._formatArrayTransfer.toString())+"\n\t\t  "+s(t.getArgumentTexture.toString())+"\n\t\t  "+s(t.getTextureCache.toString())+"\n\t\t  "+s(t.getOutputTexture.toString())+"\n\t\t  "+s(t.renderOutput.toString())+"\n\t\t  "+s(t.updateMaxTexSize.toString())+"\n\t\t  "+s(t._setupOutputTexture.toString())+"\n\t\t  "+s(t.detachTextureCache.toString())+"\n\t\t  "+s(t.setUniform1f.toString())+"\n\t\t  "+s(t.setUniform1i.toString())+"\n\t\t  "+s(t.setUniform2f.toString())+"\n\t\t  "+s(t.setUniform2fv.toString())+"\n\t\t  "+s(t.setUniform2iv.toString())+"\n\t\t  "+s(t.setUniform3fv.toString())+"\n\t\t  "+s(t.setUniform3iv.toString())+"\n    };\n    return kernelRunShortcut(new Kernel());\n  };"}},function(t,e,n){"use strict";n.r(e),n.d(e,"version",function(){return kt}),n.d(e,"parse",function(){return St}),n.d(e,"parseExpressionAt",function(){return Ot}),n.d(e,"tokenizer",function(){return At}),n.d(e,"parse_dammit",function(){return Tt}),n.d(e,"LooseParser",function(){return wt}),n.d(e,"pluginsLoose",function(){return Et}),n.d(e,"addLooseExports",function(){return Pt}),n.d(e,"Parser",function(){return U}),n.d(e,"plugins",function(){return M}),n.d(e,"defaultOptions",function(){return j}),n.d(e,"Position",function(){return C}),n.d(e,"SourceLocation",function(){return D}),n.d(e,"getLineInfo",function(){return N}),n.d(e,"Node",function(){return tt}),n.d(e,"TokenType",function(){return v}),n.d(e,"tokTypes",function(){return T}),n.d(e,"keywordTypes",function(){return x}),n.d(e,"TokContext",function(){return rt}),n.d(e,"tokContexts",function(){return it}),n.d(e,"isIdentifierChar",function(){return g}),n.d(e,"isIdentifierStart",function(){return d}),n.d(e,"Token",function(){return mt}),n.d(e,"isNewLine",function(){return k}),n.d(e,"lineBreak",function(){return w}),n.d(e,"lineBreakG",function(){return E}),n.d(e,"nonASCIIwhitespace",function(){return S});var r={3:"abstract boolean byte char class double enum export extends final float goto implements import int interface long native package private protected public short static super synchronized throws transient volatile",5:"class enum extends super const export import",6:"enum",strict:"implements interface let package private protected public static yield",strictBind:"eval arguments"},i="break case catch continue debugger default do else finally for function if return switch throw try var while with null true false instanceof typeof void delete new in this",s={5:i,6:i+" const class extends export import super"},a=/^in(stanceof)?$/,o="ªµºÀ-ÖØ-öø-ˁˆ-ˑˠ-ˤˬˮͰ-ʹͶͷͺ-ͽͿΆΈ-ΊΌΎ-ΡΣ-ϵϷ-ҁҊ-ԯԱ-Ֆՙՠ-ֈא-תׯ-ײؠ-يٮٯٱ-ۓەۥۦۮۯۺ-ۼۿܐܒ-ܯݍ-ޥޱߊ-ߪߴߵߺࠀ-ࠕࠚࠤࠨࡀ-ࡘࡠ-ࡪࢠ-ࢴࢶ-ࢽऄ-हऽॐक़-ॡॱ-ঀঅ-ঌএঐও-নপ-রলশ-হঽৎড়ঢ়য়-ৡৰৱৼਅ-ਊਏਐਓ-ਨਪ-ਰਲਲ਼ਵਸ਼ਸਹਖ਼-ੜਫ਼ੲ-ੴઅ-ઍએ-ઑઓ-નપ-રલળવ-હઽૐૠૡૹଅ-ଌଏଐଓ-ନପ-ରଲଳଵ-ହଽଡ଼ଢ଼ୟ-ୡୱஃஅ-ஊஎ-ஐஒ-கஙசஜஞடணதந-பம-ஹௐఅ-ఌఎ-ఐఒ-నప-హఽౘ-ౚౠౡಀಅ-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹಽೞೠೡೱೲഅ-ഌഎ-ഐഒ-ഺഽൎൔ-ൖൟ-ൡൺ-ൿඅ-ඖක-නඳ-රලව-ෆก-ะาำเ-ๆກຂຄງຈຊຍດ-ທນ-ຟມ-ຣລວສຫອ-ະາຳຽເ-ໄໆໜ-ໟༀཀ-ཇཉ-ཬྈ-ྌက-ဪဿၐ-ၕၚ-ၝၡၥၦၮ-ၰၵ-ႁႎႠ-ჅჇჍა-ჺჼ-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚᎀ-ᎏᎠ-Ᏽᏸ-ᏽᐁ-ᙬᙯ-ᙿᚁ-ᚚᚠ-ᛪᛮ-ᛸᜀ-ᜌᜎ-ᜑᜠ-ᜱᝀ-ᝑᝠ-ᝬᝮ-ᝰក-ឳៗៜᠠ-ᡸᢀ-ᢨᢪᢰ-ᣵᤀ-ᤞᥐ-ᥭᥰ-ᥴᦀ-ᦫᦰ-ᧉᨀ-ᨖᨠ-ᩔᪧᬅ-ᬳᭅ-ᭋᮃ-ᮠᮮᮯᮺ-ᯥᰀ-ᰣᱍ-ᱏᱚ-ᱽᲀ-ᲈᲐ-ᲺᲽ-Ჿᳩ-ᳬᳮ-ᳱᳵᳶᴀ-ᶿḀ-ἕἘ-Ἕἠ-ὅὈ-Ὅὐ-ὗὙὛὝὟ-ώᾀ-ᾴᾶ-ᾼιῂ-ῄῆ-ῌῐ-ΐῖ-Ίῠ-Ῥῲ-ῴῶ-ῼⁱⁿₐ-ₜℂℇℊ-ℓℕ℘-ℝℤΩℨK-ℹℼ-ℿⅅ-ⅉⅎⅠ-ↈⰀ-Ⱞⰰ-ⱞⱠ-ⳤⳫ-ⳮⳲⳳⴀ-ⴥⴧⴭⴰ-ⵧⵯⶀ-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞ々-〇〡-〩〱-〵〸-〼ぁ-ゖ゛-ゟァ-ヺー-ヿㄅ-ㄯㄱ-ㆎㆠ-ㆺㇰ-ㇿ㐀-䶵一-鿯ꀀ-ꒌꓐ-ꓽꔀ-ꘌꘐ-ꘟꘪꘫꙀ-ꙮꙿ-ꚝꚠ-ꛯꜗ-ꜟꜢ-ꞈꞋ-ꞹꟷ-ꠁꠃ-ꠅꠇ-ꠊꠌ-ꠢꡀ-ꡳꢂ-ꢳꣲ-ꣷꣻꣽꣾꤊ-ꤥꤰ-ꥆꥠ-ꥼꦄ-ꦲꧏꧠ-ꧤꧦ-ꧯꧺ-ꧾꨀ-ꨨꩀ-ꩂꩄ-ꩋꩠ-ꩶꩺꩾ-ꪯꪱꪵꪶꪹ-ꪽꫀꫂꫛ-ꫝꫠ-ꫪꫲ-ꫴꬁ-ꬆꬉ-ꬎꬑ-ꬖꬠ-ꬦꬨ-ꬮꬰ-ꭚꭜ-ꭥꭰ-ꯢ가-힣ힰ-ퟆퟋ-ퟻ豈-舘並-龎ﬀ-ﬆﬓ-ﬗיִײַ-ﬨשׁ-זּטּ-לּמּנּסּףּפּצּ-ﮱﯓ-ﴽﵐ-ﶏﶒ-ﷇﷰ-ﷻﹰ-ﹴﹶ-ﻼＡ-Ｚａ-ｚｦ-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ",u="‌‍·̀-ͯ·҃-֑҇-ׇֽֿׁׂׅׄؐ-ًؚ-٩ٰۖ-ۜ۟-۪ۤۧۨ-ۭ۰-۹ܑܰ-݊ަ-ް߀-߉߫-߽߳ࠖ-࠙ࠛ-ࠣࠥ-ࠧࠩ-࡙࠭-࡛࣓-ࣣ࣡-ःऺ-़ा-ॏ॑-ॗॢॣ०-९ঁ-ঃ়া-ৄেৈো-্ৗৢৣ০-৯৾ਁ-ਃ਼ਾ-ੂੇੈੋ-੍ੑ੦-ੱੵઁ-ઃ઼ા-ૅે-ૉો-્ૢૣ૦-૯ૺ-૿ଁ-ଃ଼ା-ୄେୈୋ-୍ୖୗୢୣ୦-୯ஂா-ூெ-ைொ-்ௗ௦-௯ఀ-ఄా-ౄె-ైొ-్ౕౖౢౣ౦-౯ಁ-ಃ಼ಾ-ೄೆ-ೈೊ-್ೕೖೢೣ೦-೯ഀ-ഃ഻഼ാ-ൄെ-ൈൊ-്ൗൢൣ൦-൯ංඃ්ා-ුූෘ-ෟ෦-෯ෲෳัิ-ฺ็-๎๐-๙ັິ-ູົຼ່-ໍ໐-໙༘༙༠-༩༹༵༷༾༿ཱ-྄྆྇ྍ-ྗྙ-ྼ࿆ါ-ှ၀-၉ၖ-ၙၞ-ၠၢ-ၤၧ-ၭၱ-ၴႂ-ႍႏ-ႝ፝-፟፩-፱ᜒ-᜔ᜲ-᜴ᝒᝓᝲᝳ឴-៓៝០-៩᠋-᠍᠐-᠙ᢩᤠ-ᤫᤰ-᤻᥆-᥏᧐-᧚ᨗ-ᨛᩕ-ᩞ᩠-᩿᩼-᪉᪐-᪙᪰-᪽ᬀ-ᬄ᬴-᭄᭐-᭙᭫-᭳ᮀ-ᮂᮡ-ᮭ᮰-᮹᯦-᯳ᰤ-᰷᱀-᱉᱐-᱙᳐-᳔᳒-᳨᳭ᳲ-᳴᳷-᳹᷀-᷹᷻-᷿‿⁀⁔⃐-⃥⃜⃡-⃰⳯-⵿⳱ⷠ-〪ⷿ-゙゚〯꘠-꘩꙯ꙴ-꙽ꚞꚟ꛰꛱ꠂ꠆ꠋꠣ-ꠧꢀꢁꢴ-ꣅ꣐-꣙꣠-꣱ꣿ-꤉ꤦ-꤭ꥇ-꥓ꦀ-ꦃ꦳-꧀꧐-꧙ꧥ꧰-꧹ꨩ-ꨶꩃꩌꩍ꩐-꩙ꩻ-ꩽꪰꪲ-ꪴꪷꪸꪾ꪿꫁ꫫ-ꫯꫵ꫶ꯣ-ꯪ꯬꯭꯰-꯹ﬞ︀-️︠-︯︳︴﹍-﹏０-９＿",h=new RegExp("["+o+"]"),l=new RegExp("["+o+u+"]");o=u=null;var c=[0,11,2,25,2,18,2,1,2,14,3,13,35,122,70,52,268,28,4,48,48,31,14,29,6,37,11,29,3,35,5,7,2,4,43,157,19,35,5,35,5,39,9,51,157,310,10,21,11,7,153,5,3,0,2,43,2,1,4,0,3,22,11,22,10,30,66,18,2,1,11,21,11,25,71,55,7,1,65,0,16,3,2,2,2,28,43,28,4,28,36,7,2,27,28,53,11,21,11,18,14,17,111,72,56,50,14,50,14,35,477,28,11,0,9,21,190,52,76,44,33,24,27,35,30,0,12,34,4,0,13,47,15,3,22,0,2,0,36,17,2,24,85,6,2,0,2,3,2,14,2,9,8,46,39,7,3,1,3,21,2,6,2,1,2,4,4,0,19,0,13,4,159,52,19,3,54,47,21,1,2,0,185,46,42,3,37,47,21,0,60,42,86,26,230,43,117,63,32,0,257,0,11,39,8,0,22,0,12,39,3,3,20,0,35,56,264,8,2,36,18,0,50,29,113,6,2,1,2,37,22,0,26,5,2,1,2,31,15,0,328,18,270,921,103,110,18,195,2749,1070,4050,582,8634,568,8,30,114,29,19,47,17,3,32,20,6,18,689,63,129,68,12,0,67,12,65,1,31,6129,15,754,9486,286,82,395,2309,106,6,12,4,8,8,9,5991,84,2,70,2,1,3,0,3,1,3,3,2,11,2,0,2,6,2,64,2,3,3,7,2,6,2,27,2,3,2,4,2,0,4,6,2,339,3,24,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,7,4149,196,60,67,1213,3,2,26,2,1,2,0,3,0,2,9,2,3,2,0,2,0,7,0,5,0,2,0,2,0,2,2,2,1,2,0,3,0,2,0,2,0,2,0,2,0,2,1,2,0,3,3,2,6,2,3,2,3,2,0,2,9,2,16,6,2,2,4,2,16,4421,42710,42,4148,12,221,3,5761,15,7472,3104,541],p=[509,0,227,0,150,4,294,9,1368,2,2,1,6,3,41,2,5,0,166,1,574,3,9,9,525,10,176,2,54,14,32,9,16,3,46,10,54,9,7,2,37,13,2,9,6,1,45,0,13,2,49,13,9,3,4,9,83,11,7,0,161,11,6,9,7,3,56,1,2,6,3,1,3,2,10,0,11,1,3,6,4,4,193,17,10,9,5,0,82,19,13,9,214,6,3,8,28,1,83,16,16,9,82,12,9,9,84,14,5,9,243,14,166,9,280,9,41,6,2,3,9,0,10,10,47,15,406,7,2,7,17,9,57,21,2,13,123,5,4,0,2,1,2,6,2,0,9,9,49,4,2,1,2,4,9,9,330,3,19306,9,135,4,60,6,26,9,1016,45,17,3,19723,1,5319,4,4,5,9,7,3,6,31,3,149,2,1418,49,513,54,5,49,9,0,15,0,23,4,2,14,1361,6,2,16,3,6,2,1,2,4,2214,6,110,6,6,9,792487,239];function f(t,e){for(var n=65536,r=0;r<e.length;r+=2){if((n+=e[r])>t)return!1;if((n+=e[r+1])>=t)return!0}}function d(t,e){return t<65?36===t:t<91||(t<97?95===t:t<123||(t<=65535?t>=170&&h.test(String.fromCharCode(t)):!1!==e&&f(t,c)))}function g(t,e){return t<48?36===t:t<58||!(t<65)&&(t<91||(t<97?95===t:t<123||(t<=65535?t>=170&&l.test(String.fromCharCode(t)):!1!==e&&(f(t,c)||f(t,p)))))}var v=function(t,e){void 0===e&&(e={}),this.label=t,this.keyword=e.keyword,this.beforeExpr=!!e.beforeExpr,this.startsExpr=!!e.startsExpr,this.isLoop=!!e.isLoop,this.isAssign=!!e.isAssign,this.prefix=!!e.prefix,this.postfix=!!e.postfix,this.binop=e.binop||null,this.updateContext=null};function y(t,e){return new v(t,{beforeExpr:!0,binop:e})}var m={beforeExpr:!0},b={startsExpr:!0},x={};function _(t,e){return void 0===e&&(e={}),e.keyword=t,x[t]=new v(t,e)}var T={num:new v("num",b),regexp:new v("regexp",b),string:new v("string",b),name:new v("name",b),eof:new v("eof"),bracketL:new v("[",{beforeExpr:!0,startsExpr:!0}),bracketR:new v("]"),braceL:new v("{",{beforeExpr:!0,startsExpr:!0}),braceR:new v("}"),parenL:new v("(",{beforeExpr:!0,startsExpr:!0}),parenR:new v(")"),comma:new v(",",m),semi:new v(";",m),colon:new v(":",m),dot:new v("."),question:new v("?",m),arrow:new v("=>",m),template:new v("template"),invalidTemplate:new v("invalidTemplate"),ellipsis:new v("...",m),backQuote:new v("`",b),dollarBraceL:new v("${",{beforeExpr:!0,startsExpr:!0}),eq:new v("=",{beforeExpr:!0,isAssign:!0}),assign:new v("_=",{beforeExpr:!0,isAssign:!0}),incDec:new v("++/--",{prefix:!0,postfix:!0,startsExpr:!0}),prefix:new v("!/~",{beforeExpr:!0,prefix:!0,startsExpr:!0}),logicalOR:y("||",1),logicalAND:y("&&",2),bitwiseOR:y("|",3),bitwiseXOR:y("^",4),bitwiseAND:y("&",5),equality:y("==/!=/===/!==",6),relational:y("</>/<=/>=",7),bitShift:y("<</>>/>>>",8),plusMin:new v("+/-",{beforeExpr:!0,binop:9,prefix:!0,startsExpr:!0}),modulo:y("%",10),star:y("*",10),slash:y("/",10),starstar:new v("**",{beforeExpr:!0}),_break:_("break"),_case:_("case",m),_catch:_("catch"),_continue:_("continue"),_debugger:_("debugger"),_default:_("default",m),_do:_("do",{isLoop:!0,beforeExpr:!0}),_else:_("else",m),_finally:_("finally"),_for:_("for",{isLoop:!0}),_function:_("function",b),_if:_("if"),_return:_("return",m),_switch:_("switch"),_throw:_("throw",m),_try:_("try"),_var:_("var"),_const:_("const"),_while:_("while",{isLoop:!0}),_with:_("with"),_new:_("new",{beforeExpr:!0,startsExpr:!0}),_this:_("this",b),_super:_("super",b),_class:_("class",b),_extends:_("extends",m),_export:_("export"),_import:_("import"),_null:_("null",b),_true:_("true",b),_false:_("false",b),_in:_("in",{beforeExpr:!0,binop:7}),_instanceof:_("instanceof",{beforeExpr:!0,binop:7}),_typeof:_("typeof",{beforeExpr:!0,prefix:!0,startsExpr:!0}),_void:_("void",{beforeExpr:!0,prefix:!0,startsExpr:!0}),_delete:_("delete",{beforeExpr:!0,prefix:!0,startsExpr:!0})},w=/\r\n?|\n|\u2028|\u2029/,E=new RegExp(w.source,"g");function k(t,e){return 10===t||13===t||!e&&(8232===t||8233===t)}var S=/[\u1680\u180e\u2000-\u200a\u202f\u205f\u3000\ufeff]/,O=/(?:\s|\/\/.*|\/\*[^]*?\*\/)*/g,A=Object.prototype,P=A.hasOwnProperty,R=A.toString;function L(t,e){return P.call(t,e)}var I=Array.isArray||function(t){return"[object Array]"===R.call(t)},C=function(t,e){this.line=t,this.column=e};C.prototype.offset=function(t){return new C(this.line,this.column+t)};var D=function(t,e,n){this.start=e,this.end=n,null!==t.sourceFile&&(this.source=t.sourceFile)};function N(t,e){for(var n=1,r=0;;){E.lastIndex=r;var i=E.exec(t);if(!(i&&i.index<e))return new C(n,e-r);++n,r=i.index+i[0].length}}var j={ecmaVersion:7,sourceType:"script",onInsertedSemicolon:null,onTrailingComma:null,allowReserved:null,allowReturnOutsideFunction:!1,allowImportExportEverywhere:!1,allowAwaitOutsideFunction:!1,allowHashBang:!1,locations:!1,onToken:null,onComment:null,ranges:!1,program:null,sourceFile:null,directSourceFile:null,preserveParens:!1,plugins:{}};function F(t){var e={};for(var n in j)e[n]=t&&L(t,n)?t[n]:j[n];if(e.ecmaVersion>=2015&&(e.ecmaVersion-=2009),null==e.allowReserved&&(e.allowReserved=e.ecmaVersion<5),I(e.onToken)){var r=e.onToken;e.onToken=function(t){return r.push(t)}}return I(e.onComment)&&(e.onComment=function(t,e){return function(n,r,i,s,a,o){var u={type:n?"Block":"Line",value:r,start:i,end:s};t.locations&&(u.loc=new D(this,a,o)),t.ranges&&(u.range=[i,s]),e.push(u)}}(e,e.onComment)),e}var M={};function G(t){return new RegExp("^(?:"+t.replace(/ /g,"|")+")$")}var U=function(t,e,n){this.options=t=F(t),this.sourceFile=t.sourceFile,this.keywords=G(s[t.ecmaVersion>=6?6:5]);var i="";if(!t.allowReserved){for(var a=t.ecmaVersion;!(i=r[a]);a--);"module"===t.sourceType&&(i+=" await")}this.reservedWords=G(i);var o=(i?i+" ":"")+r.strict;this.reservedWordsStrict=G(o),this.reservedWordsStrictBind=G(o+" "+r.strictBind),this.input=String(e),this.containsEsc=!1,this.loadPlugins(t.plugins),n?(this.pos=n,this.lineStart=this.input.lastIndexOf("\n",n-1)+1,this.curLine=this.input.slice(0,this.lineStart).split(w).length):(this.pos=this.lineStart=0,this.curLine=1),this.type=T.eof,this.value=null,this.start=this.end=this.pos,this.startLoc=this.endLoc=this.curPosition(),this.lastTokEndLoc=this.lastTokStartLoc=null,this.lastTokStart=this.lastTokEnd=this.pos,this.context=this.initialContext(),this.exprAllowed=!0,this.inModule="module"===t.sourceType,this.strict=this.inModule||this.strictDirective(this.pos),this.potentialArrowAt=-1,this.inFunction=this.inGenerator=this.inAsync=!1,this.yieldPos=this.awaitPos=0,this.labels=[],0===this.pos&&t.allowHashBang&&"#!"===this.input.slice(0,2)&&this.skipLineComment(2),this.scopeStack=[],this.enterFunctionScope(),this.regexpState=null};U.prototype.isKeyword=function(t){return this.keywords.test(t)},U.prototype.isReservedWord=function(t){return this.reservedWords.test(t)},U.prototype.extend=function(t,e){this[t]=e(this[t])},U.prototype.loadPlugins=function(t){for(var e in t){var n=M[e];if(!n)throw new Error("Plugin '"+e+"' not found");n(this,t[e])}},U.prototype.parse=function(){var t=this.options.program||this.startNode();return this.nextToken(),this.parseTopLevel(t)};var z=U.prototype,B=/^(?:'((?:\\.|[^'])*?)'|"((?:\\.|[^"])*?)"|;)/;function V(){this.shorthandAssign=this.trailingComma=this.parenthesizedAssign=this.parenthesizedBind=this.doubleProto=-1}z.strictDirective=function(t){for(;;){O.lastIndex=t,t+=O.exec(this.input)[0].length;var e=B.exec(this.input.slice(t));if(!e)return!1;if("use strict"===(e[1]||e[2]))return!0;t+=e[0].length}},z.eat=function(t){return this.type===t&&(this.next(),!0)},z.isContextual=function(t){return this.type===T.name&&this.value===t&&!this.containsEsc},z.eatContextual=function(t){return!!this.isContextual(t)&&(this.next(),!0)},z.expectContextual=function(t){this.eatContextual(t)||this.unexpected()},z.canInsertSemicolon=function(){return this.type===T.eof||this.type===T.braceR||w.test(this.input.slice(this.lastTokEnd,this.start))},z.insertSemicolon=function(){if(this.canInsertSemicolon())return this.options.onInsertedSemicolon&&this.options.onInsertedSemicolon(this.lastTokEnd,this.lastTokEndLoc),!0},z.semicolon=function(){this.eat(T.semi)||this.insertSemicolon()||this.unexpected()},z.afterTrailingComma=function(t,e){if(this.type===t)return this.options.onTrailingComma&&this.options.onTrailingComma(this.lastTokStart,this.lastTokStartLoc),e||this.next(),!0},z.expect=function(t){this.eat(t)||this.unexpected()},z.unexpected=function(t){this.raise(null!=t?t:this.start,"Unexpected token")},z.checkPatternErrors=function(t,e){if(t){t.trailingComma>-1&&this.raiseRecoverable(t.trailingComma,"Comma is not permitted after the rest element");var n=e?t.parenthesizedAssign:t.parenthesizedBind;n>-1&&this.raiseRecoverable(n,"Parenthesized pattern")}},z.checkExpressionErrors=function(t,e){if(!t)return!1;var n=t.shorthandAssign,r=t.doubleProto;if(!e)return n>=0||r>=0;n>=0&&this.raise(n,"Shorthand property assignments are valid only in destructuring patterns"),r>=0&&this.raiseRecoverable(r,"Redefinition of __proto__ property")},z.checkYieldAwaitInDefaultParams=function(){this.yieldPos&&(!this.awaitPos||this.yieldPos<this.awaitPos)&&this.raise(this.yieldPos,"Yield expression cannot be a default value"),this.awaitPos&&this.raise(this.awaitPos,"Await expression cannot be a default value")},z.isSimpleAssignTarget=function(t){return"ParenthesizedExpression"===t.type?this.isSimpleAssignTarget(t.expression):"Identifier"===t.type||"MemberExpression"===t.type};var X=U.prototype;X.parseTopLevel=function(t){var e={};for(t.body||(t.body=[]);this.type!==T.eof;){var n=this.parseStatement(!0,!0,e);t.body.push(n)}return this.adaptDirectivePrologue(t.body),this.next(),this.options.ecmaVersion>=6&&(t.sourceType=this.options.sourceType),this.finishNode(t,"Program")};var K={kind:"loop"},W={kind:"switch"};X.isLet=function(){if(this.options.ecmaVersion<6||!this.isContextual("let"))return!1;O.lastIndex=this.pos;var t=O.exec(this.input),e=this.pos+t[0].length,n=this.input.charCodeAt(e);if(91===n||123===n)return!0;if(d(n,!0)){for(var r=e+1;g(this.input.charCodeAt(r),!0);)++r;var i=this.input.slice(e,r);if(!a.test(i))return!0}return!1},X.isAsyncFunction=function(){if(this.options.ecmaVersion<8||!this.isContextual("async"))return!1;O.lastIndex=this.pos;var t=O.exec(this.input),e=this.pos+t[0].length;return!(w.test(this.input.slice(this.pos,e))||"function"!==this.input.slice(e,e+8)||e+8!==this.input.length&&g(this.input.charAt(e+8)))},X.parseStatement=function(t,e,n){var r,i=this.type,s=this.startNode();switch(this.isLet()&&(i=T._var,r="let"),i){case T._break:case T._continue:return this.parseBreakContinueStatement(s,i.keyword);case T._debugger:return this.parseDebuggerStatement(s);case T._do:return this.parseDoStatement(s);case T._for:return this.parseForStatement(s);case T._function:return!t&&this.options.ecmaVersion>=6&&this.unexpected(),this.parseFunctionStatement(s,!1);case T._class:return t||this.unexpected(),this.parseClass(s,!0);case T._if:return this.parseIfStatement(s);case T._return:return this.parseReturnStatement(s);case T._switch:return this.parseSwitchStatement(s);case T._throw:return this.parseThrowStatement(s);case T._try:return this.parseTryStatement(s);case T._const:case T._var:return r=r||this.value,t||"var"===r||this.unexpected(),this.parseVarStatement(s,r);case T._while:return this.parseWhileStatement(s);case T._with:return this.parseWithStatement(s);case T.braceL:return this.parseBlock();case T.semi:return this.parseEmptyStatement(s);case T._export:case T._import:return this.options.allowImportExportEverywhere||(e||this.raise(this.start,"'import' and 'export' may only appear at the top level"),this.inModule||this.raise(this.start,"'import' and 'export' may appear only with 'sourceType: module'")),i===T._import?this.parseImport(s):this.parseExport(s,n);default:if(this.isAsyncFunction())return t||this.unexpected(),this.next(),this.parseFunctionStatement(s,!0);var a=this.value,o=this.parseExpression();return i===T.name&&"Identifier"===o.type&&this.eat(T.colon)?this.parseLabeledStatement(s,a,o):this.parseExpressionStatement(s,o)}},X.parseBreakContinueStatement=function(t,e){var n="break"===e;this.next(),this.eat(T.semi)||this.insertSemicolon()?t.label=null:this.type!==T.name?this.unexpected():(t.label=this.parseIdent(),this.semicolon());for(var r=0;r<this.labels.length;++r){var i=this.labels[r];if(null==t.label||i.name===t.label.name){if(null!=i.kind&&(n||"loop"===i.kind))break;if(t.label&&n)break}}return r===this.labels.length&&this.raise(t.start,"Unsyntactic "+e),this.finishNode(t,n?"BreakStatement":"ContinueStatement")},X.parseDebuggerStatement=function(t){return this.next(),this.semicolon(),this.finishNode(t,"DebuggerStatement")},X.parseDoStatement=function(t){return this.next(),this.labels.push(K),t.body=this.parseStatement(!1),this.labels.pop(),this.expect(T._while),t.test=this.parseParenExpression(),this.options.ecmaVersion>=6?this.eat(T.semi):this.semicolon(),this.finishNode(t,"DoWhileStatement")},X.parseForStatement=function(t){this.next();var e=this.options.ecmaVersion>=9&&(this.inAsync||!this.inFunction&&this.options.allowAwaitOutsideFunction)&&this.eatContextual("await")?this.lastTokStart:-1;if(this.labels.push(K),this.enterLexicalScope(),this.expect(T.parenL),this.type===T.semi)return e>-1&&this.unexpected(e),this.parseFor(t,null);var n=this.isLet();if(this.type===T._var||this.type===T._const||n){var r=this.startNode(),i=n?"let":this.value;return this.next(),this.parseVar(r,!0,i),this.finishNode(r,"VariableDeclaration"),!(this.type===T._in||this.options.ecmaVersion>=6&&this.isContextual("of"))||1!==r.declarations.length||"var"!==i&&r.declarations[0].init?(e>-1&&this.unexpected(e),this.parseFor(t,r)):(this.options.ecmaVersion>=9&&(this.type===T._in?e>-1&&this.unexpected(e):t.await=e>-1),this.parseForIn(t,r))}var s=new V,a=this.parseExpression(!0,s);return this.type===T._in||this.options.ecmaVersion>=6&&this.isContextual("of")?(this.options.ecmaVersion>=9&&(this.type===T._in?e>-1&&this.unexpected(e):t.await=e>-1),this.toAssignable(a,!1,s),this.checkLVal(a),this.parseForIn(t,a)):(this.checkExpressionErrors(s,!0),e>-1&&this.unexpected(e),this.parseFor(t,a))},X.parseFunctionStatement=function(t,e){return this.next(),this.parseFunction(t,!0,!1,e)},X.parseIfStatement=function(t){return this.next(),t.test=this.parseParenExpression(),t.consequent=this.parseStatement(!this.strict&&this.type===T._function),t.alternate=this.eat(T._else)?this.parseStatement(!this.strict&&this.type===T._function):null,this.finishNode(t,"IfStatement")},X.parseReturnStatement=function(t){return this.inFunction||this.options.allowReturnOutsideFunction||this.raise(this.start,"'return' outside of function"),this.next(),this.eat(T.semi)||this.insertSemicolon()?t.argument=null:(t.argument=this.parseExpression(),this.semicolon()),this.finishNode(t,"ReturnStatement")},X.parseSwitchStatement=function(t){var e;this.next(),t.discriminant=this.parseParenExpression(),t.cases=[],this.expect(T.braceL),this.labels.push(W),this.enterLexicalScope();for(var n=!1;this.type!==T.braceR;)if(this.type===T._case||this.type===T._default){var r=this.type===T._case;e&&this.finishNode(e,"SwitchCase"),t.cases.push(e=this.startNode()),e.consequent=[],this.next(),r?e.test=this.parseExpression():(n&&this.raiseRecoverable(this.lastTokStart,"Multiple default clauses"),n=!0,e.test=null),this.expect(T.colon)}else e||this.unexpected(),e.consequent.push(this.parseStatement(!0));return this.exitLexicalScope(),e&&this.finishNode(e,"SwitchCase"),this.next(),this.labels.pop(),this.finishNode(t,"SwitchStatement")},X.parseThrowStatement=function(t){return this.next(),w.test(this.input.slice(this.lastTokEnd,this.start))&&this.raise(this.lastTokEnd,"Illegal newline after throw"),t.argument=this.parseExpression(),this.semicolon(),this.finishNode(t,"ThrowStatement")};var q=[];X.parseTryStatement=function(t){if(this.next(),t.block=this.parseBlock(),t.handler=null,this.type===T._catch){var e=this.startNode();this.next(),this.eat(T.parenL)?(e.param=this.parseBindingAtom(),this.enterLexicalScope(),this.checkLVal(e.param,"let"),this.expect(T.parenR)):(this.options.ecmaVersion<10&&this.unexpected(),e.param=null,this.enterLexicalScope()),e.body=this.parseBlock(!1),this.exitLexicalScope(),t.handler=this.finishNode(e,"CatchClause")}return t.finalizer=this.eat(T._finally)?this.parseBlock():null,t.handler||t.finalizer||this.raise(t.start,"Missing catch or finally clause"),this.finishNode(t,"TryStatement")},X.parseVarStatement=function(t,e){return this.next(),this.parseVar(t,!1,e),this.semicolon(),this.finishNode(t,"VariableDeclaration")},X.parseWhileStatement=function(t){return this.next(),t.test=this.parseParenExpression(),this.labels.push(K),t.body=this.parseStatement(!1),this.labels.pop(),this.finishNode(t,"WhileStatement")},X.parseWithStatement=function(t){return this.strict&&this.raise(this.start,"'with' in strict mode"),this.next(),t.object=this.parseParenExpression(),t.body=this.parseStatement(!1),this.finishNode(t,"WithStatement")},X.parseEmptyStatement=function(t){return this.next(),this.finishNode(t,"EmptyStatement")},X.parseLabeledStatement=function(t,e,n){for(var r=0,i=this.labels;r<i.length;r+=1){i[r].name===e&&this.raise(n.start,"Label '"+e+"' is already declared")}for(var s=this.type.isLoop?"loop":this.type===T._switch?"switch":null,a=this.labels.length-1;a>=0;a--){var o=this.labels[a];if(o.statementStart!==t.start)break;o.statementStart=this.start,o.kind=s}return this.labels.push({name:e,kind:s,statementStart:this.start}),t.body=this.parseStatement(!0),("ClassDeclaration"===t.body.type||"VariableDeclaration"===t.body.type&&"var"!==t.body.kind||"FunctionDeclaration"===t.body.type&&(this.strict||t.body.generator||t.body.async))&&this.raiseRecoverable(t.body.start,"Invalid labeled declaration"),this.labels.pop(),t.label=n,this.finishNode(t,"LabeledStatement")},X.parseExpressionStatement=function(t,e){return t.expression=e,this.semicolon(),this.finishNode(t,"ExpressionStatement")},X.parseBlock=function(t){void 0===t&&(t=!0);var e=this.startNode();for(e.body=[],this.expect(T.braceL),t&&this.enterLexicalScope();!this.eat(T.braceR);){var n=this.parseStatement(!0);e.body.push(n)}return t&&this.exitLexicalScope(),this.finishNode(e,"BlockStatement")},X.parseFor=function(t,e){return t.init=e,this.expect(T.semi),t.test=this.type===T.semi?null:this.parseExpression(),this.expect(T.semi),t.update=this.type===T.parenR?null:this.parseExpression(),this.expect(T.parenR),this.exitLexicalScope(),t.body=this.parseStatement(!1),this.labels.pop(),this.finishNode(t,"ForStatement")},X.parseForIn=function(t,e){var n=this.type===T._in?"ForInStatement":"ForOfStatement";return this.next(),"ForInStatement"===n&&("AssignmentPattern"===e.type||"VariableDeclaration"===e.type&&null!=e.declarations[0].init&&(this.strict||"Identifier"!==e.declarations[0].id.type))&&this.raise(e.start,"Invalid assignment in for-in loop head"),t.left=e,t.right="ForInStatement"===n?this.parseExpression():this.parseMaybeAssign(),this.expect(T.parenR),this.exitLexicalScope(),t.body=this.parseStatement(!1),this.labels.pop(),this.finishNode(t,n)},X.parseVar=function(t,e,n){for(t.declarations=[],t.kind=n;;){var r=this.startNode();if(this.parseVarId(r,n),this.eat(T.eq)?r.init=this.parseMaybeAssign(e):"const"!==n||this.type===T._in||this.options.ecmaVersion>=6&&this.isContextual("of")?"Identifier"===r.id.type||e&&(this.type===T._in||this.isContextual("of"))?r.init=null:this.raise(this.lastTokEnd,"Complex binding patterns require an initialization value"):this.unexpected(),t.declarations.push(this.finishNode(r,"VariableDeclarator")),!this.eat(T.comma))break}return t},X.parseVarId=function(t,e){t.id=this.parseBindingAtom(e),this.checkLVal(t.id,e,!1)},X.parseFunction=function(t,e,n,r){this.initFunction(t),(this.options.ecmaVersion>=9||this.options.ecmaVersion>=6&&!r)&&(t.generator=this.eat(T.star)),this.options.ecmaVersion>=8&&(t.async=!!r),e&&(t.id="nullableID"===e&&this.type!==T.name?null:this.parseIdent(),t.id&&this.checkLVal(t.id,this.inModule&&!this.inFunction?"let":"var"));var i=this.inGenerator,s=this.inAsync,a=this.yieldPos,o=this.awaitPos,u=this.inFunction;return this.inGenerator=t.generator,this.inAsync=t.async,this.yieldPos=0,this.awaitPos=0,this.inFunction=!0,this.enterFunctionScope(),e||(t.id=this.type===T.name?this.parseIdent():null),this.parseFunctionParams(t),this.parseFunctionBody(t,n),this.inGenerator=i,this.inAsync=s,this.yieldPos=a,this.awaitPos=o,this.inFunction=u,this.finishNode(t,e?"FunctionDeclaration":"FunctionExpression")},X.parseFunctionParams=function(t){this.expect(T.parenL),t.params=this.parseBindingList(T.parenR,!1,this.options.ecmaVersion>=8),this.checkYieldAwaitInDefaultParams()},X.parseClass=function(t,e){this.next(),this.parseClassId(t,e),this.parseClassSuper(t);var n=this.startNode(),r=!1;for(n.body=[],this.expect(T.braceL);!this.eat(T.braceR);){var i=this.parseClassMember(n);i&&"MethodDefinition"===i.type&&"constructor"===i.kind&&(r&&this.raise(i.start,"Duplicate constructor in the same class"),r=!0)}return t.body=this.finishNode(n,"ClassBody"),this.finishNode(t,e?"ClassDeclaration":"ClassExpression")},X.parseClassMember=function(t){var e=this;if(this.eat(T.semi))return null;var n=this.startNode(),r=function(t,r){void 0===r&&(r=!1);var i=e.start,s=e.startLoc;return!!e.eatContextual(t)&&(!(e.type===T.parenL||r&&e.canInsertSemicolon())||(n.key&&e.unexpected(),n.computed=!1,n.key=e.startNodeAt(i,s),n.key.name=t,e.finishNode(n.key,"Identifier"),!1))};n.kind="method",n.static=r("static");var i=this.eat(T.star),s=!1;i||(this.options.ecmaVersion>=8&&r("async",!0)?(s=!0,i=this.options.ecmaVersion>=9&&this.eat(T.star)):r("get")?n.kind="get":r("set")&&(n.kind="set")),n.key||this.parsePropertyName(n);var a=n.key;return n.computed||n.static||!("Identifier"===a.type&&"constructor"===a.name||"Literal"===a.type&&"constructor"===a.value)?n.static&&"Identifier"===a.type&&"prototype"===a.name&&this.raise(a.start,"Classes may not have a static property named prototype"):("method"!==n.kind&&this.raise(a.start,"Constructor can't have get/set modifier"),i&&this.raise(a.start,"Constructor can't be a generator"),s&&this.raise(a.start,"Constructor can't be an async method"),n.kind="constructor"),this.parseClassMethod(t,n,i,s),"get"===n.kind&&0!==n.value.params.length&&this.raiseRecoverable(n.value.start,"getter should have no params"),"set"===n.kind&&1!==n.value.params.length&&this.raiseRecoverable(n.value.start,"setter should have exactly one param"),"set"===n.kind&&"RestElement"===n.value.params[0].type&&this.raiseRecoverable(n.value.params[0].start,"Setter cannot use rest params"),n},X.parseClassMethod=function(t,e,n,r){e.value=this.parseMethod(n,r),t.body.push(this.finishNode(e,"MethodDefinition"))},X.parseClassId=function(t,e){t.id=this.type===T.name?this.parseIdent():!0===e?this.unexpected():null},X.parseClassSuper=function(t){t.superClass=this.eat(T._extends)?this.parseExprSubscripts():null},X.parseExport=function(t,e){if(this.next(),this.eat(T.star))return this.expectContextual("from"),this.type!==T.string&&this.unexpected(),t.source=this.parseExprAtom(),this.semicolon(),this.finishNode(t,"ExportAllDeclaration");if(this.eat(T._default)){var n;if(this.checkExport(e,"default",this.lastTokStart),this.type===T._function||(n=this.isAsyncFunction())){var r=this.startNode();this.next(),n&&this.next(),t.declaration=this.parseFunction(r,"nullableID",!1,n)}else if(this.type===T._class){var i=this.startNode();t.declaration=this.parseClass(i,"nullableID")}else t.declaration=this.parseMaybeAssign(),this.semicolon();return this.finishNode(t,"ExportDefaultDeclaration")}if(this.shouldParseExportStatement())t.declaration=this.parseStatement(!0),"VariableDeclaration"===t.declaration.type?this.checkVariableExport(e,t.declaration.declarations):this.checkExport(e,t.declaration.id.name,t.declaration.id.start),t.specifiers=[],t.source=null;else{if(t.declaration=null,t.specifiers=this.parseExportSpecifiers(e),this.eatContextual("from"))this.type!==T.string&&this.unexpected(),t.source=this.parseExprAtom();else{for(var s=0,a=t.specifiers;s<a.length;s+=1){var o=a[s];this.checkUnreserved(o.local)}t.source=null}this.semicolon()}return this.finishNode(t,"ExportNamedDeclaration")},X.checkExport=function(t,e,n){t&&(L(t,e)&&this.raiseRecoverable(n,"Duplicate export '"+e+"'"),t[e]=!0)},X.checkPatternExport=function(t,e){var n=e.type;if("Identifier"===n)this.checkExport(t,e.name,e.start);else if("ObjectPattern"===n)for(var r=0,i=e.properties;r<i.length;r+=1){var s=i[r];this.checkPatternExport(t,s)}else if("ArrayPattern"===n)for(var a=0,o=e.elements;a<o.length;a+=1){var u=o[a];u&&this.checkPatternExport(t,u)}else"Property"===n?this.checkPatternExport(t,e.value):"AssignmentPattern"===n?this.checkPatternExport(t,e.left):"RestElement"===n?this.checkPatternExport(t,e.argument):"ParenthesizedExpression"===n&&this.checkPatternExport(t,e.expression)},X.checkVariableExport=function(t,e){if(t)for(var n=0,r=e;n<r.length;n+=1){var i=r[n];this.checkPatternExport(t,i.id)}},X.shouldParseExportStatement=function(){return"var"===this.type.keyword||"const"===this.type.keyword||"class"===this.type.keyword||"function"===this.type.keyword||this.isLet()||this.isAsyncFunction()},X.parseExportSpecifiers=function(t){var e=[],n=!0;for(this.expect(T.braceL);!this.eat(T.braceR);){if(n)n=!1;else if(this.expect(T.comma),this.afterTrailingComma(T.braceR))break;var r=this.startNode();r.local=this.parseIdent(!0),r.exported=this.eatContextual("as")?this.parseIdent(!0):r.local,this.checkExport(t,r.exported.name,r.exported.start),e.push(this.finishNode(r,"ExportSpecifier"))}return e},X.parseImport=function(t){return this.next(),this.type===T.string?(t.specifiers=q,t.source=this.parseExprAtom()):(t.specifiers=this.parseImportSpecifiers(),this.expectContextual("from"),t.source=this.type===T.string?this.parseExprAtom():this.unexpected()),this.semicolon(),this.finishNode(t,"ImportDeclaration")},X.parseImportSpecifiers=function(){var t=[],e=!0;if(this.type===T.name){var n=this.startNode();if(n.local=this.parseIdent(),this.checkLVal(n.local,"let"),t.push(this.finishNode(n,"ImportDefaultSpecifier")),!this.eat(T.comma))return t}if(this.type===T.star){var r=this.startNode();return this.next(),this.expectContextual("as"),r.local=this.parseIdent(),this.checkLVal(r.local,"let"),t.push(this.finishNode(r,"ImportNamespaceSpecifier")),t}for(this.expect(T.braceL);!this.eat(T.braceR);){if(e)e=!1;else if(this.expect(T.comma),this.afterTrailingComma(T.braceR))break;var i=this.startNode();i.imported=this.parseIdent(!0),this.eatContextual("as")?i.local=this.parseIdent():(this.checkUnreserved(i.imported),i.local=i.imported),this.checkLVal(i.local,"let"),t.push(this.finishNode(i,"ImportSpecifier"))}return t},X.adaptDirectivePrologue=function(t){for(var e=0;e<t.length&&this.isDirectiveCandidate(t[e]);++e)t[e].directive=t[e].expression.raw.slice(1,-1)},X.isDirectiveCandidate=function(t){return"ExpressionStatement"===t.type&&"Literal"===t.expression.type&&"string"==typeof t.expression.value&&('"'===this.input[t.start]||"'"===this.input[t.start])};var H=U.prototype;H.toAssignable=function(t,e,n){if(this.options.ecmaVersion>=6&&t)switch(t.type){case"Identifier":this.inAsync&&"await"===t.name&&this.raise(t.start,"Can not use 'await' as identifier inside an async function");break;case"ObjectPattern":case"ArrayPattern":case"RestElement":break;case"ObjectExpression":t.type="ObjectPattern",n&&this.checkPatternErrors(n,!0);for(var r=0,i=t.properties;r<i.length;r+=1){var s=i[r];this.toAssignable(s,e),"RestElement"!==s.type||"ArrayPattern"!==s.argument.type&&"ObjectPattern"!==s.argument.type||this.raise(s.argument.start,"Unexpected token")}break;case"Property":"init"!==t.kind&&this.raise(t.key.start,"Object pattern can't contain getter or setter"),this.toAssignable(t.value,e);break;case"ArrayExpression":t.type="ArrayPattern",n&&this.checkPatternErrors(n,!0),this.toAssignableList(t.elements,e);break;case"SpreadElement":t.type="RestElement",this.toAssignable(t.argument,e),"AssignmentPattern"===t.argument.type&&this.raise(t.argument.start,"Rest elements cannot have a default value");break;case"AssignmentExpression":"="!==t.operator&&this.raise(t.left.end,"Only '=' operator can be used for specifying default value."),t.type="AssignmentPattern",delete t.operator,this.toAssignable(t.left,e);case"AssignmentPattern":break;case"ParenthesizedExpression":this.toAssignable(t.expression,e);break;case"MemberExpression":if(!e)break;default:this.raise(t.start,"Assigning to rvalue")}else n&&this.checkPatternErrors(n,!0);return t},H.toAssignableList=function(t,e){for(var n=t.length,r=0;r<n;r++){var i=t[r];i&&this.toAssignable(i,e)}if(n){var s=t[n-1];6===this.options.ecmaVersion&&e&&s&&"RestElement"===s.type&&"Identifier"!==s.argument.type&&this.unexpected(s.argument.start)}return t},H.parseSpread=function(t){var e=this.startNode();return this.next(),e.argument=this.parseMaybeAssign(!1,t),this.finishNode(e,"SpreadElement")},H.parseRestBinding=function(){var t=this.startNode();return this.next(),6===this.options.ecmaVersion&&this.type!==T.name&&this.unexpected(),t.argument=this.parseBindingAtom(),this.finishNode(t,"RestElement")},H.parseBindingAtom=function(){if(this.options.ecmaVersion>=6)switch(this.type){case T.bracketL:var t=this.startNode();return this.next(),t.elements=this.parseBindingList(T.bracketR,!0,!0),this.finishNode(t,"ArrayPattern");case T.braceL:return this.parseObj(!0)}return this.parseIdent()},H.parseBindingList=function(t,e,n){for(var r=[],i=!0;!this.eat(t);)if(i?i=!1:this.expect(T.comma),e&&this.type===T.comma)r.push(null);else{if(n&&this.afterTrailingComma(t))break;if(this.type===T.ellipsis){var s=this.parseRestBinding();this.parseBindingListItem(s),r.push(s),this.type===T.comma&&this.raise(this.start,"Comma is not permitted after the rest element"),this.expect(t);break}var a=this.parseMaybeDefault(this.start,this.startLoc);this.parseBindingListItem(a),r.push(a)}return r},H.parseBindingListItem=function(t){return t},H.parseMaybeDefault=function(t,e,n){if(n=n||this.parseBindingAtom(),this.options.ecmaVersion<6||!this.eat(T.eq))return n;var r=this.startNodeAt(t,e);return r.left=n,r.right=this.parseMaybeAssign(),this.finishNode(r,"AssignmentPattern")},H.checkLVal=function(t,e,n){switch(t.type){case"Identifier":this.strict&&this.reservedWordsStrictBind.test(t.name)&&this.raiseRecoverable(t.start,(e?"Binding ":"Assigning to ")+t.name+" in strict mode"),n&&(L(n,t.name)&&this.raiseRecoverable(t.start,"Argument name clash"),n[t.name]=!0),e&&"none"!==e&&(("var"===e&&!this.canDeclareVarName(t.name)||"var"!==e&&!this.canDeclareLexicalName(t.name))&&this.raiseRecoverable(t.start,"Identifier '"+t.name+"' has already been declared"),"var"===e?this.declareVarName(t.name):this.declareLexicalName(t.name));break;case"MemberExpression":e&&this.raiseRecoverable(t.start,"Binding member expression");break;case"ObjectPattern":for(var r=0,i=t.properties;r<i.length;r+=1){var s=i[r];this.checkLVal(s,e,n)}break;case"Property":this.checkLVal(t.value,e,n);break;case"ArrayPattern":for(var a=0,o=t.elements;a<o.length;a+=1){var u=o[a];u&&this.checkLVal(u,e,n)}break;case"AssignmentPattern":this.checkLVal(t.left,e,n);break;case"RestElement":this.checkLVal(t.argument,e,n);break;case"ParenthesizedExpression":this.checkLVal(t.expression,e,n);break;default:this.raise(t.start,(e?"Binding":"Assigning to")+" rvalue")}};var J=U.prototype;J.checkPropClash=function(t,e,n){if(!(this.options.ecmaVersion>=9&&"SpreadElement"===t.type||this.options.ecmaVersion>=6&&(t.computed||t.method||t.shorthand))){var r,i=t.key;switch(i.type){case"Identifier":r=i.name;break;case"Literal":r=String(i.value);break;default:return}var s=t.kind;if(this.options.ecmaVersion>=6)"__proto__"===r&&"init"===s&&(e.proto&&(n&&n.doubleProto<0?n.doubleProto=i.start:this.raiseRecoverable(i.start,"Redefinition of __proto__ property")),e.proto=!0);else{var a=e[r="$"+r];if(a)("init"===s?this.strict&&a.init||a.get||a.set:a.init||a[s])&&this.raiseRecoverable(i.start,"Redefinition of property");else a=e[r]={init:!1,get:!1,set:!1};a[s]=!0}}},J.parseExpression=function(t,e){var n=this.start,r=this.startLoc,i=this.parseMaybeAssign(t,e);if(this.type===T.comma){var s=this.startNodeAt(n,r);for(s.expressions=[i];this.eat(T.comma);)s.expressions.push(this.parseMaybeAssign(t,e));return this.finishNode(s,"SequenceExpression")}return i},J.parseMaybeAssign=function(t,e,n){if(this.inGenerator&&this.isContextual("yield"))return this.parseYield();var r=!1,i=-1,s=-1;e?(i=e.parenthesizedAssign,s=e.trailingComma,e.parenthesizedAssign=e.trailingComma=-1):(e=new V,r=!0);var a=this.start,o=this.startLoc;this.type!==T.parenL&&this.type!==T.name||(this.potentialArrowAt=this.start);var u=this.parseMaybeConditional(t,e);if(n&&(u=n.call(this,u,a,o)),this.type.isAssign){var h=this.startNodeAt(a,o);return h.operator=this.value,h.left=this.type===T.eq?this.toAssignable(u,!1,e):u,r||V.call(e),e.shorthandAssign=-1,this.checkLVal(u),this.next(),h.right=this.parseMaybeAssign(t),this.finishNode(h,"AssignmentExpression")}return r&&this.checkExpressionErrors(e,!0),i>-1&&(e.parenthesizedAssign=i),s>-1&&(e.trailingComma=s),u},J.parseMaybeConditional=function(t,e){var n=this.start,r=this.startLoc,i=this.parseExprOps(t,e);if(this.checkExpressionErrors(e))return i;if(this.eat(T.question)){var s=this.startNodeAt(n,r);return s.test=i,s.consequent=this.parseMaybeAssign(),this.expect(T.colon),s.alternate=this.parseMaybeAssign(t),this.finishNode(s,"ConditionalExpression")}return i},J.parseExprOps=function(t,e){var n=this.start,r=this.startLoc,i=this.parseMaybeUnary(e,!1);return this.checkExpressionErrors(e)?i:i.start===n&&"ArrowFunctionExpression"===i.type?i:this.parseExprOp(i,n,r,-1,t)},J.parseExprOp=function(t,e,n,r,i){var s=this.type.binop;if(null!=s&&(!i||this.type!==T._in)&&s>r){var a=this.type===T.logicalOR||this.type===T.logicalAND,o=this.value;this.next();var u=this.start,h=this.startLoc,l=this.parseExprOp(this.parseMaybeUnary(null,!1),u,h,s,i),c=this.buildBinary(e,n,t,l,o,a);return this.parseExprOp(c,e,n,r,i)}return t},J.buildBinary=function(t,e,n,r,i,s){var a=this.startNodeAt(t,e);return a.left=n,a.operator=i,a.right=r,this.finishNode(a,s?"LogicalExpression":"BinaryExpression")},J.parseMaybeUnary=function(t,e){var n,r=this.start,i=this.startLoc;if(this.isContextual("await")&&(this.inAsync||!this.inFunction&&this.options.allowAwaitOutsideFunction))n=this.parseAwait(),e=!0;else if(this.type.prefix){var s=this.startNode(),a=this.type===T.incDec;s.operator=this.value,s.prefix=!0,this.next(),s.argument=this.parseMaybeUnary(null,!0),this.checkExpressionErrors(t,!0),a?this.checkLVal(s.argument):this.strict&&"delete"===s.operator&&"Identifier"===s.argument.type?this.raiseRecoverable(s.start,"Deleting local variable in strict mode"):e=!0,n=this.finishNode(s,a?"UpdateExpression":"UnaryExpression")}else{if(n=this.parseExprSubscripts(t),this.checkExpressionErrors(t))return n;for(;this.type.postfix&&!this.canInsertSemicolon();){var o=this.startNodeAt(r,i);o.operator=this.value,o.prefix=!1,o.argument=n,this.checkLVal(n),this.next(),n=this.finishNode(o,"UpdateExpression")}}return!e&&this.eat(T.starstar)?this.buildBinary(r,i,n,this.parseMaybeUnary(null,!1),"**",!1):n},J.parseExprSubscripts=function(t){var e=this.start,n=this.startLoc,r=this.parseExprAtom(t),i="ArrowFunctionExpression"===r.type&&")"!==this.input.slice(this.lastTokStart,this.lastTokEnd);if(this.checkExpressionErrors(t)||i)return r;var s=this.parseSubscripts(r,e,n);return t&&"MemberExpression"===s.type&&(t.parenthesizedAssign>=s.start&&(t.parenthesizedAssign=-1),t.parenthesizedBind>=s.start&&(t.parenthesizedBind=-1)),s},J.parseSubscripts=function(t,e,n,r){for(var i=this.options.ecmaVersion>=8&&"Identifier"===t.type&&"async"===t.name&&this.lastTokEnd===t.end&&!this.canInsertSemicolon()&&"async"===this.input.slice(t.start,t.end),s=void 0;;)if((s=this.eat(T.bracketL))||this.eat(T.dot)){var a=this.startNodeAt(e,n);a.object=t,a.property=s?this.parseExpression():this.parseIdent(!0),a.computed=!!s,s&&this.expect(T.bracketR),t=this.finishNode(a,"MemberExpression")}else if(!r&&this.eat(T.parenL)){var o=new V,u=this.yieldPos,h=this.awaitPos;this.yieldPos=0,this.awaitPos=0;var l=this.parseExprList(T.parenR,this.options.ecmaVersion>=8,!1,o);if(i&&!this.canInsertSemicolon()&&this.eat(T.arrow))return this.checkPatternErrors(o,!1),this.checkYieldAwaitInDefaultParams(),this.yieldPos=u,this.awaitPos=h,this.parseArrowExpression(this.startNodeAt(e,n),l,!0);this.checkExpressionErrors(o,!0),this.yieldPos=u||this.yieldPos,this.awaitPos=h||this.awaitPos;var c=this.startNodeAt(e,n);c.callee=t,c.arguments=l,t=this.finishNode(c,"CallExpression")}else{if(this.type!==T.backQuote)return t;var p=this.startNodeAt(e,n);p.tag=t,p.quasi=this.parseTemplate({isTagged:!0}),t=this.finishNode(p,"TaggedTemplateExpression")}},J.parseExprAtom=function(t){var e,n=this.potentialArrowAt===this.start;switch(this.type){case T._super:return this.inFunction||this.raise(this.start,"'super' outside of function or class"),e=this.startNode(),this.next(),this.type!==T.dot&&this.type!==T.bracketL&&this.type!==T.parenL&&this.unexpected(),this.finishNode(e,"Super");case T._this:return e=this.startNode(),this.next(),this.finishNode(e,"ThisExpression");case T.name:var r=this.start,i=this.startLoc,s=this.containsEsc,a=this.parseIdent(this.type!==T.name);if(this.options.ecmaVersion>=8&&!s&&"async"===a.name&&!this.canInsertSemicolon()&&this.eat(T._function))return this.parseFunction(this.startNodeAt(r,i),!1,!1,!0);if(n&&!this.canInsertSemicolon()){if(this.eat(T.arrow))return this.parseArrowExpression(this.startNodeAt(r,i),[a],!1);if(this.options.ecmaVersion>=8&&"async"===a.name&&this.type===T.name&&!s)return a=this.parseIdent(),!this.canInsertSemicolon()&&this.eat(T.arrow)||this.unexpected(),this.parseArrowExpression(this.startNodeAt(r,i),[a],!0)}return a;case T.regexp:var o=this.value;return(e=this.parseLiteral(o.value)).regex={pattern:o.pattern,flags:o.flags},e;case T.num:case T.string:return this.parseLiteral(this.value);case T._null:case T._true:case T._false:return(e=this.startNode()).value=this.type===T._null?null:this.type===T._true,e.raw=this.type.keyword,this.next(),this.finishNode(e,"Literal");case T.parenL:var u=this.start,h=this.parseParenAndDistinguishExpression(n);return t&&(t.parenthesizedAssign<0&&!this.isSimpleAssignTarget(h)&&(t.parenthesizedAssign=u),t.parenthesizedBind<0&&(t.parenthesizedBind=u)),h;case T.bracketL:return e=this.startNode(),this.next(),e.elements=this.parseExprList(T.bracketR,!0,!0,t),this.finishNode(e,"ArrayExpression");case T.braceL:return this.parseObj(!1,t);case T._function:return e=this.startNode(),this.next(),this.parseFunction(e,!1);case T._class:return this.parseClass(this.startNode(),!1);case T._new:return this.parseNew();case T.backQuote:return this.parseTemplate();default:this.unexpected()}},J.parseLiteral=function(t){var e=this.startNode();return e.value=t,e.raw=this.input.slice(this.start,this.end),this.next(),this.finishNode(e,"Literal")},J.parseParenExpression=function(){this.expect(T.parenL);var t=this.parseExpression();return this.expect(T.parenR),t},J.parseParenAndDistinguishExpression=function(t){var e,n=this.start,r=this.startLoc,i=this.options.ecmaVersion>=8;if(this.options.ecmaVersion>=6){this.next();var s,a=this.start,o=this.startLoc,u=[],h=!0,l=!1,c=new V,p=this.yieldPos,f=this.awaitPos;for(this.yieldPos=0,this.awaitPos=0;this.type!==T.parenR;){if(h?h=!1:this.expect(T.comma),i&&this.afterTrailingComma(T.parenR,!0)){l=!0;break}if(this.type===T.ellipsis){s=this.start,u.push(this.parseParenItem(this.parseRestBinding())),this.type===T.comma&&this.raise(this.start,"Comma is not permitted after the rest element");break}u.push(this.parseMaybeAssign(!1,c,this.parseParenItem))}var d=this.start,g=this.startLoc;if(this.expect(T.parenR),t&&!this.canInsertSemicolon()&&this.eat(T.arrow))return this.checkPatternErrors(c,!1),this.checkYieldAwaitInDefaultParams(),this.yieldPos=p,this.awaitPos=f,this.parseParenArrowList(n,r,u);u.length&&!l||this.unexpected(this.lastTokStart),s&&this.unexpected(s),this.checkExpressionErrors(c,!0),this.yieldPos=p||this.yieldPos,this.awaitPos=f||this.awaitPos,u.length>1?((e=this.startNodeAt(a,o)).expressions=u,this.finishNodeAt(e,"SequenceExpression",d,g)):e=u[0]}else e=this.parseParenExpression();if(this.options.preserveParens){var v=this.startNodeAt(n,r);return v.expression=e,this.finishNode(v,"ParenthesizedExpression")}return e},J.parseParenItem=function(t){return t},J.parseParenArrowList=function(t,e,n){return this.parseArrowExpression(this.startNodeAt(t,e),n)};var Y=[];J.parseNew=function(){var t=this.startNode(),e=this.parseIdent(!0);if(this.options.ecmaVersion>=6&&this.eat(T.dot)){t.meta=e;var n=this.containsEsc;return t.property=this.parseIdent(!0),("target"!==t.property.name||n)&&this.raiseRecoverable(t.property.start,"The only valid meta property for new is new.target"),this.inFunction||this.raiseRecoverable(t.start,"new.target can only be used in functions"),this.finishNode(t,"MetaProperty")}var r=this.start,i=this.startLoc;return t.callee=this.parseSubscripts(this.parseExprAtom(),r,i,!0),this.eat(T.parenL)?t.arguments=this.parseExprList(T.parenR,this.options.ecmaVersion>=8,!1):t.arguments=Y,this.finishNode(t,"NewExpression")},J.parseTemplateElement=function(t){var e=t.isTagged,n=this.startNode();return this.type===T.invalidTemplate?(e||this.raiseRecoverable(this.start,"Bad escape sequence in untagged template literal"),n.value={raw:this.value,cooked:null}):n.value={raw:this.input.slice(this.start,this.end).replace(/\r\n?/g,"\n"),cooked:this.value},this.next(),n.tail=this.type===T.backQuote,this.finishNode(n,"TemplateElement")},J.parseTemplate=function(t){void 0===t&&(t={});var e=t.isTagged;void 0===e&&(e=!1);var n=this.startNode();this.next(),n.expressions=[];var r=this.parseTemplateElement({isTagged:e});for(n.quasis=[r];!r.tail;)this.type===T.eof&&this.raise(this.pos,"Unterminated template literal"),this.expect(T.dollarBraceL),n.expressions.push(this.parseExpression()),this.expect(T.braceR),n.quasis.push(r=this.parseTemplateElement({isTagged:e}));return this.next(),this.finishNode(n,"TemplateLiteral")},J.isAsyncProp=function(t){return!t.computed&&"Identifier"===t.key.type&&"async"===t.key.name&&(this.type===T.name||this.type===T.num||this.type===T.string||this.type===T.bracketL||this.type.keyword||this.options.ecmaVersion>=9&&this.type===T.star)&&!w.test(this.input.slice(this.lastTokEnd,this.start))},J.parseObj=function(t,e){var n=this.startNode(),r=!0,i={};for(n.properties=[],this.next();!this.eat(T.braceR);){if(r)r=!1;else if(this.expect(T.comma),this.afterTrailingComma(T.braceR))break;var s=this.parseProperty(t,e);t||this.checkPropClash(s,i,e),n.properties.push(s)}return this.finishNode(n,t?"ObjectPattern":"ObjectExpression")},J.parseProperty=function(t,e){var n,r,i,s,a=this.startNode();if(this.options.ecmaVersion>=9&&this.eat(T.ellipsis))return t?(a.argument=this.parseIdent(!1),this.type===T.comma&&this.raise(this.start,"Comma is not permitted after the rest element"),this.finishNode(a,"RestElement")):(this.type===T.parenL&&e&&(e.parenthesizedAssign<0&&(e.parenthesizedAssign=this.start),e.parenthesizedBind<0&&(e.parenthesizedBind=this.start)),a.argument=this.parseMaybeAssign(!1,e),this.type===T.comma&&e&&e.trailingComma<0&&(e.trailingComma=this.start),this.finishNode(a,"SpreadElement"));this.options.ecmaVersion>=6&&(a.method=!1,a.shorthand=!1,(t||e)&&(i=this.start,s=this.startLoc),t||(n=this.eat(T.star)));var o=this.containsEsc;return this.parsePropertyName(a),!t&&!o&&this.options.ecmaVersion>=8&&!n&&this.isAsyncProp(a)?(r=!0,n=this.options.ecmaVersion>=9&&this.eat(T.star),this.parsePropertyName(a,e)):r=!1,this.parsePropertyValue(a,t,n,r,i,s,e,o),this.finishNode(a,"Property")},J.parsePropertyValue=function(t,e,n,r,i,s,a,o){if((n||r)&&this.type===T.colon&&this.unexpected(),this.eat(T.colon))t.value=e?this.parseMaybeDefault(this.start,this.startLoc):this.parseMaybeAssign(!1,a),t.kind="init";else if(this.options.ecmaVersion>=6&&this.type===T.parenL)e&&this.unexpected(),t.kind="init",t.method=!0,t.value=this.parseMethod(n,r);else if(e||o||!(this.options.ecmaVersion>=5)||t.computed||"Identifier"!==t.key.type||"get"!==t.key.name&&"set"!==t.key.name||this.type===T.comma||this.type===T.braceR)this.options.ecmaVersion>=6&&!t.computed&&"Identifier"===t.key.type?(this.checkUnreserved(t.key),t.kind="init",e?t.value=this.parseMaybeDefault(i,s,t.key):this.type===T.eq&&a?(a.shorthandAssign<0&&(a.shorthandAssign=this.start),t.value=this.parseMaybeDefault(i,s,t.key)):t.value=t.key,t.shorthand=!0):this.unexpected();else{(n||r)&&this.unexpected(),t.kind=t.key.name,this.parsePropertyName(t),t.value=this.parseMethod(!1);var u="get"===t.kind?0:1;if(t.value.params.length!==u){var h=t.value.start;"get"===t.kind?this.raiseRecoverable(h,"getter should have no params"):this.raiseRecoverable(h,"setter should have exactly one param")}else"set"===t.kind&&"RestElement"===t.value.params[0].type&&this.raiseRecoverable(t.value.params[0].start,"Setter cannot use rest params")}},J.parsePropertyName=function(t){if(this.options.ecmaVersion>=6){if(this.eat(T.bracketL))return t.computed=!0,t.key=this.parseMaybeAssign(),this.expect(T.bracketR),t.key;t.computed=!1}return t.key=this.type===T.num||this.type===T.string?this.parseExprAtom():this.parseIdent(!0)},J.initFunction=function(t){t.id=null,this.options.ecmaVersion>=6&&(t.generator=!1,t.expression=!1),this.options.ecmaVersion>=8&&(t.async=!1)},J.parseMethod=function(t,e){var n=this.startNode(),r=this.inGenerator,i=this.inAsync,s=this.yieldPos,a=this.awaitPos,o=this.inFunction;return this.initFunction(n),this.options.ecmaVersion>=6&&(n.generator=t),this.options.ecmaVersion>=8&&(n.async=!!e),this.inGenerator=n.generator,this.inAsync=n.async,this.yieldPos=0,this.awaitPos=0,this.inFunction=!0,this.enterFunctionScope(),this.expect(T.parenL),n.params=this.parseBindingList(T.parenR,!1,this.options.ecmaVersion>=8),this.checkYieldAwaitInDefaultParams(),this.parseFunctionBody(n,!1),this.inGenerator=r,this.inAsync=i,this.yieldPos=s,this.awaitPos=a,this.inFunction=o,this.finishNode(n,"FunctionExpression")},J.parseArrowExpression=function(t,e,n){var r=this.inGenerator,i=this.inAsync,s=this.yieldPos,a=this.awaitPos,o=this.inFunction;return this.enterFunctionScope(),this.initFunction(t),this.options.ecmaVersion>=8&&(t.async=!!n),this.inGenerator=!1,this.inAsync=t.async,this.yieldPos=0,this.awaitPos=0,this.inFunction=!0,t.params=this.toAssignableList(e,!0),this.parseFunctionBody(t,!0),this.inGenerator=r,this.inAsync=i,this.yieldPos=s,this.awaitPos=a,this.inFunction=o,this.finishNode(t,"ArrowFunctionExpression")},J.parseFunctionBody=function(t,e){var n=e&&this.type!==T.braceL,r=this.strict,i=!1;if(n)t.body=this.parseMaybeAssign(),t.expression=!0,this.checkParams(t,!1);else{var s=this.options.ecmaVersion>=7&&!this.isSimpleParamList(t.params);r&&!s||(i=this.strictDirective(this.end))&&s&&this.raiseRecoverable(t.start,"Illegal 'use strict' directive in function with non-simple parameter list");var a=this.labels;this.labels=[],i&&(this.strict=!0),this.checkParams(t,!r&&!i&&!e&&this.isSimpleParamList(t.params)),t.body=this.parseBlock(!1),t.expression=!1,this.adaptDirectivePrologue(t.body.body),this.labels=a}this.exitFunctionScope(),this.strict&&t.id&&this.checkLVal(t.id,"none"),this.strict=r},J.isSimpleParamList=function(t){for(var e=0,n=t;e<n.length;e+=1){if("Identifier"!==n[e].type)return!1}return!0},J.checkParams=function(t,e){for(var n={},r=0,i=t.params;r<i.length;r+=1){var s=i[r];this.checkLVal(s,"var",e?null:n)}},J.parseExprList=function(t,e,n,r){for(var i=[],s=!0;!this.eat(t);){if(s)s=!1;else if(this.expect(T.comma),e&&this.afterTrailingComma(t))break;var a=void 0;n&&this.type===T.comma?a=null:this.type===T.ellipsis?(a=this.parseSpread(r),r&&this.type===T.comma&&r.trailingComma<0&&(r.trailingComma=this.start)):a=this.parseMaybeAssign(!1,r),i.push(a)}return i},J.checkUnreserved=function(t){var e=t.start,n=t.end,r=t.name;(this.inGenerator&&"yield"===r&&this.raiseRecoverable(e,"Can not use 'yield' as identifier inside a generator"),this.inAsync&&"await"===r&&this.raiseRecoverable(e,"Can not use 'await' as identifier inside an async function"),this.isKeyword(r)&&this.raise(e,"Unexpected keyword '"+r+"'"),this.options.ecmaVersion<6&&-1!==this.input.slice(e,n).indexOf("\\"))||(this.strict?this.reservedWordsStrict:this.reservedWords).test(r)&&(this.inAsync||"await"!==r||this.raiseRecoverable(e,"Can not use keyword 'await' outside an async function"),this.raiseRecoverable(e,"The keyword '"+r+"' is reserved"))},J.parseIdent=function(t,e){var n=this.startNode();return t&&"never"===this.options.allowReserved&&(t=!1),this.type===T.name?n.name=this.value:this.type.keyword?(n.name=this.type.keyword,"class"!==n.name&&"function"!==n.name||this.lastTokEnd===this.lastTokStart+1&&46===this.input.charCodeAt(this.lastTokStart)||this.context.pop()):this.unexpected(),this.next(),this.finishNode(n,"Identifier"),t||this.checkUnreserved(n),n},J.parseYield=function(){this.yieldPos||(this.yieldPos=this.start);var t=this.startNode();return this.next(),this.type===T.semi||this.canInsertSemicolon()||this.type!==T.star&&!this.type.startsExpr?(t.delegate=!1,t.argument=null):(t.delegate=this.eat(T.star),t.argument=this.parseMaybeAssign()),this.finishNode(t,"YieldExpression")},J.parseAwait=function(){this.awaitPos||(this.awaitPos=this.start);var t=this.startNode();return this.next(),t.argument=this.parseMaybeUnary(null,!0),this.finishNode(t,"AwaitExpression")};var Q=U.prototype;Q.raise=function(t,e){var n=N(this.input,t);e+=" ("+n.line+":"+n.column+")";var r=new SyntaxError(e);throw r.pos=t,r.loc=n,r.raisedAt=this.pos,r},Q.raiseRecoverable=Q.raise,Q.curPosition=function(){if(this.options.locations)return new C(this.curLine,this.pos-this.lineStart)};var Z=U.prototype,$=Object.assign||function(t){for(var e=[],n=arguments.length-1;n-- >0;)e[n]=arguments[n+1];for(var r=0,i=e;r<i.length;r+=1){var s=i[r];for(var a in s)L(s,a)&&(t[a]=s[a])}return t};Z.enterFunctionScope=function(){this.scopeStack.push({var:{},lexical:{},childVar:{},parentLexical:{}})},Z.exitFunctionScope=function(){this.scopeStack.pop()},Z.enterLexicalScope=function(){var t=this.scopeStack[this.scopeStack.length-1],e={var:{},lexical:{},childVar:{},parentLexical:{}};this.scopeStack.push(e),$(e.parentLexical,t.lexical,t.parentLexical)},Z.exitLexicalScope=function(){var t=this.scopeStack.pop(),e=this.scopeStack[this.scopeStack.length-1];$(e.childVar,t.var,t.childVar)},Z.canDeclareVarName=function(t){var e=this.scopeStack[this.scopeStack.length-1];return!L(e.lexical,t)&&!L(e.parentLexical,t)},Z.canDeclareLexicalName=function(t){var e=this.scopeStack[this.scopeStack.length-1];return!L(e.lexical,t)&&!L(e.var,t)&&!L(e.childVar,t)},Z.declareVarName=function(t){this.scopeStack[this.scopeStack.length-1].var[t]=!0},Z.declareLexicalName=function(t){this.scopeStack[this.scopeStack.length-1].lexical[t]=!0};var tt=function(t,e,n){this.type="",this.start=e,this.end=0,t.options.locations&&(this.loc=new D(t,n)),t.options.directSourceFile&&(this.sourceFile=t.options.directSourceFile),t.options.ranges&&(this.range=[e,0])},et=U.prototype;function nt(t,e,n,r){return t.type=e,t.end=n,this.options.locations&&(t.loc.end=r),this.options.ranges&&(t.range[1]=n),t}et.startNode=function(){return new tt(this,this.start,this.startLoc)},et.startNodeAt=function(t,e){return new tt(this,t,e)},et.finishNode=function(t,e){return nt.call(this,t,e,this.lastTokEnd,this.lastTokEndLoc)},et.finishNodeAt=function(t,e,n,r){return nt.call(this,t,e,n,r)};var rt=function(t,e,n,r,i){this.token=t,this.isExpr=!!e,this.preserveSpace=!!n,this.override=r,this.generator=!!i},it={b_stat:new rt("{",!1),b_expr:new rt("{",!0),b_tmpl:new rt("${",!1),p_stat:new rt("(",!1),p_expr:new rt("(",!0),q_tmpl:new rt("`",!0,!0,function(t){return t.tryReadTemplateToken()}),f_stat:new rt("function",!1),f_expr:new rt("function",!0),f_expr_gen:new rt("function",!0,!1,null,!0),f_gen:new rt("function",!1,!1,null,!0)},st=U.prototype;st.initialContext=function(){return[it.b_stat]},st.braceIsBlock=function(t){var e=this.curContext();return e===it.f_expr||e===it.f_stat||(t!==T.colon||e!==it.b_stat&&e!==it.b_expr?t===T._return||t===T.name&&this.exprAllowed?w.test(this.input.slice(this.lastTokEnd,this.start)):t===T._else||t===T.semi||t===T.eof||t===T.parenR||t===T.arrow||(t===T.braceL?e===it.b_stat:t!==T._var&&t!==T.name&&!this.exprAllowed):!e.isExpr)},st.inGeneratorContext=function(){for(var t=this.context.length-1;t>=1;t--){var e=this.context[t];if("function"===e.token)return e.generator}return!1},st.updateContext=function(t){var e,n=this.type;n.keyword&&t===T.dot?this.exprAllowed=!1:(e=n.updateContext)?e.call(this,t):this.exprAllowed=n.beforeExpr},T.parenR.updateContext=T.braceR.updateContext=function(){if(1!==this.context.length){var t=this.context.pop();t===it.b_stat&&"function"===this.curContext().token&&(t=this.context.pop()),this.exprAllowed=!t.isExpr}else this.exprAllowed=!0},T.braceL.updateContext=function(t){this.context.push(this.braceIsBlock(t)?it.b_stat:it.b_expr),this.exprAllowed=!0},T.dollarBraceL.updateContext=function(){this.context.push(it.b_tmpl),this.exprAllowed=!0},T.parenL.updateContext=function(t){var e=t===T._if||t===T._for||t===T._with||t===T._while;this.context.push(e?it.p_stat:it.p_expr),this.exprAllowed=!0},T.incDec.updateContext=function(){},T._function.updateContext=T._class.updateContext=function(t){t.beforeExpr&&t!==T.semi&&t!==T._else&&(t!==T.colon&&t!==T.braceL||this.curContext()!==it.b_stat)?this.context.push(it.f_expr):this.context.push(it.f_stat),this.exprAllowed=!1},T.backQuote.updateContext=function(){this.curContext()===it.q_tmpl?this.context.pop():this.context.push(it.q_tmpl),this.exprAllowed=!1},T.star.updateContext=function(t){if(t===T._function){var e=this.context.length-1;this.context[e]===it.f_expr?this.context[e]=it.f_expr_gen:this.context[e]=it.f_gen}this.exprAllowed=!0},T.name.updateContext=function(t){var e=!1;this.options.ecmaVersion>=6&&t!==T.dot&&("of"===this.value&&!this.exprAllowed||"yield"===this.value&&this.inGeneratorContext())&&(e=!0),this.exprAllowed=e};var at={$LONE:["ASCII","ASCII_Hex_Digit","AHex","Alphabetic","Alpha","Any","Assigned","Bidi_Control","Bidi_C","Bidi_Mirrored","Bidi_M","Case_Ignorable","CI","Cased","Changes_When_Casefolded","CWCF","Changes_When_Casemapped","CWCM","Changes_When_Lowercased","CWL","Changes_When_NFKC_Casefolded","CWKCF","Changes_When_Titlecased","CWT","Changes_When_Uppercased","CWU","Dash","Default_Ignorable_Code_Point","DI","Deprecated","Dep","Diacritic","Dia","Emoji","Emoji_Component","Emoji_Modifier","Emoji_Modifier_Base","Emoji_Presentation","Extender","Ext","Grapheme_Base","Gr_Base","Grapheme_Extend","Gr_Ext","Hex_Digit","Hex","IDS_Binary_Operator","IDSB","IDS_Trinary_Operator","IDST","ID_Continue","IDC","ID_Start","IDS","Ideographic","Ideo","Join_Control","Join_C","Logical_Order_Exception","LOE","Lowercase","Lower","Math","Noncharacter_Code_Point","NChar","Pattern_Syntax","Pat_Syn","Pattern_White_Space","Pat_WS","Quotation_Mark","QMark","Radical","Regional_Indicator","RI","Sentence_Terminal","STerm","Soft_Dotted","SD","Terminal_Punctuation","Term","Unified_Ideograph","UIdeo","Uppercase","Upper","Variation_Selector","VS","White_Space","space","XID_Continue","XIDC","XID_Start","XIDS"],General_Category:["Cased_Letter","LC","Close_Punctuation","Pe","Connector_Punctuation","Pc","Control","Cc","cntrl","Currency_Symbol","Sc","Dash_Punctuation","Pd","Decimal_Number","Nd","digit","Enclosing_Mark","Me","Final_Punctuation","Pf","Format","Cf","Initial_Punctuation","Pi","Letter","L","Letter_Number","Nl","Line_Separator","Zl","Lowercase_Letter","Ll","Mark","M","Combining_Mark","Math_Symbol","Sm","Modifier_Letter","Lm","Modifier_Symbol","Sk","Nonspacing_Mark","Mn","Number","N","Open_Punctuation","Ps","Other","C","Other_Letter","Lo","Other_Number","No","Other_Punctuation","Po","Other_Symbol","So","Paragraph_Separator","Zp","Private_Use","Co","Punctuation","P","punct","Separator","Z","Space_Separator","Zs","Spacing_Mark","Mc","Surrogate","Cs","Symbol","S","Titlecase_Letter","Lt","Unassigned","Cn","Uppercase_Letter","Lu"],Script:["Adlam","Adlm","Ahom","Anatolian_Hieroglyphs","Hluw","Arabic","Arab","Armenian","Armn","Avestan","Avst","Balinese","Bali","Bamum","Bamu","Bassa_Vah","Bass","Batak","Batk","Bengali","Beng","Bhaiksuki","Bhks","Bopomofo","Bopo","Brahmi","Brah","Braille","Brai","Buginese","Bugi","Buhid","Buhd","Canadian_Aboriginal","Cans","Carian","Cari","Caucasian_Albanian","Aghb","Chakma","Cakm","Cham","Cherokee","Cher","Common","Zyyy","Coptic","Copt","Qaac","Cuneiform","Xsux","Cypriot","Cprt","Cyrillic","Cyrl","Deseret","Dsrt","Devanagari","Deva","Duployan","Dupl","Egyptian_Hieroglyphs","Egyp","Elbasan","Elba","Ethiopic","Ethi","Georgian","Geor","Glagolitic","Glag","Gothic","Goth","Grantha","Gran","Greek","Grek","Gujarati","Gujr","Gurmukhi","Guru","Han","Hani","Hangul","Hang","Hanunoo","Hano","Hatran","Hatr","Hebrew","Hebr","Hiragana","Hira","Imperial_Aramaic","Armi","Inherited","Zinh","Qaai","Inscriptional_Pahlavi","Phli","Inscriptional_Parthian","Prti","Javanese","Java","Kaithi","Kthi","Kannada","Knda","Katakana","Kana","Kayah_Li","Kali","Kharoshthi","Khar","Khmer","Khmr","Khojki","Khoj","Khudawadi","Sind","Lao","Laoo","Latin","Latn","Lepcha","Lepc","Limbu","Limb","Linear_A","Lina","Linear_B","Linb","Lisu","Lycian","Lyci","Lydian","Lydi","Mahajani","Mahj","Malayalam","Mlym","Mandaic","Mand","Manichaean","Mani","Marchen","Marc","Masaram_Gondi","Gonm","Meetei_Mayek","Mtei","Mende_Kikakui","Mend","Meroitic_Cursive","Merc","Meroitic_Hieroglyphs","Mero","Miao","Plrd","Modi","Mongolian","Mong","Mro","Mroo","Multani","Mult","Myanmar","Mymr","Nabataean","Nbat","New_Tai_Lue","Talu","Newa","Nko","Nkoo","Nushu","Nshu","Ogham","Ogam","Ol_Chiki","Olck","Old_Hungarian","Hung","Old_Italic","Ital","Old_North_Arabian","Narb","Old_Permic","Perm","Old_Persian","Xpeo","Old_South_Arabian","Sarb","Old_Turkic","Orkh","Oriya","Orya","Osage","Osge","Osmanya","Osma","Pahawh_Hmong","Hmng","Palmyrene","Palm","Pau_Cin_Hau","Pauc","Phags_Pa","Phag","Phoenician","Phnx","Psalter_Pahlavi","Phlp","Rejang","Rjng","Runic","Runr","Samaritan","Samr","Saurashtra","Saur","Sharada","Shrd","Shavian","Shaw","Siddham","Sidd","SignWriting","Sgnw","Sinhala","Sinh","Sora_Sompeng","Sora","Soyombo","Soyo","Sundanese","Sund","Syloti_Nagri","Sylo","Syriac","Syrc","Tagalog","Tglg","Tagbanwa","Tagb","Tai_Le","Tale","Tai_Tham","Lana","Tai_Viet","Tavt","Takri","Takr","Tamil","Taml","Tangut","Tang","Telugu","Telu","Thaana","Thaa","Thai","Tibetan","Tibt","Tifinagh","Tfng","Tirhuta","Tirh","Ugaritic","Ugar","Vai","Vaii","Warang_Citi","Wara","Yi","Yiii","Zanabazar_Square","Zanb"]};Array.prototype.push.apply(at.$LONE,at.General_Category),at.gc=at.General_Category,at.sc=at.Script_Extensions=at.scx=at.Script;var ot=U.prototype,ut=function(t){this.parser=t,this.validFlags="gim"+(t.options.ecmaVersion>=6?"uy":"")+(t.options.ecmaVersion>=9?"s":""),this.source="",this.flags="",this.start=0,this.switchU=!1,this.switchN=!1,this.pos=0,this.lastIntValue=0,this.lastStringValue="",this.lastAssertionIsQuantifiable=!1,this.numCapturingParens=0,this.maxBackReference=0,this.groupNames=[],this.backReferenceNames=[]};function ht(t){return t<=65535?String.fromCharCode(t):(t-=65536,String.fromCharCode(55296+(t>>10),56320+(1023&t)))}function lt(t){return 36===t||t>=40&&t<=43||46===t||63===t||t>=91&&t<=94||t>=123&&t<=125}function ct(t){return t>=65&&t<=90||t>=97&&t<=122}function pt(t){return ct(t)||95===t}function ft(t){return pt(t)||dt(t)}function dt(t){return t>=48&&t<=57}function gt(t){return t>=48&&t<=57||t>=65&&t<=70||t>=97&&t<=102}function vt(t){return t>=65&&t<=70?t-65+10:t>=97&&t<=102?t-97+10:t-48}function yt(t){return t>=48&&t<=55}ut.prototype.reset=function(t,e,n){var r=-1!==n.indexOf("u");this.start=0|t,this.source=e+"",this.flags=n,this.switchU=r&&this.parser.options.ecmaVersion>=6,this.switchN=r&&this.parser.options.ecmaVersion>=9},ut.prototype.raise=function(t){this.parser.raiseRecoverable(this.start,"Invalid regular expression: /"+this.source+"/: "+t)},ut.prototype.at=function(t){var e=this.source,n=e.length;if(t>=n)return-1;var r=e.charCodeAt(t);return!this.switchU||r<=55295||r>=57344||t+1>=n?r:(r<<10)+e.charCodeAt(t+1)-56613888},ut.prototype.nextIndex=function(t){var e=this.source,n=e.length;if(t>=n)return n;var r=e.charCodeAt(t);return!this.switchU||r<=55295||r>=57344||t+1>=n?t+1:t+2},ut.prototype.current=function(){return this.at(this.pos)},ut.prototype.lookahead=function(){return this.at(this.nextIndex(this.pos))},ut.prototype.advance=function(){this.pos=this.nextIndex(this.pos)},ut.prototype.eat=function(t){return this.current()===t&&(this.advance(),!0)},ot.validateRegExpFlags=function(t){for(var e=t.validFlags,n=t.flags,r=0;r<n.length;r++){var i=n.charAt(r);-1===e.indexOf(i)&&this.raise(t.start,"Invalid regular expression flag"),n.indexOf(i,r+1)>-1&&this.raise(t.start,"Duplicate regular expression flag")}},ot.validateRegExpPattern=function(t){this.regexp_pattern(t),!t.switchN&&this.options.ecmaVersion>=9&&t.groupNames.length>0&&(t.switchN=!0,this.regexp_pattern(t))},ot.regexp_pattern=function(t){t.pos=0,t.lastIntValue=0,t.lastStringValue="",t.lastAssertionIsQuantifiable=!1,t.numCapturingParens=0,t.maxBackReference=0,t.groupNames.length=0,t.backReferenceNames.length=0,this.regexp_disjunction(t),t.pos!==t.source.length&&(t.eat(41)&&t.raise("Unmatched ')'"),(t.eat(93)||t.eat(125))&&t.raise("Lone quantifier brackets")),t.maxBackReference>t.numCapturingParens&&t.raise("Invalid escape");for(var e=0,n=t.backReferenceNames;e<n.length;e+=1){var r=n[e];-1===t.groupNames.indexOf(r)&&t.raise("Invalid named capture referenced")}},ot.regexp_disjunction=function(t){for(this.regexp_alternative(t);t.eat(124);)this.regexp_alternative(t);this.regexp_eatQuantifier(t,!0)&&t.raise("Nothing to repeat"),t.eat(123)&&t.raise("Lone quantifier brackets")},ot.regexp_alternative=function(t){for(;t.pos<t.source.length&&this.regexp_eatTerm(t););},ot.regexp_eatTerm=function(t){return this.regexp_eatAssertion(t)?(t.lastAssertionIsQuantifiable&&this.regexp_eatQuantifier(t)&&t.switchU&&t.raise("Invalid quantifier"),!0):!(t.switchU?!this.regexp_eatAtom(t):!this.regexp_eatExtendedAtom(t))&&(this.regexp_eatQuantifier(t),!0)},ot.regexp_eatAssertion=function(t){var e=t.pos;if(t.lastAssertionIsQuantifiable=!1,t.eat(94)||t.eat(36))return!0;if(t.eat(92)){if(t.eat(66)||t.eat(98))return!0;t.pos=e}if(t.eat(40)&&t.eat(63)){var n=!1;if(this.options.ecmaVersion>=9&&(n=t.eat(60)),t.eat(61)||t.eat(33))return this.regexp_disjunction(t),t.eat(41)||t.raise("Unterminated group"),t.lastAssertionIsQuantifiable=!n,!0}return t.pos=e,!1},ot.regexp_eatQuantifier=function(t,e){return void 0===e&&(e=!1),!!this.regexp_eatQuantifierPrefix(t,e)&&(t.eat(63),!0)},ot.regexp_eatQuantifierPrefix=function(t,e){return t.eat(42)||t.eat(43)||t.eat(63)||this.regexp_eatBracedQuantifier(t,e)},ot.regexp_eatBracedQuantifier=function(t,e){var n=t.pos;if(t.eat(123)){var r=0,i=-1;if(this.regexp_eatDecimalDigits(t)&&(r=t.lastIntValue,t.eat(44)&&this.regexp_eatDecimalDigits(t)&&(i=t.lastIntValue),t.eat(125)))return-1!==i&&i<r&&!e&&t.raise("numbers out of order in {} quantifier"),!0;t.switchU&&!e&&t.raise("Incomplete quantifier"),t.pos=n}return!1},ot.regexp_eatAtom=function(t){return this.regexp_eatPatternCharacters(t)||t.eat(46)||this.regexp_eatReverseSolidusAtomEscape(t)||this.regexp_eatCharacterClass(t)||this.regexp_eatUncapturingGroup(t)||this.regexp_eatCapturingGroup(t)},ot.regexp_eatReverseSolidusAtomEscape=function(t){var e=t.pos;if(t.eat(92)){if(this.regexp_eatAtomEscape(t))return!0;t.pos=e}return!1},ot.regexp_eatUncapturingGroup=function(t){var e=t.pos;if(t.eat(40)){if(t.eat(63)&&t.eat(58)){if(this.regexp_disjunction(t),t.eat(41))return!0;t.raise("Unterminated group")}t.pos=e}return!1},ot.regexp_eatCapturingGroup=function(t){if(t.eat(40)){if(this.options.ecmaVersion>=9?this.regexp_groupSpecifier(t):63===t.current()&&t.raise("Invalid group"),this.regexp_disjunction(t),t.eat(41))return t.numCapturingParens+=1,!0;t.raise("Unterminated group")}return!1},ot.regexp_eatExtendedAtom=function(t){return t.eat(46)||this.regexp_eatReverseSolidusAtomEscape(t)||this.regexp_eatCharacterClass(t)||this.regexp_eatUncapturingGroup(t)||this.regexp_eatCapturingGroup(t)||this.regexp_eatInvalidBracedQuantifier(t)||this.regexp_eatExtendedPatternCharacter(t)},ot.regexp_eatInvalidBracedQuantifier=function(t){return this.regexp_eatBracedQuantifier(t,!0)&&t.raise("Nothing to repeat"),!1},ot.regexp_eatSyntaxCharacter=function(t){var e=t.current();return!!lt(e)&&(t.lastIntValue=e,t.advance(),!0)},ot.regexp_eatPatternCharacters=function(t){for(var e=t.pos,n=0;-1!==(n=t.current())&&!lt(n);)t.advance();return t.pos!==e},ot.regexp_eatExtendedPatternCharacter=function(t){var e=t.current();return!(-1===e||36===e||e>=40&&e<=43||46===e||63===e||91===e||94===e||124===e)&&(t.advance(),!0)},ot.regexp_groupSpecifier=function(t){if(t.eat(63)){if(this.regexp_eatGroupName(t))return-1!==t.groupNames.indexOf(t.lastStringValue)&&t.raise("Duplicate capture group name"),void t.groupNames.push(t.lastStringValue);t.raise("Invalid group")}},ot.regexp_eatGroupName=function(t){if(t.lastStringValue="",t.eat(60)){if(this.regexp_eatRegExpIdentifierName(t)&&t.eat(62))return!0;t.raise("Invalid capture group name")}return!1},ot.regexp_eatRegExpIdentifierName=function(t){if(t.lastStringValue="",this.regexp_eatRegExpIdentifierStart(t)){for(t.lastStringValue+=ht(t.lastIntValue);this.regexp_eatRegExpIdentifierPart(t);)t.lastStringValue+=ht(t.lastIntValue);return!0}return!1},ot.regexp_eatRegExpIdentifierStart=function(t){var e=t.pos,n=t.current();return t.advance(),92===n&&this.regexp_eatRegExpUnicodeEscapeSequence(t)&&(n=t.lastIntValue),function(t){return d(t,!0)||36===t||95===t}(n)?(t.lastIntValue=n,!0):(t.pos=e,!1)},ot.regexp_eatRegExpIdentifierPart=function(t){var e=t.pos,n=t.current();return t.advance(),92===n&&this.regexp_eatRegExpUnicodeEscapeSequence(t)&&(n=t.lastIntValue),function(t){return g(t,!0)||36===t||95===t||8204===t||8205===t}(n)?(t.lastIntValue=n,!0):(t.pos=e,!1)},ot.regexp_eatAtomEscape=function(t){return!!(this.regexp_eatBackReference(t)||this.regexp_eatCharacterClassEscape(t)||this.regexp_eatCharacterEscape(t)||t.switchN&&this.regexp_eatKGroupName(t))||(t.switchU&&(99===t.current()&&t.raise("Invalid unicode escape"),t.raise("Invalid escape")),!1)},ot.regexp_eatBackReference=function(t){var e=t.pos;if(this.regexp_eatDecimalEscape(t)){var n=t.lastIntValue;if(t.switchU)return n>t.maxBackReference&&(t.maxBackReference=n),!0;if(n<=t.numCapturingParens)return!0;t.pos=e}return!1},ot.regexp_eatKGroupName=function(t){if(t.eat(107)){if(this.regexp_eatGroupName(t))return t.backReferenceNames.push(t.lastStringValue),!0;t.raise("Invalid named reference")}return!1},ot.regexp_eatCharacterEscape=function(t){return this.regexp_eatControlEscape(t)||this.regexp_eatCControlLetter(t)||this.regexp_eatZero(t)||this.regexp_eatHexEscapeSequence(t)||this.regexp_eatRegExpUnicodeEscapeSequence(t)||!t.switchU&&this.regexp_eatLegacyOctalEscapeSequence(t)||this.regexp_eatIdentityEscape(t)},ot.regexp_eatCControlLetter=function(t){var e=t.pos;if(t.eat(99)){if(this.regexp_eatControlLetter(t))return!0;t.pos=e}return!1},ot.regexp_eatZero=function(t){return 48===t.current()&&!dt(t.lookahead())&&(t.lastIntValue=0,t.advance(),!0)},ot.regexp_eatControlEscape=function(t){var e=t.current();return 116===e?(t.lastIntValue=9,t.advance(),!0):110===e?(t.lastIntValue=10,t.advance(),!0):118===e?(t.lastIntValue=11,t.advance(),!0):102===e?(t.lastIntValue=12,t.advance(),!0):114===e&&(t.lastIntValue=13,t.advance(),!0)},ot.regexp_eatControlLetter=function(t){var e=t.current();return!!ct(e)&&(t.lastIntValue=e%32,t.advance(),!0)},ot.regexp_eatRegExpUnicodeEscapeSequence=function(t){var e,n=t.pos;if(t.eat(117)){if(this.regexp_eatFixedHexDigits(t,4)){var r=t.lastIntValue;if(t.switchU&&r>=55296&&r<=56319){var i=t.pos;if(t.eat(92)&&t.eat(117)&&this.regexp_eatFixedHexDigits(t,4)){var s=t.lastIntValue;if(s>=56320&&s<=57343)return t.lastIntValue=1024*(r-55296)+(s-56320)+65536,!0}t.pos=i,t.lastIntValue=r}return!0}if(t.switchU&&t.eat(123)&&this.regexp_eatHexDigits(t)&&t.eat(125)&&((e=t.lastIntValue)>=0&&e<=1114111))return!0;t.switchU&&t.raise("Invalid unicode escape"),t.pos=n}return!1},ot.regexp_eatIdentityEscape=function(t){if(t.switchU)return!!this.regexp_eatSyntaxCharacter(t)||!!t.eat(47)&&(t.lastIntValue=47,!0);var e=t.current();return!(99===e||t.switchN&&107===e)&&(t.lastIntValue=e,t.advance(),!0)},ot.regexp_eatDecimalEscape=function(t){t.lastIntValue=0;var e=t.current();if(e>=49&&e<=57){do{t.lastIntValue=10*t.lastIntValue+(e-48),t.advance()}while((e=t.current())>=48&&e<=57);return!0}return!1},ot.regexp_eatCharacterClassEscape=function(t){var e=t.current();if(function(t){return 100===t||68===t||115===t||83===t||119===t||87===t}(e))return t.lastIntValue=-1,t.advance(),!0;if(t.switchU&&this.options.ecmaVersion>=9&&(80===e||112===e)){if(t.lastIntValue=-1,t.advance(),t.eat(123)&&this.regexp_eatUnicodePropertyValueExpression(t)&&t.eat(125))return!0;t.raise("Invalid property name")}return!1},ot.regexp_eatUnicodePropertyValueExpression=function(t){var e=t.pos;if(this.regexp_eatUnicodePropertyName(t)&&t.eat(61)){var n=t.lastStringValue;if(this.regexp_eatUnicodePropertyValue(t)){var r=t.lastStringValue;return this.regexp_validateUnicodePropertyNameAndValue(t,n,r),!0}}if(t.pos=e,this.regexp_eatLoneUnicodePropertyNameOrValue(t)){var i=t.lastStringValue;return this.regexp_validateUnicodePropertyNameOrValue(t,i),!0}return!1},ot.regexp_validateUnicodePropertyNameAndValue=function(t,e,n){at.hasOwnProperty(e)&&-1!==at[e].indexOf(n)||t.raise("Invalid property name")},ot.regexp_validateUnicodePropertyNameOrValue=function(t,e){-1===at.$LONE.indexOf(e)&&t.raise("Invalid property name")},ot.regexp_eatUnicodePropertyName=function(t){var e=0;for(t.lastStringValue="";pt(e=t.current());)t.lastStringValue+=ht(e),t.advance();return""!==t.lastStringValue},ot.regexp_eatUnicodePropertyValue=function(t){var e=0;for(t.lastStringValue="";ft(e=t.current());)t.lastStringValue+=ht(e),t.advance();return""!==t.lastStringValue},ot.regexp_eatLoneUnicodePropertyNameOrValue=function(t){return this.regexp_eatUnicodePropertyValue(t)},ot.regexp_eatCharacterClass=function(t){if(t.eat(91)){if(t.eat(94),this.regexp_classRanges(t),t.eat(93))return!0;t.raise("Unterminated character class")}return!1},ot.regexp_classRanges=function(t){for(;this.regexp_eatClassAtom(t);){var e=t.lastIntValue;if(t.eat(45)&&this.regexp_eatClassAtom(t)){var n=t.lastIntValue;!t.switchU||-1!==e&&-1!==n||t.raise("Invalid character class"),-1!==e&&-1!==n&&e>n&&t.raise("Range out of order in character class")}}},ot.regexp_eatClassAtom=function(t){var e=t.pos;if(t.eat(92)){if(this.regexp_eatClassEscape(t))return!0;if(t.switchU){var n=t.current();(99===n||yt(n))&&t.raise("Invalid class escape"),t.raise("Invalid escape")}t.pos=e}var r=t.current();return 93!==r&&(t.lastIntValue=r,t.advance(),!0)},ot.regexp_eatClassEscape=function(t){var e=t.pos;if(t.eat(98))return t.lastIntValue=8,!0;if(t.switchU&&t.eat(45))return t.lastIntValue=45,!0;if(!t.switchU&&t.eat(99)){if(this.regexp_eatClassControlLetter(t))return!0;t.pos=e}return this.regexp_eatCharacterClassEscape(t)||this.regexp_eatCharacterEscape(t)},ot.regexp_eatClassControlLetter=function(t){var e=t.current();return!(!dt(e)&&95!==e)&&(t.lastIntValue=e%32,t.advance(),!0)},ot.regexp_eatHexEscapeSequence=function(t){var e=t.pos;if(t.eat(120)){if(this.regexp_eatFixedHexDigits(t,2))return!0;t.switchU&&t.raise("Invalid escape"),t.pos=e}return!1},ot.regexp_eatDecimalDigits=function(t){var e=t.pos,n=0;for(t.lastIntValue=0;dt(n=t.current());)t.lastIntValue=10*t.lastIntValue+(n-48),t.advance();return t.pos!==e},ot.regexp_eatHexDigits=function(t){var e=t.pos,n=0;for(t.lastIntValue=0;gt(n=t.current());)t.lastIntValue=16*t.lastIntValue+vt(n),t.advance();return t.pos!==e},ot.regexp_eatLegacyOctalEscapeSequence=function(t){if(this.regexp_eatOctalDigit(t)){var e=t.lastIntValue;if(this.regexp_eatOctalDigit(t)){var n=t.lastIntValue;e<=3&&this.regexp_eatOctalDigit(t)?t.lastIntValue=64*e+8*n+t.lastIntValue:t.lastIntValue=8*e+n}else t.lastIntValue=e;return!0}return!1},ot.regexp_eatOctalDigit=function(t){var e=t.current();return yt(e)?(t.lastIntValue=e-48,t.advance(),!0):(t.lastIntValue=0,!1)},ot.regexp_eatFixedHexDigits=function(t,e){var n=t.pos;t.lastIntValue=0;for(var r=0;r<e;++r){var i=t.current();if(!gt(i))return t.pos=n,!1;t.lastIntValue=16*t.lastIntValue+vt(i),t.advance()}return!0};var mt=function(t){this.type=t.type,this.value=t.value,this.start=t.start,this.end=t.end,t.options.locations&&(this.loc=new D(t,t.startLoc,t.endLoc)),t.options.ranges&&(this.range=[t.start,t.end])},bt=U.prototype;function xt(t){return t<=65535?String.fromCharCode(t):(t-=65536,String.fromCharCode(55296+(t>>10),56320+(1023&t)))}bt.next=function(){this.options.onToken&&this.options.onToken(new mt(this)),this.lastTokEnd=this.end,this.lastTokStart=this.start,this.lastTokEndLoc=this.endLoc,this.lastTokStartLoc=this.startLoc,this.nextToken()},bt.getToken=function(){return this.next(),new mt(this)},"undefined"!=typeof Symbol&&(bt[Symbol.iterator]=function(){var t=this;return{next:function(){var e=t.getToken();return{done:e.type===T.eof,value:e}}}}),bt.curContext=function(){return this.context[this.context.length-1]},bt.nextToken=function(){var t=this.curContext();return t&&t.preserveSpace||this.skipSpace(),this.start=this.pos,this.options.locations&&(this.startLoc=this.curPosition()),this.pos>=this.input.length?this.finishToken(T.eof):t.override?t.override(this):void this.readToken(this.fullCharCodeAtPos())},bt.readToken=function(t){return d(t,this.options.ecmaVersion>=6)||92===t?this.readWord():this.getTokenFromCode(t)},bt.fullCharCodeAtPos=function(){var t=this.input.charCodeAt(this.pos);return t<=55295||t>=57344?t:(t<<10)+this.input.charCodeAt(this.pos+1)-56613888},bt.skipBlockComment=function(){var t,e=this.options.onComment&&this.curPosition(),n=this.pos,r=this.input.indexOf("*/",this.pos+=2);if(-1===r&&this.raise(this.pos-2,"Unterminated comment"),this.pos=r+2,this.options.locations)for(E.lastIndex=n;(t=E.exec(this.input))&&t.index<this.pos;)++this.curLine,this.lineStart=t.index+t[0].length;this.options.onComment&&this.options.onComment(!0,this.input.slice(n+2,r),n,this.pos,e,this.curPosition())},bt.skipLineComment=function(t){for(var e=this.pos,n=this.options.onComment&&this.curPosition(),r=this.input.charCodeAt(this.pos+=t);this.pos<this.input.length&&!k(r);)r=this.input.charCodeAt(++this.pos);this.options.onComment&&this.options.onComment(!1,this.input.slice(e+t,this.pos),e,this.pos,n,this.curPosition())},bt.skipSpace=function(){t:for(;this.pos<this.input.length;){var t=this.input.charCodeAt(this.pos);switch(t){case 32:case 160:++this.pos;break;case 13:10===this.input.charCodeAt(this.pos+1)&&++this.pos;case 10:case 8232:case 8233:++this.pos,this.options.locations&&(++this.curLine,this.lineStart=this.pos);break;case 47:switch(this.input.charCodeAt(this.pos+1)){case 42:this.skipBlockComment();break;case 47:this.skipLineComment(2);break;default:break t}break;default:if(!(t>8&&t<14||t>=5760&&S.test(String.fromCharCode(t))))break t;++this.pos}}},bt.finishToken=function(t,e){this.end=this.pos,this.options.locations&&(this.endLoc=this.curPosition());var n=this.type;this.type=t,this.value=e,this.updateContext(n)},bt.readToken_dot=function(){var t=this.input.charCodeAt(this.pos+1);if(t>=48&&t<=57)return this.readNumber(!0);var e=this.input.charCodeAt(this.pos+2);return this.options.ecmaVersion>=6&&46===t&&46===e?(this.pos+=3,this.finishToken(T.ellipsis)):(++this.pos,this.finishToken(T.dot))},bt.readToken_slash=function(){var t=this.input.charCodeAt(this.pos+1);return this.exprAllowed?(++this.pos,this.readRegexp()):61===t?this.finishOp(T.assign,2):this.finishOp(T.slash,1)},bt.readToken_mult_modulo_exp=function(t){var e=this.input.charCodeAt(this.pos+1),n=1,r=42===t?T.star:T.modulo;return this.options.ecmaVersion>=7&&42===t&&42===e&&(++n,r=T.starstar,e=this.input.charCodeAt(this.pos+2)),61===e?this.finishOp(T.assign,n+1):this.finishOp(r,n)},bt.readToken_pipe_amp=function(t){var e=this.input.charCodeAt(this.pos+1);return e===t?this.finishOp(124===t?T.logicalOR:T.logicalAND,2):61===e?this.finishOp(T.assign,2):this.finishOp(124===t?T.bitwiseOR:T.bitwiseAND,1)},bt.readToken_caret=function(){return 61===this.input.charCodeAt(this.pos+1)?this.finishOp(T.assign,2):this.finishOp(T.bitwiseXOR,1)},bt.readToken_plus_min=function(t){var e=this.input.charCodeAt(this.pos+1);return e===t?45!==e||this.inModule||62!==this.input.charCodeAt(this.pos+2)||0!==this.lastTokEnd&&!w.test(this.input.slice(this.lastTokEnd,this.pos))?this.finishOp(T.incDec,2):(this.skipLineComment(3),this.skipSpace(),this.nextToken()):61===e?this.finishOp(T.assign,2):this.finishOp(T.plusMin,1)},bt.readToken_lt_gt=function(t){var e=this.input.charCodeAt(this.pos+1),n=1;return e===t?(n=62===t&&62===this.input.charCodeAt(this.pos+2)?3:2,61===this.input.charCodeAt(this.pos+n)?this.finishOp(T.assign,n+1):this.finishOp(T.bitShift,n)):33!==e||60!==t||this.inModule||45!==this.input.charCodeAt(this.pos+2)||45!==this.input.charCodeAt(this.pos+3)?(61===e&&(n=2),this.finishOp(T.relational,n)):(this.skipLineComment(4),this.skipSpace(),this.nextToken())},bt.readToken_eq_excl=function(t){var e=this.input.charCodeAt(this.pos+1);return 61===e?this.finishOp(T.equality,61===this.input.charCodeAt(this.pos+2)?3:2):61===t&&62===e&&this.options.ecmaVersion>=6?(this.pos+=2,this.finishToken(T.arrow)):this.finishOp(61===t?T.eq:T.prefix,1)},bt.getTokenFromCode=function(t){switch(t){case 46:return this.readToken_dot();case 40:return++this.pos,this.finishToken(T.parenL);case 41:return++this.pos,this.finishToken(T.parenR);case 59:return++this.pos,this.finishToken(T.semi);case 44:return++this.pos,this.finishToken(T.comma);case 91:return++this.pos,this.finishToken(T.bracketL);case 93:return++this.pos,this.finishToken(T.bracketR);case 123:return++this.pos,this.finishToken(T.braceL);case 125:return++this.pos,this.finishToken(T.braceR);case 58:return++this.pos,this.finishToken(T.colon);case 63:return++this.pos,this.finishToken(T.question);case 96:if(this.options.ecmaVersion<6)break;return++this.pos,this.finishToken(T.backQuote);case 48:var e=this.input.charCodeAt(this.pos+1);if(120===e||88===e)return this.readRadixNumber(16);if(this.options.ecmaVersion>=6){if(111===e||79===e)return this.readRadixNumber(8);if(98===e||66===e)return this.readRadixNumber(2)}case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:return this.readNumber(!1);case 34:case 39:return this.readString(t);case 47:return this.readToken_slash();case 37:case 42:return this.readToken_mult_modulo_exp(t);case 124:case 38:return this.readToken_pipe_amp(t);case 94:return this.readToken_caret();case 43:case 45:return this.readToken_plus_min(t);case 60:case 62:return this.readToken_lt_gt(t);case 61:case 33:return this.readToken_eq_excl(t);case 126:return this.finishOp(T.prefix,1)}this.raise(this.pos,"Unexpected character '"+xt(t)+"'")},bt.finishOp=function(t,e){var n=this.input.slice(this.pos,this.pos+e);return this.pos+=e,this.finishToken(t,n)},bt.readRegexp=function(){for(var t,e,n=this.pos;;){this.pos>=this.input.length&&this.raise(n,"Unterminated regular expression");var r=this.input.charAt(this.pos);if(w.test(r)&&this.raise(n,"Unterminated regular expression"),t)t=!1;else{if("["===r)e=!0;else if("]"===r&&e)e=!1;else if("/"===r&&!e)break;t="\\"===r}++this.pos}var i=this.input.slice(n,this.pos);++this.pos;var s=this.pos,a=this.readWord1();this.containsEsc&&this.unexpected(s);var o=this.regexpState||(this.regexpState=new ut(this));o.reset(n,i,a),this.validateRegExpFlags(o),this.validateRegExpPattern(o);var u=null;try{u=new RegExp(i,a)}catch(t){}return this.finishToken(T.regexp,{pattern:i,flags:a,value:u})},bt.readInt=function(t,e){for(var n=this.pos,r=0,i=0,s=null==e?1/0:e;i<s;++i){var a=this.input.charCodeAt(this.pos),o=void 0;if((o=a>=97?a-97+10:a>=65?a-65+10:a>=48&&a<=57?a-48:1/0)>=t)break;++this.pos,r=r*t+o}return this.pos===n||null!=e&&this.pos-n!==e?null:r},bt.readRadixNumber=function(t){this.pos+=2;var e=this.readInt(t);return null==e&&this.raise(this.start+2,"Expected number in radix "+t),d(this.fullCharCodeAtPos())&&this.raise(this.pos,"Identifier directly after number"),this.finishToken(T.num,e)},bt.readNumber=function(t){var e=this.pos;t||null!==this.readInt(10)||this.raise(e,"Invalid number");var n=this.pos-e>=2&&48===this.input.charCodeAt(e);n&&this.strict&&this.raise(e,"Invalid number"),n&&/[89]/.test(this.input.slice(e,this.pos))&&(n=!1);var r=this.input.charCodeAt(this.pos);46!==r||n||(++this.pos,this.readInt(10),r=this.input.charCodeAt(this.pos)),69!==r&&101!==r||n||(43!==(r=this.input.charCodeAt(++this.pos))&&45!==r||++this.pos,null===this.readInt(10)&&this.raise(e,"Invalid number")),d(this.fullCharCodeAtPos())&&this.raise(this.pos,"Identifier directly after number");var i=this.input.slice(e,this.pos),s=n?parseInt(i,8):parseFloat(i);return this.finishToken(T.num,s)},bt.readCodePoint=function(){var t;if(123===this.input.charCodeAt(this.pos)){this.options.ecmaVersion<6&&this.unexpected();var e=++this.pos;t=this.readHexChar(this.input.indexOf("}",this.pos)-this.pos),++this.pos,t>1114111&&this.invalidStringToken(e,"Code point out of bounds")}else t=this.readHexChar(4);return t},bt.readString=function(t){for(var e="",n=++this.pos;;){this.pos>=this.input.length&&this.raise(this.start,"Unterminated string constant");var r=this.input.charCodeAt(this.pos);if(r===t)break;92===r?(e+=this.input.slice(n,this.pos),e+=this.readEscapedChar(!1),n=this.pos):(k(r,this.options.ecmaVersion>=10)&&this.raise(this.start,"Unterminated string constant"),++this.pos)}return e+=this.input.slice(n,this.pos++),this.finishToken(T.string,e)};var _t={};bt.tryReadTemplateToken=function(){this.inTemplateElement=!0;try{this.readTmplToken()}catch(t){if(t!==_t)throw t;this.readInvalidTemplateToken()}this.inTemplateElement=!1},bt.invalidStringToken=function(t,e){if(this.inTemplateElement&&this.options.ecmaVersion>=9)throw _t;this.raise(t,e)},bt.readTmplToken=function(){for(var t="",e=this.pos;;){this.pos>=this.input.length&&this.raise(this.start,"Unterminated template");var n=this.input.charCodeAt(this.pos);if(96===n||36===n&&123===this.input.charCodeAt(this.pos+1))return this.pos!==this.start||this.type!==T.template&&this.type!==T.invalidTemplate?(t+=this.input.slice(e,this.pos),this.finishToken(T.template,t)):36===n?(this.pos+=2,this.finishToken(T.dollarBraceL)):(++this.pos,this.finishToken(T.backQuote));if(92===n)t+=this.input.slice(e,this.pos),t+=this.readEscapedChar(!0),e=this.pos;else if(k(n)){switch(t+=this.input.slice(e,this.pos),++this.pos,n){case 13:10===this.input.charCodeAt(this.pos)&&++this.pos;case 10:t+="\n";break;default:t+=String.fromCharCode(n)}this.options.locations&&(++this.curLine,this.lineStart=this.pos),e=this.pos}else++this.pos}},bt.readInvalidTemplateToken=function(){for(;this.pos<this.input.length;this.pos++)switch(this.input[this.pos]){case"\\":++this.pos;break;case"$":if("{"!==this.input[this.pos+1])break;case"`":return this.finishToken(T.invalidTemplate,this.input.slice(this.start,this.pos))}this.raise(this.start,"Unterminated template")},bt.readEscapedChar=function(t){var e=this.input.charCodeAt(++this.pos);switch(++this.pos,e){case 110:return"\n";case 114:return"\r";case 120:return String.fromCharCode(this.readHexChar(2));case 117:return xt(this.readCodePoint());case 116:return"\t";case 98:return"\b";case 118:return"\v";case 102:return"\f";case 13:10===this.input.charCodeAt(this.pos)&&++this.pos;case 10:return this.options.locations&&(this.lineStart=this.pos,++this.curLine),"";default:if(e>=48&&e<=55){var n=this.input.substr(this.pos-1,3).match(/^[0-7]+/)[0],r=parseInt(n,8);return r>255&&(n=n.slice(0,-1),r=parseInt(n,8)),this.pos+=n.length-1,e=this.input.charCodeAt(this.pos),"0"===n&&56!==e&&57!==e||!this.strict&&!t||this.invalidStringToken(this.pos-1-n.length,t?"Octal literal in template string":"Octal literal in strict mode"),String.fromCharCode(r)}return String.fromCharCode(e)}},bt.readHexChar=function(t){var e=this.pos,n=this.readInt(16,t);return null===n&&this.invalidStringToken(e,"Bad character escape sequence"),n},bt.readWord1=function(){this.containsEsc=!1;for(var t="",e=!0,n=this.pos,r=this.options.ecmaVersion>=6;this.pos<this.input.length;){var i=this.fullCharCodeAtPos();if(g(i,r))this.pos+=i<=65535?1:2;else{if(92!==i)break;this.containsEsc=!0,t+=this.input.slice(n,this.pos);var s=this.pos;117!==this.input.charCodeAt(++this.pos)&&this.invalidStringToken(this.pos,"Expecting Unicode escape sequence \\uXXXX"),++this.pos;var a=this.readCodePoint();(e?d:g)(a,r)||this.invalidStringToken(s,"Invalid Unicode escape"),t+=xt(a),n=this.pos}e=!1}return t+this.input.slice(n,this.pos)},bt.readWord=function(){var t=this.readWord1(),e=T.name;return this.keywords.test(t)&&(this.containsEsc&&this.raiseRecoverable(this.start,"Escape sequence in keyword "+t),e=x[t]),this.finishToken(e,t)};var Tt,wt,Et,kt="5.7.3";function St(t,e){return new U(e,t).parse()}function Ot(t,e,n){var r=new U(n,t,e);return r.nextToken(),r.parseExpression()}function At(t,e){return new U(e,t)}function Pt(t,e,n){Tt=t,wt=e,Et=n}},function(t,e,n){"use strict";t.exports="#version 300 es\n__HEADER__;\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nconst float LOOP_MAX = __LOOP_MAX__;\n\n__CONSTANTS__;\n\nin vec2 vTexCoord;\n\nvec2 integerMod(vec2 x, float y) {\n  vec2 res = floor(mod(x, y));\n  return res * step(1.0 - floor(y), -res);\n}\n\nvec3 integerMod(vec3 x, float y) {\n  vec3 res = floor(mod(x, y));\n  return res * step(1.0 - floor(y), -res);\n}\n\nvec4 integerMod(vec4 x, vec4 y) {\n  vec4 res = floor(mod(x, y));\n  return res * step(1.0 - floor(y), -res);\n}\n\nfloat integerMod(float x, float y) {\n  float res = floor(mod(x, y));\n  return res * (res > floor(y) - 1.0 ? 0.0 : 1.0);\n}\n\nint integerMod(int x, int y) {\n  return x - (y * int(x/y));\n}\n\n__DIVIDE_WITH_INTEGER_CHECK__;\n\n// Here be dragons!\n// DO NOT OPTIMIZE THIS CODE\n// YOU WILL BREAK SOMETHING ON SOMEBODY'S MACHINE\n// LEAVE IT AS IT IS, LEST YOU WASTE YOUR OWN TIME\nconst vec2 MAGIC_VEC = vec2(1.0, -256.0);\nconst vec4 SCALE_FACTOR = vec4(1.0, 256.0, 65536.0, 0.0);\nconst vec4 SCALE_FACTOR_INV = vec4(1.0, 0.00390625, 0.0000152587890625, 0.0); // 1, 1/256, 1/65536\nfloat decode32(vec4 rgba) {\n  __DECODE32_ENDIANNESS__;\n  rgba *= 255.0;\n  vec2 gte128;\n  gte128.x = rgba.b >= 128.0 ? 1.0 : 0.0;\n  gte128.y = rgba.a >= 128.0 ? 1.0 : 0.0;\n  float exponent = 2.0 * rgba.a - 127.0 + dot(gte128, MAGIC_VEC);\n  float res = exp2(round(exponent));\n  rgba.b = rgba.b - 128.0 * gte128.x;\n  res = dot(rgba, SCALE_FACTOR) * exp2(round(exponent-23.0)) + res;\n  res *= gte128.y * -2.0 + 1.0;\n  return res;\n}\n\nvec4 encode32(float f) {\n  float F = abs(f);\n  float sign = f < 0.0 ? 1.0 : 0.0;\n  float exponent = floor(log2(F));\n  float mantissa = (exp2(-exponent) * F);\n  // exponent += floor(log2(mantissa));\n  vec4 rgba = vec4(F * exp2(23.0-exponent)) * SCALE_FACTOR_INV;\n  rgba.rg = integerMod(rgba.rg, 256.0);\n  rgba.b = integerMod(rgba.b, 128.0);\n  rgba.a = exponent*0.5 + 63.5;\n  rgba.ba += vec2(integerMod(exponent+127.0, 2.0), sign) * 128.0;\n  rgba = floor(rgba);\n  rgba *= 0.003921569; // 1/255\n  __ENCODE32_ENDIANNESS__;\n  return rgba;\n}\n// Dragons end here\n\nfloat decode(vec4 rgba, int x, int bitRatio) {\n  if (bitRatio == 1) {\n    return decode32(rgba);\n  }\n  __DECODE32_ENDIANNESS__;\n  int channel = integerMod(x, bitRatio);\n  if (bitRatio == 4) {\n    return rgba[channel] * 255.0;\n  }\n  else {\n    return rgba[channel*2] * 255.0 + rgba[channel*2 + 1] * 65280.0;\n  }\n}\n\nint index;\nivec3 threadId;\n\nivec3 indexTo3D(int idx, ivec3 texDim) {\n  int z = int(idx / (texDim.x * texDim.y));\n  idx -= z * int(texDim.x * texDim.y);\n  int y = int(idx / texDim.x);\n  int x = int(integerMod(idx, texDim.x));\n  return ivec3(x, y, z);\n}\n\nfloat get(sampler2D tex, ivec2 texSize, ivec3 texDim, int bitRatio,  int z, int y, int x) {\n  ivec3 xyz = ivec3(x, y, z);\n  __GET_WRAPAROUND__;\n  int index = xyz.x + texDim.x * (xyz.y + texDim.y * xyz.z);\n  __GET_TEXTURE_CHANNEL__;\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  __GET_TEXTURE_INDEX__;\n  vec4 texel = texture(tex, st / vec2(texSize));\n  __GET_RESULT__;\n  \n}\n\nvec4 getImage2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  ivec3 xyz = ivec3(x, y, z);\n  __GET_WRAPAROUND__;\n  int index = xyz.x + texDim.x * (xyz.y + texDim.y * xyz.z);\n  __GET_TEXTURE_CHANNEL__;\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  __GET_TEXTURE_INDEX__;\n  return texture(tex, st / vec2(texSize));\n}\n\nvec4 getImage3D(sampler2DArray tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  ivec3 xyz = ivec3(x, y, z);\n  __GET_WRAPAROUND__;\n  int index = xyz.x + texDim.x * (xyz.y + texDim.y * xyz.z);\n  __GET_TEXTURE_CHANNEL__;\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  __GET_TEXTURE_INDEX__;\n  return texture(tex, vec3(st / vec2(texSize), z));\n}\n\nfloat get(sampler2D tex, ivec2 texSize, ivec3 texDim, int bitRatio, int y, int x) {\n  return get(tex, texSize, texDim, bitRatio, 0, y, x);\n}\n\nfloat get(sampler2D tex, ivec2 texSize, ivec3 texDim, int bitRatio, int x) {\n  return get(tex, texSize, texDim, bitRatio, 0, 0, x);\n}\n\nvec4 getImage2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int y, int x) {\n  return getImage2D(tex, texSize, texDim, 0, y, x);\n}\n\nvec4 getImage2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int x) {\n  return getImage2D(tex, texSize, texDim, 0, 0, x);\n}\n\nvec4 actualColor;\nvoid color(float r, float g, float b, float a) {\n  actualColor = vec4(r,g,b,a);\n}\n\nvoid color(float r, float g, float b) {\n  color(r,g,b,1.0);\n}\n\n__MAIN_PARAMS__;\n__MAIN_CONSTANTS__;\n__KERNEL__;\n\nvoid main(void) {\n  index = int(vTexCoord.s * float(uTexSize.x)) + int(vTexCoord.t * float(uTexSize.y)) * uTexSize.x;\n  __MAIN_RESULT__;\n}"},function(t,e,n){"use strict";t.exports="#version 300 es\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nin vec2 aPos;\nin vec2 aTexCoord;\n\nout vec2 vTexCoord;\nuniform vec2 ratio;\n\nvoid main(void) {\n  gl_Position = vec4((aPos + vec2(1)) * ratio + vec2(-1), 0, 1);\n  vTexCoord = aTexCoord;\n}"},function(t,e,n){"use strict";var r=n(13),i=n(143);function s(t){return/^function /.test(t)&&(t=t.substring(9)),t.replace(/[_]typeof/g,"typeof")}function a(t){return t.replace(/[_]typeof/g,"typeof")}t.exports=function(t,e){return"() => {\n    "+i.toString()+";\n    const utils = {\n      allPropertiesOf: "+a(r.allPropertiesOf.toString())+",\n      clone: "+a(r.clone.toString())+",\n      checkOutput: "+a(r.checkOutput.toString())+"\n    };\n    const Utils = utils;\n    let Input = function() {};\n    class "+(e||"Kernel")+" {\n      constructor() {        \n        this.argumentsLength = 0;\n        this._canvas = null;\n        this._webGl = null;\n        this.built = false;\n        this.program = null;\n        this.paramNames = "+JSON.stringify(t.paramNames)+";\n        this.paramTypes = "+JSON.stringify(t.paramTypes)+";\n        this.texSize = "+JSON.stringify(t.texSize)+";\n        this.output = "+JSON.stringify(t.output)+";\n        this._kernelString = `"+t._kernelString+"`;\n        this.output = "+JSON.stringify(t.output)+";\n\t\t    this.run = function() {\n          this.run = null;\n          this.build();\n          return this.run.apply(this, arguments);\n        }.bind(this);\n        this.thread = {\n          x: 0,\n          y: 0,\n          z: 0\n        };\n      }\n      setCanvas(canvas) { this._canvas = canvas; return this; }\n      setWebGl(webGl) { this._webGl = webGl; return this; }\n      setInput(Type) { Input = Type; }\n      "+s(t.build.toString())+"\n      "+s(t.setupParams.toString())+"\n      "+s(t.setupConstants.toString())+"\n      run () { "+t.kernelString+" }\n      getKernelString() { return this._kernelString; }\n      "+s(t.validateOptions.toString())+"\n    };\n    return kernelRunShortcut(new Kernel());\n  };"}},function(t,e,n){"use strict";var r=function(){function t(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}return function(e,n,r){return n&&t(e.prototype,n),r&&t(e,r),e}}();var i=n(95),s=n(13);t.exports=function(t){function e(){return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),function(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}(this,(e.__proto__||Object.getPrototypeOf(e)).apply(this,arguments))}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}(e,i),r(e,[{key:"validateOptions",value:function(){this.texSize=s.dimToTexSize({floatTextures:this.floatTextures,floatOutput:this.floatOutput},this.output,!0)}}]),e}()},function(t,e,n){"use strict";var r=function(){function t(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}return function(e,n,r){return n&&t(e.prototype,n),r&&t(e,r),e}}();var i=n(146),s=n(13);t.exports=function(t){function e(){return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),function(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}(this,(e.__proto__||Object.getPrototypeOf(e)).apply(this,arguments))}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}(e,i),r(e,[{key:"validateOptions",value:function(){this._webGl.getExtension("EXT_color_buffer_float"),this.texSize=s.dimToTexSize({floatTextures:this.floatTextures,floatOutput:this.floatOutput},this.output,!0)}}]),e}()},function(t,e,n){"use strict";var r=function(){function t(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}return function(e,n,r){return n&&t(e.prototype,n),r&&t(e,r),e}}();n(200);t.exports=function(){function t(){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t)}return r(t,null,[{key:"validateKernelObj",value:function(t){if(null===t)throw"KernelObj being validated is NULL";if("string"==typeof t){try{t=JSON.parse(t)}catch(t){throw console.error(t),"Failed to convert KernelObj from JSON string"}if(null===t)throw"Invalid (NULL) KernelObj JSON string representation"}if(!0!==t.isKernelObj)throw"Failed missing isKernelObj flag check";return t}},{key:"loadKernelObj",value:function(t,e){t=validateKernelObj(t)}}]),t}()},function(t,e,n){"use strict";var r=n(13);t.exports=function(t,e){var n=e.toString();return new Function("return function "+t+" ("+r.getParamNamesFromString(n).join(", ")+") {"+r.getFunctionBodyFromString(n)+"}")()}},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var r=function(){function t(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}return function(e,n,r){return n&&t(e.prototype,n),r&&t(e,r),e}}(),i=n(21);var s=function(t){function e(t){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e);var n=function(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}(this,(e.__proto__||Object.getPrototypeOf(e)).call(this,{objectMode:!0}));if(!(t=t||{}).neuralNetwork)throw new Error("no neural network specified");var r=t.neuralNetwork;n.neuralNetwork=r,n.dataFormatDetermined=!1,n.i=0,n.size=0,n.count=0,n.sum=0,n.floodCallback=t.floodCallback,n.doneTrainingCallback=t.doneTrainingCallback,r.updateTrainingOptions(t);var i=r.trainOpts;return n.iterations=i.iterations,n.errorThresh=i.errorThresh,n.log=i.log,n.logPeriod=i.logPeriod,n.callbackPeriod=i.callbackPeriod,n.callback=i.callback,n.on("finish",n.finishStreamIteration.bind(n)),n}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}(e,i.Writable),r(e,[{key:"endInputs",value:function(){this.write(!1)}},{key:"_write",value:function(t,e,n){if(!t)return this.emit("finish"),n();if(!this.dataFormatDetermined)return this.size++,this.neuralNetwork.addFormat(t),this.firstDatum=this.firstDatum||t,n();this.count++;var r=this.neuralNetwork.formatData(t);this.sum+=this.neuralNetwork.trainPattern(r[0],!0),n()}},{key:"finishStreamIteration",value:function(){if(this.dataFormatDetermined&&this.size!==this.count&&this.log("This iteration's data length was different from the first."),!this.dataFormatDetermined){var t=this.neuralNetwork.formatData(this.firstDatum);return this.neuralNetwork.verifyIsInitialized(t),this.dataFormatDetermined=!0,void("function"==typeof this.floodCallback&&this.floodCallback())}var e=this.sum/this.size;if(this.log&&this.i%this.logPeriod==0&&this.log("iterations: "+this.i+", training error: "+e),this.callback&&this.i%this.callbackPeriod==0&&this.callback({error:e,iterations:this.i}),this.sum=0,this.count=0,this.i++,this.i<this.iterations&&e>this.errorThresh){if("function"==typeof this.floodCallback)return this.floodCallback()}else if("function"==typeof this.doneTrainingCallback)return this.doneTrainingCallback({error:e,iterations:this.i})}}]),e}();e.default=s},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var r=s(n(31)),i=s(n(213));function s(t){return t&&t.__esModule?t:{default:t}}var a=function(t){function e(t,n){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e);var r=function(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}(this,(e.__proto__||Object.getPrototypeOf(e)).call(this,t,n));return r.rows=t,r.columns=n,r.weights=(0,i.default)(t*n),r.deltas=(0,i.default)(t*n),r}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}(e,r.default),e}();e.default=a},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default=function(t,e){t.rows=parseInt(e.rows),t.columns=parseInt(e.columns),t.weights=e.weights.slice(0),t.deltas=e.deltas.slice(0);for(var n=0;n<e.weights.length;n++)t.weights[n]=-e.weights[n],t.deltas[n]=0}},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default=function(t,e,n){for(var r=0;r<e.weights.length;r++)t.weights[r]=e.weights[r]+n.weights[r],t.deltas[r]=0}},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default=function(t,e,n){for(var r=0;r<t.deltas.length;r++)e.deltas[r]=t.deltas[r],n.deltas[r]=t.deltas[r]}},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default=function(t){for(var e=0;e<t.weights.length;e++)t.weights[e]=1,t.deltas[e]=0}},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default=function(t,e,n){for(var r=e.rows,i=e.columns,s=n.columns,a=0;a<r;a++)for(var o=i*a,u=s*a,h=0;h<s;h++){for(var l=0,c=0;c<i;c++){var p=s*c,f=o+c,d=p+h;l+=e.weights[f]*n.weights[d],e.deltas[f]=0,n.deltas[d]=0}t.weights[u+h]=l}}},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default=function(t,e,n){for(var r=e.rows,i=e.columns,s=n.columns,a=0;a<r;a++)for(var o=i*a,u=s*a,h=0;h<s;h++)for(var l=0;l<i;l++){var c=s*l,p=o+l,f=c+h,d=t.deltas[u+h];e.deltas[p]+=n.weights[f]*d,n.deltas[f]+=e.weights[p]*d}}},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default=function(t,e,n){for(var r=e.weights,i=0;i<r.length;i++)t.weights[i]=e.weights[i]*n.weights[i],t.deltas[i]=0}},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default=function(t,e,n){for(var r=0;r<e.weights.length;r++)e.deltas[r]=n.weights[r]*t.deltas[r],n.deltas[r]=e.weights[r]*t.deltas[r]}},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default=function(t,e){for(var n=0;n<e.weights.length;n++)t.weights[n]=Math.max(0,e.weights[n]),t.deltas[n]=0}},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default=function(t,e){for(var n=0;n<t.deltas.length;n++)e.deltas[n]=e.weights[n]>0?t.deltas[n]:0}},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default=function(t,e,n){for(var r=e.columns,i=r*n,s=0;s<r;s++)t.weights[s]=e.weights[i+s],t.deltas[s]=0}},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default=function(t,e,n){for(var r=e.columns,i=r*n,s=0;s<r;s++)e.deltas[i+s]=t.deltas[s]}},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default=function(t,e){for(var n=0;n<e.weights.length;n++)t.weights[n]=1/(1+Math.exp(-e.weights[n])),t.deltas[n]=0}},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default=function(t,e){for(var n=0;n<t.deltas.length;n++){var r=t.weights[n];e.deltas[n]=r*(1-r)*t.deltas[n]}}},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default=function(t,e){for(var n=0;n<e.weights.length;n++)t.weights[n]=Math.tanh(e.weights[n]),t.deltas[n]=0}},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default=function(t,e){for(var n=0;n<t.deltas.length;n++){var r=t.weights[n];e.deltas[n]=(1-r*r)*t.deltas[n]}}},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default=function(t,e){this.length=0,this.prop=e;for(var n=this.table={},r=0;r<t.length;r++)for(var i=t[r],s=i[e],a=0;a<s.length;a++)for(var o in s[a])n.hasOwnProperty(o)||(n[o]=this.length++)}},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var r=function(){function t(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}return function(e,n,r){return n&&t(e.prototype,n),r&&t(e,r),e}}(),i=(a(n(31)),a(n(218))),s=a(n(147));function a(t){return t&&t.__esModule?t:{default:t}}var o=function(t){function e(){return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),function(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}(this,(e.__proto__||Object.getPrototypeOf(e)).apply(this,arguments))}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}(e,s.default),r(e,[{key:"getModel",value:function(t,e){return i.default.prototype.getModel.call(this,t,e)}},{key:"getEquation",value:function(t,e,n,r){return i.default.prototype.getEquation.call(this,t,e,n,r)}}]),e}();e.default=o},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var r=function(){function t(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}return function(e,n,r){return n&&t(e.prototype,n),r&&t(e,r),e}}(),i=(a(n(31)),a(n(219))),s=a(n(147));function a(t){return t&&t.__esModule?t:{default:t}}var o=function(t){function e(){return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),function(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}(this,(e.__proto__||Object.getPrototypeOf(e)).apply(this,arguments))}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}(e,s.default),r(e,[{key:"getModel",value:function(t,e){return i.default.prototype.getModel(t,e)}},{key:"getEquation",value:function(t,e,n,r){return i.default.prototype.getEquation(t,e,n,r)}}]),e}();e.default=o},function(t,e,n){"use strict";function r(t){if(Array.isArray(t)){for(var e=0,n=Array(t.length);e<t.length;e++)n[e]=t[e];return n}return Array.from(t)}Object.defineProperty(e,"__esModule",{value:!0}),e.default=function(t,e){var n="number"==typeof t.inputSize&&"number"==typeof t.outputSize&&t.inputSize>0&&t.outputSize>0&&[t.inputSize].concat(r(t.hiddenLayers),[t.outputSize]);if((e=Object.assign({line:{width:"0.5",color:"black"},inputs:{color:"rgba(0, 128, 0, 0.5)",label:!1},outputs:{color:"rgba(100, 149, 237, 0.5)"},hidden:{color:"rgba(255, 127, 80, 0.5)"},fontSize:"14px",radius:"8",width:"400",height:"250"},e)).inputs.label=e.inputs.label.length==t.inputSize&&e.inputs.label,n){var i='<svg  xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="'+e.width+'" height="'+e.height+'">',s=e.width/n.length;return n.forEach(function(t,a){var o=e.height/t;[].concat(r(Array(t))).forEach(function(t,r){if(0==a)i+='<rect x="'+(s/2-e.radius)+'" y="'+(o/2+r*o-e.radius)+'" width="'+2*e.radius+'" height="'+2*e.radius+'" stroke="black" stroke-width="1" fill="'+e.inputs.color+'" />',i+='<line x1="'+s/4+'" y1="'+(o/2+r*o)+'" x2="'+(s/2-e.radius)+'" y2="'+(o/2+r*o)+'" style="stroke:'+e.line.color+";stroke-width:"+e.line.width+'" />',e.inputs.label&&(i+='<text x="'+s/8+'" y="'+(o/2+r*o-5)+'" fill="black" font-size= "'+e.fontSize+'">'+e.inputs.label[r]+"</text>");else{var u=e.height/n[a-1];a==n.length-1?(i+='<circle cx="'+(s/2+a*s)+'" cy="'+(o/2+r*o)+'" r="'+e.radius+'" stroke="black" stroke-width="1" fill="'+e.outputs.color+'" />',i+='<line x1="'+(s/2+a*s+e.radius)+'" y1="'+(o/2+r*o)+'" x2="'+(s/2+a*s+s/4)+'" y2="'+(o/2+r*o)+'" style="stroke:'+e.line.color+";stroke-width:"+e.line.width+'" />'):i+='<circle cx="'+(s/2+a*s)+'" cy="'+(o/2+r*o)+'" r="'+e.radius+'" stroke="black" stroke-width="1" fill="'+e.hidden.color+'" />';for(var h=0;h<n[a-1];h++)i+='<line x1="'+(s/2+(a-1)*s+e.radius)+'" y1="'+(u/2+h*u)+'" x2="'+(s/2+a*s-e.radius)+'" y2="'+(o/2+r*o)+'" style="stroke:'+e.line.color+";stroke-width:"+e.line.width+'" />'}})}),i+="</svg>"}return!1}}]));